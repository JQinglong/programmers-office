<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker on Programmers Office</title><link>https://jqinglong.github.io/programmers-office/tags/docker/</link><description>Recent content in Docker on Programmers Office</description><generator>Hugo -- gohugo.io</generator><language>ja-JP</language><lastBuildDate>Sun, 28 Jul 2019 01:01:12 +0000</lastBuildDate><atom:link href="https://jqinglong.github.io/programmers-office/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Kubernetes・GKEでの公開</title><link>https://jqinglong.github.io/programmers-office/kubernetes%E3%83%BBgke%E3%81%A7%E3%81%AE%E5%85%AC%E9%96%8B/</link><pubDate>Sun, 28 Jul 2019 01:01:12 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/kubernetes%E3%83%BBgke%E3%81%A7%E3%81%AE%E5%85%AC%E9%96%8B/</guid><description>続きます。Docker イメージを Google Container Registry に登録 kubectl で設定を行うためのyamlファイル作成 上記でGoogle Container Registryに登録したDockerイメージをGKE（GCP の Kubernetes Engine）で公開します。 今回は、APIだけを公開するということで</description></item><item><title>Docker内のNuxt.jsサイトを公開する</title><link>https://jqinglong.github.io/programmers-office/docker%E5%86%85%E3%81%AEnuxt-js%E3%82%B5%E3%82%A4%E3%83%88%E3%82%92%E5%85%AC%E9%96%8B%E3%81%99%E3%82%8B/</link><pubDate>Fri, 10 May 2019 20:49:51 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/docker%E5%86%85%E3%81%AEnuxt-js%E3%82%B5%E3%82%A4%E3%83%88%E3%82%92%E5%85%AC%E9%96%8B%E3%81%99%E3%82%8B/</guid><description>Docker内に構築したNuxt.jsのサイトを公開する、条件として、公開サイトもDockerで構築し、かつ、ソースはボリューム機能でDocker外と共有とする。無料で。 なかなかハードルが高かったですが、できました！ Docker環境をどこに</description></item><item><title>タイタニックアプリを作ろう（Nuxt.js 開発環境の基本）</title><link>https://jqinglong.github.io/programmers-office/%E3%82%BF%E3%82%A4%E3%82%BF%E3%83%8B%E3%83%83%E3%82%AF%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86%EF%BC%88nuxt-js-%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83%E3%81%AE%E5%9F%BA%E6%9C%AC/</link><pubDate>Sun, 05 May 2019 00:21:17 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%82%BF%E3%82%A4%E3%82%BF%E3%83%8B%E3%83%83%E3%82%AF%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86%EF%BC%88nuxt-js-%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83%E3%81%AE%E5%9F%BA%E6%9C%AC/</guid><description>Kaggleのタイタニック問題は、機械学習の基礎として面白いので、それを活用し、かつ、技術書典の2冊で学んだことも生かして、アプリを作ってみましょう。 Kaggleのタイタニック問題で機械学習 Nuxt.js と Python でつくるぬるさく AI アプリ開発入門 コンテナ時代</description></item><item><title>Nuxt.js と Python でつくるぬるさく AI アプリ開発入門</title><link>https://jqinglong.github.io/programmers-office/nuxt-js-%E3%81%A8-python-%E3%81%A6%E3%82%99%E3%81%A4%E3%81%8F%E3%82%8B%E3%81%AC%E3%82%8B%E3%81%95%E3%81%8F-ai-%E3%82%A2%E3%83%95%E3%82%9A%E3%83%AA%E9%96%8B%E7%99%BA%E5%85%A5%E9%96%80/</link><pubDate>Thu, 02 May 2019 06:49:11 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/nuxt-js-%E3%81%A8-python-%E3%81%A6%E3%82%99%E3%81%A4%E3%81%8F%E3%82%8B%E3%81%AC%E3%82%8B%E3%81%95%E3%81%8F-ai-%E3%82%A2%E3%83%95%E3%82%9A%E3%83%AA%E9%96%8B%E7%99%BA%E5%85%A5%E9%96%80/</guid><description>技術書典6で購入した本2冊目。 これも素晴らしい。#技術書典6 の #ぬるさくAI ですが 14時に完売しました！！ ご購入いただいた皆様、本当にありがとうございました！！！ BOOTHでのpdf販売を同時に開始しましたので ぜひ、#技術書典 にお越しいただ</description></item><item><title>コンテナ時代のWebサービスの作り方</title><link>https://jqinglong.github.io/programmers-office/%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E6%99%82%E4%BB%A3%E3%81%AEweb%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%81%AE%E4%BD%9C%E3%82%8A%E6%96%B9/</link><pubDate>Sat, 27 Apr 2019 15:06:46 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E6%99%82%E4%BB%A3%E3%81%AEweb%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%81%AE%E4%BD%9C%E3%82%8A%E6%96%B9/</guid><description>技術書典6で購入した本１冊目。 ガチで役に立つ本でした。 コンテナ時代のWebサービスの作り方 | 楽描商店 https://t.co/xFdOX3orNn 技術書典6で頒布した本をboothにて委託しております。ご活用ください。#booth_pm #技術書典 &amp;mdash; とまと（nasum）技術書典え35楽</description></item><item><title>Docker 環境をステージング環境へ（GCP編）</title><link>https://jqinglong.github.io/programmers-office/docker-%E7%92%B0%E5%A2%83%E3%82%92%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E7%92%B0%E5%A2%83%E3%81%B8%EF%BC%88gcp%E7%B7%A8%EF%BC%89/</link><pubDate>Sun, 20 Jan 2019 04:57:47 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/docker-%E7%92%B0%E5%A2%83%E3%82%92%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E7%92%B0%E5%A2%83%E3%81%B8%EF%BC%88gcp%E7%B7%A8%EF%BC%89/</guid><description>GCP環境にDockerコンテナを作る方法はいくつかあるようです。 ・GCE（Compute Engine）のVMインスタンス作成時に、コンテナ イメージをデプロイ ・Google Kubernetes Engine（GKE）にクラスタ環境を構築してデプロイ ・その他色々</description></item><item><title>Docker push Google Container Registry 編</title><link>https://jqinglong.github.io/programmers-office/docker-push-google-container-registry-%E7%B7%A8/</link><pubDate>Sun, 20 Jan 2019 02:07:55 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/docker-push-google-container-registry-%E7%B7%A8/</guid><description>さらに新しい編。ドカベンか！ ドカベン プロ野球編 （1-52巻 全巻） / 水島新司 / 秋田書店posted with カエレバ 楽天市場 Amazon 7net 今度は、Google Container Registry へのpushを試してみます。 始める前の準備 Container Registry のクイックスタート https://cloud.google.com/container-registry/docs/quickstart?hl=ja プロジェクトは既存のものを使用し</description></item><item><title>Docker push AWS ECR 編</title><link>https://jqinglong.github.io/programmers-office/docker-push-aws-ecr-%E7%B7%A8/</link><pubDate>Sat, 19 Jan 2019 05:33:30 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/docker-push-aws-ecr-%E7%B7%A8/</guid><description>色々な編ができていく・・・ ずっとはまっていてもダメなので、ちょっとGitLabからのPullはどこかで質問することにします。 そして、AWS ECS で pull するのであれば、当然相性良いだろうと思われる、ECR にpushしてみます。 イメージのプッシュ https://docs.aws.amazon.com/ja_jp/AmazonECR/latest/userguide/docker-push-ecr-image.html も</description></item><item><title>Docker 環境をステージング環境へ（Docker pull編）part1</title><link>https://jqinglong.github.io/programmers-office/docker-%E7%92%B0%E5%A2%83%E3%82%92%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E7%92%B0%E5%A2%83%E3%81%B8%EF%BC%88docker-pull%E7%B7%A8%EF%BC%89part1/</link><pubDate>Mon, 14 Jan 2019 14:36:14 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/docker-%E7%92%B0%E5%A2%83%E3%82%92%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E7%92%B0%E5%A2%83%E3%81%B8%EF%BC%88docker-pull%E7%B7%A8%EF%BC%89part1/</guid><description>docker pushができたので、今度は、サーバ側からpullします。 サーバは、GCPのつもりでしたが、Mgentoの検証を行っていたAWSを使うか、と考え、それならば、Elastic Container Serviceを使ってみることにします。 Elastic Container Service（EC</description></item><item><title>Docker 環境をステージング環境へ（Docker push編）</title><link>https://jqinglong.github.io/programmers-office/docker-%E7%92%B0%E5%A2%83%E3%82%92%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E7%92%B0%E5%A2%83%E3%81%B8%EF%BC%88docker-push%E7%B7%A8%EF%BC%89/</link><pubDate>Mon, 14 Jan 2019 10:25:10 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/docker-%E7%92%B0%E5%A2%83%E3%82%92%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E7%92%B0%E5%A2%83%E3%81%B8%EF%BC%88docker-push%E7%B7%A8%EF%BC%89/</guid><description>まだ、全然途中ですが、いったんベンダー機能とショップ画面が見えるようになったところで、これを別サーバ（ステージング環境のつもり）に持っていきたいと思います。 Docker力強化の目的もあります。 Docker イメージのレジストリサービス ローカル開発環境の</description></item><item><title>WooCommerceを試す</title><link>https://jqinglong.github.io/programmers-office/woocommerce%E3%82%92%E8%A9%A6%E3%81%99/</link><pubDate>Sun, 13 Jan 2019 01:52:34 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/woocommerce%E3%82%92%E8%A9%A6%E3%81%99/</guid><description>MagentoのDocker環境を作った訳ですが、サンプルデータを後から投入しようとすると、やはり、「PHP Fatal error: Allowed memory size of xxx bytes exhausted」が発生したりして、Dockerの出来合いの環境ならもう少しすんなり行くかなと言う期待は、あまり応</description></item><item><title>DockerでMagento環境を構築する</title><link>https://jqinglong.github.io/programmers-office/docker%E3%81%A7magento%E7%92%B0%E5%A2%83%E3%82%92%E6%A7%8B%E7%AF%89%E3%81%99%E3%82%8B/</link><pubDate>Sun, 06 Jan 2019 09:52:07 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/docker%E3%81%A7magento%E7%92%B0%E5%A2%83%E3%82%92%E6%A7%8B%E7%AF%89%E3%81%99%E3%82%8B/</guid><description>Dockerで、ビジュアルに、Magento環境を構築していきたいと思います。 参考情報 https://qiita.com/kzkiq2nd/items/29f69c156f6f6e2fb215 を入り口として、 https://qiita.com/kzkiq2nd/items/b8162cfc41d13616f861 https://principle-works.jp/blog/how2runm2ondocker-apache/ https://principle-works.jp/blog/how2runm2ondocker-compose/ も参照。 しつつ、いかにビジュアルに構築するかを考えます。 イメージ検索 まずは、Kitematic内で検索してみます。 最初は、一つしか</description></item><item><title>MacにDocker環境をビジュアルに構築する</title><link>https://jqinglong.github.io/programmers-office/mac%E3%81%ABdocker%E7%92%B0%E5%A2%83%E3%82%92%E3%83%93%E3%82%B8%E3%83%A5%E3%82%A2%E3%83%AB%E3%81%AB%E6%A7%8B%E7%AF%89%E3%81%99%E3%82%8B/</link><pubDate>Sat, 05 Jan 2019 22:17:45 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/mac%E3%81%ABdocker%E7%92%B0%E5%A2%83%E3%82%92%E3%83%93%E3%82%B8%E3%83%A5%E3%82%A2%E3%83%AB%E3%81%AB%E6%A7%8B%E7%AF%89%E3%81%99%E3%82%8B/</guid><description>目的 2018年11月にMagentoが2.3にバージョンアップしたため、その環境を作りたい。 しかし、現在AWSに構築している環境をバージョンアップするのは、素人には難しそう。そもそも、現状が綺麗にできていない気がするので、クリーンインストー</description></item><item><title>サイト引っ越し、そして、再引っ越し（Part2）</title><link>https://jqinglong.github.io/programmers-office/%E3%82%B5%E3%82%A4%E3%83%88%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97%E3%80%81%E3%81%9D%E3%81%97%E3%81%A6%E3%80%81%E5%86%8D%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97%EF%BC%88part2%EF%BC%89/</link><pubDate>Sat, 22 Dec 2018 09:09:33 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%82%B5%E3%82%A4%E3%83%88%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97%E3%80%81%E3%81%9D%E3%81%97%E3%81%A6%E3%80%81%E5%86%8D%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97%EF%BC%88part2%EF%BC%89/</guid><description>WordPressサイトを引っ越したものの、なかなか苦労しましたという話の後編。 前編は サイト引っ越し、そして、再引っ越し（Part1） WordPressサイトの引っ越し方法 色々あると思いますが、毎回検討するのは、こちらのプラグイン。 All-in-One WP Migration –</description></item><item><title>サイト引っ越し、そして、再引っ越し（Part1）</title><link>https://jqinglong.github.io/programmers-office/%E3%82%B5%E3%82%A4%E3%83%88%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97%E3%80%81%E3%81%9D%E3%81%97%E3%81%A6%E3%80%81%E5%86%8D%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97%EF%BC%88part1%EF%BC%89/</link><pubDate>Sat, 22 Dec 2018 02:30:46 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%82%B5%E3%82%A4%E3%83%88%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97%E3%80%81%E3%81%9D%E3%81%97%E3%81%A6%E3%80%81%E5%86%8D%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97%EF%BC%88part1%EF%BC%89/</guid><description>サイト引っ越しの目的 Lighthouseを知って調査してみると、そういえばこのご時世にHTTPS対応されていない。 また、体感としてページの読み込みが遅い。 サイト構成も、イマイチに感じられてきた。 ということで、引っ越しをすることにしました。 さ</description></item></channel></rss>