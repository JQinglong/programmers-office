<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vuetify on Programmers Office</title><link>https://jqinglong.github.io/programmers-office/tags/vuetify/</link><description>Recent content in Vuetify on Programmers Office</description><generator>Hugo -- gohugo.io</generator><language>ja-JP</language><lastBuildDate>Sat, 08 Jun 2019 23:24:33 +0000</lastBuildDate><atom:link href="https://jqinglong.github.io/programmers-office/tags/vuetify/index.xml" rel="self" type="application/rss+xml"/><item><title>ぬるさく画面に再チャレンジ</title><link>https://jqinglong.github.io/programmers-office/%E3%81%AC%E3%82%8B%E3%81%95%E3%81%8F%E7%94%BB%E9%9D%A2%E3%81%AB%E5%86%8D%E3%83%81%E3%83%A3%E3%83%AC%E3%83%B3%E3%82%B8/</link><pubDate>Sat, 08 Jun 2019 23:24:33 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%81%AC%E3%82%8B%E3%81%95%E3%81%8F%E7%94%BB%E9%9D%A2%E3%81%AB%E5%86%8D%E3%83%81%E3%83%A3%E3%83%AC%E3%83%B3%E3%82%B8/</guid><description>以前Nuxt.js と Python でつくるぬるさく AI アプリ開発入門 途中で分からなくなってしまい中断していましたが、改めてやってみようと思います。
まずは、Vuetifyのスライダーでの入力画面と、amChartsのグラフ表示。
router-linkによるメニュー追加 現在、v-navigation-drawer &amp;gt; v-list &amp;gt; router-linkという階層で、メニューを作っており、、、が並んでいる状態で、ここに、を追加したいと思います。
そして、こんなものは、単にコピペーして、文字変えれば良いのではと思ったのですが、なかなか反応してくれません。
結構調べましたが、解消せず。最後の最後に、再起動（docker-compose down、 docker-compose up -d）を行ったら見事（？）反映されました。
Vuetify Slider コンポーネント 前回はスッキリ行きませんでしたが、今回はこれはあっさりできました。
components/FormCard.vue
&amp;lt;template &amp;lt;v-card class="ma-2 pa-1" &amp;lt;div class="subheading" Heading &amp;lt;/div &amp;lt;div class="caption" 1/11 &amp;lt;/div &amp;lt;v-slider class="px-5 pt-5 pb-3" thumb-label="always" height="3" hide-details&amp;lt;/v-slider &amp;lt;/v-card &amp;lt;/template &amp;lt;script lang="ts" import Vue from 'vue' export default Vue.extend({ }) &amp;lt;/script pages/wine/index.vue
&amp;lt;template &amp;lt;v-layout column &amp;lt;form-card v-for="i in 11" :key="'${i}'"&amp;lt;/form-card &amp;lt;v-btn @click="submit"診断結果を表示する&amp;lt;/v-btn &amp;lt;/v-layout &amp;lt;/template &amp;lt;script lang="</description></item><item><title>Firebase ユーザ認証機能を利用する</title><link>https://jqinglong.github.io/programmers-office/firebase-%E3%83%A6%E3%83%BC%E3%82%B6%E8%AA%8D%E8%A8%BC%E6%A9%9F%E8%83%BD%E3%82%92%E5%88%A9%E7%94%A8%E3%81%99%E3%82%8B/</link><pubDate>Sat, 01 Jun 2019 05:09:33 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/firebase-%E3%83%A6%E3%83%BC%E3%82%B6%E8%AA%8D%E8%A8%BC%E6%A9%9F%E8%83%BD%E3%82%92%E5%88%A9%E7%94%A8%E3%81%99%E3%82%8B/</guid><description>今回もこちらの続き。Vuetify の基本 今回も参考はこちら。
Nuxt × TypeScript でTodoListとユーザ認証を実装してFirebase Hostingにデプロイ [Tutorial – Part 5/5 – ユーザ認証の追加]
https://note.mu/tkugimot/n/n80c2e4b33bbc
で、ちょっと時間が空いてしまい、始める前に気づいたら、エラーが出ている。
This dependency was not found: nuxt_plugin_bootstrapvue_69bcb01f in ./.nuxt/index.js To install it, you can run: npm install --save nuxt_plugin_bootstrapvue_69bcb01f 書いてある通りnpm installしてもNot Foundと言われるだけ。
しかし、
docker-compose down
docker-compose up -d
で復旧。なんのこっちゃ。
Firebase Authentication機能の利用 手順としては、まず、package.jsonにfirebaseの記述を追加して、npm updateを実行するところから始まるのですが、ここで早速大量エラー。
概ねこんな感じ。
Can't find Python executable "python", you can set the PYTHON env variable. Failed at the grpc@1.20.0 install script. This is probably not a problem with npm.</description></item><item><title>Vuetify の基本</title><link>https://jqinglong.github.io/programmers-office/vuetify-%E3%81%AE%E5%9F%BA%E6%9C%AC/</link><pubDate>Sun, 19 May 2019 13:21:48 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/vuetify-%E3%81%AE%E5%9F%BA%E6%9C%AC/</guid><description>Nuxt.jsでTodoList機能を作りながら、Vuetifyの基本を学習。
こちらを参考に、進めています。
https://note.mu/tkugimot/n/n47218fd1eec5
なんとか自力で問題解決できたので、既存のアプリに機能追加する形で動かすことができました。
上記サイトでは、次に、デザインを整えることになります。で、そこではbulmaを使っているのですが、できればあれこれ手を広げたくないので、Vuetifyで作ってみることにします。
全体デザインについて、上記サイトでは、「ヒーロー」というパターンを使っています。「ヒーロー」なんていうデザインのパターンがあるのですね。
簡単にVuetifyでもそんな指定ができたら良いかと思いましたが、そういう名前のものがあるわけではなさそう、かつ、メニュー構造は必要なので、Vuetify公式サイトのレイアウトサンプルから選択することにし、一番基本的な「Baseline」を使ってみることにします。
https://vuetifyjs.com/ja/framework/pre-made-layouts
最初は、部分的に移植しようと思いましたが、それだとレイアウト崩れが発生してしまうため、逆に、いったん、layouts/default.vueを書き換えてしまってから、必要な部分を戻す、という形にしました。
また、Todoの一覧表示のところに関しても、bulmaを使用していると思われるため、そのままではなく、各詳細情報は、v-cardを使用するようにしました。これも、サンプルメージを参考にしてなんとかなったような、なってないようなです。（幅指定がよくわからない・・・）
また、テキスト入力欄も、v-text-fieldを使用して、プレースホルダよりラベル表示の方が面白いと思い、それで作りました。
なお、入力位に自動でイベントを発生させる際に、このやり方だと日本語変換確定のEnterでも反応してしまって本当は良くありません。
下記のサイトに記載の通りですが、今はここは対応保留としておきます。
[Vue.js] 日本語変換の確定でkeyup.enterが発火してしまうのを防ぐhttps://qiita.com/h-orito/items/6d99e2256074132d7867
カードの並べ方等、もう少し綺麗にできたら良いのでしょうが、一旦これで、次に進みます。</description></item></channel></rss>