<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>KONNO Kiyotaka on Programmers Office</title><link>https://jqinglong.github.io/programmers-office/author/konno-kiyotaka/</link><description>Recent content in KONNO Kiyotaka on Programmers Office</description><generator>Hugo -- gohugo.io</generator><language>ja-JP</language><lastBuildDate>Thu, 17 Feb 2022 20:16:23 +0900</lastBuildDate><atom:link href="https://jqinglong.github.io/programmers-office/author/konno-kiyotaka/index.xml" rel="self" type="application/rss+xml"/><item><title>同志少女よ、敵を撃て</title><link>https://jqinglong.github.io/programmers-office/post/doushishoujo/</link><pubDate>Thu, 17 Feb 2022 20:16:23 +0900</pubDate><guid>https://jqinglong.github.io/programmers-office/post/doushishoujo/</guid><description>きっかけは、テレ東BIZの映像。
流し見ではありますが、これが興味深く、語りも熱い。熱すぎて、最後に本を紹介するというのもなかなかないなと。
で紹介された本というのが「同志少女よ、敵を撃て」。
日本人が書いているからか、ロシア人の名前でも頭に入りやすい。史実をもとにしながら、日本には二言くらいしか触れず、ソ連から見た独ソ戦、防衛戦から勝ち戦に転ずる場面の色々な動きをえぐっています。
ところで、舞台はベラルーシ、ウクライナに近い場所なので、色々と現実と重ね合わせてしまうわけです。
仮に、ウクライナがロシアに侵攻されて、防衛戦を強いられ、なんとか耐えてソ連が撤退したとしてら、これはウクライナは勝利したと言うと思います。喜ぶと思います。しかし、死傷者は出ると思います。
では、このままロシアが演習終了で撤退したとしたら。ウクライナはより良い結果を得ていると思いますが、勝利の喜びを得ることはないと思います。
…終わり</description></item><item><title>救命</title><link>https://jqinglong.github.io/programmers-office/post/kyumei/</link><pubDate>Sun, 20 Jun 2021 22:49:55 +0900</pubDate><guid>https://jqinglong.github.io/programmers-office/post/kyumei/</guid><description>ご無沙汰になってしまいましたが、ちゃんと整理して書いた文章は後から読んで面白いので、普段書き散らしているものをこちらにまとめておく、ということはしておこうと思います。
救命―東日本大震災、医師たちの奮闘― 救命―東日本大震災、医師たちの奮闘―
今年は、2011年（平成23年）3月11日の東日本大震災から10年目。 それと関係なく、いつ買ったかも忘れたくらい前に買った本でしたが、今年に入って読みました。
震災時に尽力した医師たちのインタビュー集とでも言ったもの。2014年発行。海堂尊監修。
海堂尊さんの代表作というべきチーム・バチスタの栄光については下記でも書いていますが、
チーム・バチスタの栄光
他も、ほとんど読んでいる状態です。
ジェネラル・ルージュも格好良かった。
ジェネラル・ルージュの凱旋
尾身茂さん登場 本書で最初に登場するのは、南三陸志津川病院で働いていた医師。親戚のおばさんも通っていた病院ですから、いきなり引き込まれました。その他の医師たちも個性派揃いで、面白いです。
その最初の医師の言葉の中で、唐突に尾身茂医師の名前が登場します。なんの注釈なしで出しても不自然じゃないというくらい、名の知られた、優秀な医師だったんだなと思いました。
「だった」、二通りの解釈ができる言葉ですね。
過去は優秀だったけど、今はそうでない。
優秀ということを、自分は知らなかったけど今知った。
どちらかは敢えて書きません。
オートプシー・イメージング（Autopsy imaging、Ai） 海堂さんの本ですから、いつ出てくるのかと思っていたら、後書きで出てきました。
「チーム・バチスタの栄光」が2006年。震災のあった2011年、それこそ、多数の死者の情報を調べるためには大きな武器となって良ささそうに感じますが、活用されなかった。本書の文庫版が出た2014年でも、海堂さんは怒りをぶちまけている。
正直、なぜこれが広まらないかが、部外者から見ると全くわからないです。
後書きで示唆されているのは、警察組織のプライド？
必要な死後解剖はできる、やっている、ということでしょうか。
分からなくもないですけど、他にやることいっぱいあるでしょう、という感想です。
赤十字社への寄付の活用 さらに重たい話が出てきました。 素人でも想像できるように、市民の善意は日本赤十字社に寄付として託されることが多いと思うのですが、多額の寄付を集めながらそれが活用されずに留保されているという話。
2021年のコロナ禍対策として確保されている予備費が執行されずにいるという件とも繋がるような…
復興予算の流用 もっと重たい話。復興予算という名目に反して、結局直接的な目的とは異なる分野に流用されたという話。
2013年の記事
2021年の記事
使えるものは使おう、と考えるのはある意味自然な話。けど、それをコントロールするのが政治の仕事。そもそも、復興という状態が曖昧なのはおくとしても、現時点で復興完了と考えるかの認識は問われる。
2021年4月時点で、郡山市の仮設住宅はまだ3戸残っている。
https://www.pref.fukushima.lg.jp/uploaded/life/553030_1500410_misc.pdf
2月時点で、宮城県の復旧・復興事業369箇所のうち、完成は259箇所。
https://www.pref.miyagi.jp/uploaded/attachment/837289.pdf
・・・
後書きの中で、ええじゃないか、という言葉も使われていましたが、これからオリンピックというお祭りの中で、まさに狂乱の世界に入っていくのか・・・</description></item><item><title>新しい決済システム 2020</title><link>https://jqinglong.github.io/programmers-office/post/new-payment-sysytem2020/</link><pubDate>Mon, 11 Jan 2021 09:03:51 +0900</pubDate><guid>https://jqinglong.github.io/programmers-office/post/new-payment-sysytem2020/</guid><description>昨年2020年も、新しいタイプの決済システムが色々生まれました。 昨年以前に生まれたものも含まれるかもしれませんが、使ってみたものをまとめてみます。
ローソン スマホで簡単 レジ待ち0秒！新しいお買い物のカタチ｜ローソン研究所
個人的には、このタイプが広まるとよいなと思います。
セルフレジも結局行列になったりするわけですが、このタイプだと、行列とは無縁なわけです。
多くの人の心配は、万引きしたいという気持ちよりも、万引きを疑われたくないということだと思うのですが、最後に店舗設置機にバーコードをかざすことで「ありがとうございました」という音声が流れることで、その不安を取り除いてくれます。
もっとも、そこが行列になるような場面に出会した（でくわすってこういう漢字なんだ・・・）ことはないですが、利用者が増えるとそういうリスクもあるとは思いますので、もう一工夫できるかもしれません。
お店側の負担も少ないと思われるのも、よいと思うポイントです。
TRIAL トライアル スマートレジカート トライアルレジカート | TRIAL -トライアル-
買い物体験として楽しさがありました。
直接クレジットカード等ではなく、プリペイドカード経由なのが、ちょっと我が家から遠いという事情の下では嬉しくないですが、まあしかたないか。
最初にプリペイドカード会員登録が必要
最初にプリペイドカードと連携させてから買い物スタート
商品バーコードスキャン
広告表示やクーポン等のプロモーションもできる
最後に店員さんのチェックが入る（いくつかのパターンがあるかも？）
JR高輪ゲートウェイ駅 TOUCH TO GO 高輪ゲートウェイ駅 無人AI決済店舗「TOUCH TO GO」がサービス開始 商品は手に取るだけ！“ウォークスルーの次世代お買い物体験”
店舗デザイン含めて未来感が良いです。 オール無人ではなくて、よくコンビニにあるセルフレジの代わりにこれが置いてあると、だいぶ会計の流れがスムーズになるような気がしますが、どうでしょうか。
オープン前の下見時
SORRY・・・入店制限あり
TOUCH TO GO オリジナル商品
決済時は取った商品が自動表示される
今後行ってみようと思う店 イオン レジゴー イオンリテールは３月より、“レジに並ばない”お買物スタイル「レジゴー」本格展開｜イオン株式会社のプレスリリース
トライアル方式よりは店舗負担が少なそう。
カスミ　Scan&amp;amp;Go USMH／カスミ本社に無人店舗「カスミラボ」スマホで商品登録・決済 | 流通ニュース
この記事を見て、つくばまで行こうと思っていたのですが、もうかなりの店舗に導入されている模様。
U.S.M.H公式アプリ Scan＆Goのご紹介！
我が家から徒歩圏内の店でもやっているので、行ってみることにする。</description></item><item><title>初めての Hugo</title><link>https://jqinglong.github.io/programmers-office/archive/2020/first-hugo/</link><pubDate>Fri, 11 Dec 2020 23:27:56 +0900</pubDate><guid>https://jqinglong.github.io/programmers-office/archive/2020/first-hugo/</guid><description>経緯 これまで、あちこちで駄文を積み重ねてきました。
最初は、ソネットで、無料ホームページを作成し、1999年当時はブログというものはなかったため、日記的なメモを書いていました。 これは、現在は、xdomainに置いています。 いまだに参照できるのはありがたいことです。
select *
2003年12月、Niftyと契約したこともあり、ココログでブログを始めました。 その後、契約をやめる2014年まで継続したものを、ブログ契約だけは継続し、情報を残しています。
一プログラマのラグジュアリーな生活Ⅱ
ココログは残したものの、WordPressを使ってみたいという欲求が出てきたことで、新たにブログを立ち上げました。
一プログラマのチャイニーズな生活
データは引き継いでいるので、2003年情報から残っており、2018年12月まで書いていました。
今度は、サイトをSSL化したいという欲求と、合わせて、たまたまだったと思いますが、GCPの無料枠でWordPress環境を構築できるという情報を見て、GCPへの移行を行いました。
Programmers Office
これが直近のサイトですが、GCPの無料枠では若干遅さを感じるのと、原因はわかっていませんが、何度やっても Google AdSense 申請が通らない（前のサイトでは通っているので内容ではないと思われるが、その後の記事に問題があるのか）。 そしてこれが決定打ですが、無料ドメインサービス freenom の 無料での更新ができない（本来、無料枠での１年以内での更新期間の選択肢が出てくるはずなのですが、有料枠のの１年以上の更新しか出てきません。これも原因不明）。 ということでさらに別の移行を検討してみたところ、WordPressからの移行記事を見たということで、Hugoを試してみようか、ということにしました。
謝辞 以下のサイトに大変お世話になりました。
HUGOのテーマ「Mainroad」の設定方法を紹介
Hugo によるブログ作成と mainroad テーマのカスタマイズ
GitHub Actions による GitHub Pages への自動デプロイ</description></item><item><title>React にも入門</title><link>https://jqinglong.github.io/programmers-office/react-%E3%81%AB%E3%82%82%E5%85%A5%E9%96%80/</link><pubDate>Mon, 10 Aug 2020 03:02:23 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/react-%E3%81%AB%E3%82%82%E5%85%A5%E9%96%80/</guid><description>浮気症は治らず、今度は React にも手を出してみます。 React のチュートリアル まずはチュートリアル。 チュートリアル：React の導入 が、始めようとすると、ちゃんと JavaScript は抑えてねと。 なので、先にこちら。 JavaScript 「再」入門 Next.js のチュートリアル それぞれ、特に問題なく終了したので、すかさず Next.js に入ります。 大幅にリニューアルされた Next.js のチュートリアルをどこよりも早く全編和訳しました 途中、下記のエラーに悩まされました。 Failed to compile ./lib/posts.js Module not found: Can't resolve 'fs' in '/Users/konnokiyotaka/workspace/ReactTutorial/nextjs-blog/lib' 色々情報漁りましたが、結局は getStaticProps が getStaticprops になっていたのが原因。（大文字小文字） configに "fs": false を書くとか、 target: &amp;#8216;node&amp;#8217; を書くとか不要でした。 getStaticProps は サーバサイドでのみ 実行される！ 覚えておきましょう。 デプロイのところも、みんな Git は普通に使えるよね、というトーンなので、若干調べながらになりました。 こんな感じになりますね。 git checkout -b test1 # （いくつか変更を加えて、GitHub に push する） git push origin test1 TypeScript への変換は、まあそんな感じかということで途中でやめてしまいました。 が、やはり TypeScript の方が良いよなとは思っています。 git mv components/date.</description></item><item><title>【Udemy】超Vue JS 2 完全パック – もう他の教材は買わなくてOK！ (Vue Router, Vuex含む)</title><link>https://jqinglong.github.io/programmers-office/%E3%80%90udemy%E3%80%91%E8%B6%85vue-js-2-%E5%AE%8C%E5%85%A8%E3%83%91%E3%83%83%E3%82%AF-%E3%82%82%E3%81%86%E4%BB%96%E3%81%AE%E6%95%99%E6%9D%90%E3%81%AF%E8%B2%B7%E3%82%8F%E3%81%AA%E3%81%8F%E3%81%A6ok/</link><pubDate>Sat, 25 Apr 2020 00:53:40 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%80%90udemy%E3%80%91%E8%B6%85vue-js-2-%E5%AE%8C%E5%85%A8%E3%83%91%E3%83%83%E3%82%AF-%E3%82%82%E3%81%86%E4%BB%96%E3%81%AE%E6%95%99%E6%9D%90%E3%81%AF%E8%B2%B7%E3%82%8F%E3%81%AA%E3%81%8F%E3%81%A6ok/</guid><description>Vueを一度基本から勉強しようということで、いろいろ探して、これにたどり着きました。
超Vue JS 2 完全パック – もう他の教材は買わなくてOK！ (Vue Router, Vuex含む)
以前、AWSの講座を受講した時も、感じましたが、I am Now AWS Certified ・本題以外の技を見せてもらえることがある。
・再生速度を上げて時短できる
・やはり動く様子を見られるのは良い
など、本を読んだり、教室で受講するのとは違った良さがあります。
また、無料のものをあれこれ探して回り道するくらいなら最初からこれ受けとけばよかった、という気持ちにもなりました。
※ただ、Udemyであれ他であれ、全ての講座が良いとも思えないので、審美眼（審技眼？）は必要ですね。
以下は、単なるメモです。何の役にも立たないと思いますが、自分用です。
受講時のメモ https://jsfiddle.net/
!tab
インスタンス内の属性にアクセスする際にthis
v-once
v-bind :
v-onの引数となるDOMイベント一覧
イベントリファレンス
$event
イベント修飾子
stop
prevent
v-on @
算出プロパティ
computed property
ウォッチャ
配列は第２引数がインデックス
オブジェクトは第２引数がキー
data:
の中がリアクティブ（getter,setterがインスタンス作成時に作成されるから）
===
型も値も一緒
div.#3
↓
VNode
仮想ノード
コンポーネントのグローバル登録
main.jsでVue.conponent</description></item><item><title>Realworld app – VueJS and Typescript</title><link>https://jqinglong.github.io/programmers-office/realworld-app-vuejs-and-typescript/</link><pubDate>Sun, 19 Apr 2020 09:00:59 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/realworld-app-vuejs-and-typescript/</guid><description>今度はTypescript https://github.com/gothinkster/realworld-starter-kit
Part 1 : Introduction and Vue CLI Setup $ vue create realworld-vue-ts vue-class-component
create component の代わりに@Component
vue-property-decorator
@Propなど
vuex-module-decorators
@module
$ yarn serve 今回はyarn派なんですね
$ yarn add vue-property-decorator $ yarn add vuex-module-decorators Part 2 : Templates and Styling router.ts がなくなっていて、router/index.ts
VSCode command + D で複数選択
Part 3 : Vuex and API Access https://github.com/gothinkster/realworld/tree/master/api
json to ts
https://jvilk.com/MakeTypes/
$ yarn add axios axios npm
JWT JSON Web Token</description></item><item><title>Vue JS Crash Course</title><link>https://jqinglong.github.io/programmers-office/vue-js-crash-course/</link><pubDate>Sat, 18 Apr 2020 07:40:45 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/vue-js-crash-course/</guid><description>こちらのコースをやってみました。以下、単なるメモです。
Vue JS Crash Course https://github.com/bradtraversy/vue_crash_todolist
node10の頃
Vue CLI インストール
https://cli.vuejs.org/guide/installation.html
$ npm install -g @vue/cli $ vue --version @vue/cli 4.3.1 4なんだ・・・
$ vue create test いっぱいエラー出てるけど・・・ $ cd test $ npm run serve 開きました
cd .. vue ui Vue プロジェクトマネージャ 画面が自動で立ち上がる
http://localhost:8000/project/select
現在のフォルダのまま（testが表示されているフォルダ）
vue_crash_todolist
他はデフォルト
↓
デフォルトプリセット
↓
インストール完了すると、「プロジェクト ダッシュボード」ページが表示される
ダッシュボード画面
プロジェクトタスク画面
main.js がエントリポイント
アロー関数（=&amp;gt;）の復習などしながら（けど、render: h =&amp;gt; h(App)　はやはり難しいと思ったら下記でなんとなく分かった！）、App.vue の仕組みの説明。
Vue.jsのrender: h =&amp;gt; h(App)について調べた
style記述は、上記のgithubからもらってくる。
Component「Todos.vue」を作って、App.vueで読み込む。
v-bind
https://jp.vuejs.org/v2/guide/class-and-style.html</description></item><item><title>Nuxt JS beginner tutorial</title><link>https://jqinglong.github.io/programmers-office/nuxt-js-beginner-tutorial/</link><pubDate>Fri, 17 Apr 2020 01:16:53 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/nuxt-js-beginner-tutorial/</guid><description>もう一度、Nuxt の勉強をしようということで、上記チュートリアルを一式やって見ました。単なるメモです。
1 Nuxt JS beginner tutorial – In Depth Intro to Nuxt.js | SPA, SSR, Static Site, Vue.js Family What is Nuxtjs? Why Nuxt.js is so good? What Nuxt.js can do? What Nuxt.js Includes
How single page application works?
How static site generation in nuxt works?
How universal application is created in nuxtjs?
2 Nuxt JS beginner tutorial – Getting Started with NuxtJs | How to setup Nuxt Project 始める前に、Docker環境を作る</description></item><item><title>TruffleBoxs 入門</title><link>https://jqinglong.github.io/programmers-office/truffleboxs-%E5%85%A5%E9%96%80/</link><pubDate>Mon, 23 Mar 2020 07:52:01 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/truffleboxs-%E5%85%A5%E9%96%80/</guid><description>改めて勉強しようと考えたときに、TruffleBoxs が良いのではと思い立ちました。
まずは、純粋に
TruffleBox (React&amp;amp;Truffle)を用いたDockerでのdapps（ブロックチェーンアプリ）の開発環境の構築
https://qiita.com/dl10yr/items/26b106d27a2de87da131
こちらをなぞらせていただきます。
いきなり、DockerFile の配置場所の絵と、docker-compose.yml の記述が食い違い？？
docker-compose.yml の記述に合わせて、truffle フォルダに配置します。
Dockerfile のfは小文字で
$ docker-compose build $ docker-compose run truffle truffle unbox react Docker 側からアクセスできるように、Ipアドレスを追加するところ。
まずは、事前確認。
ifconfig lo0: flags=8049 mtu 16384 options=1203 inet 127.0.0.1 netmask 0xff000000 inet6 ::1 prefixlen 128 inet6 fe80::1%lo0 prefixlen 64 scopeid 0x1 nd6 options=201 ・・・ 変更
sudo ifconfig lo0 alias 10.200.10.1/24 事後確認
ifconfig lo0: flags=8049 mtu 16384 options=1203 inet 127.0.0.1 netmask 0xff000000 inet6 ::1 prefixlen 128 inet6 fe80::1%lo0 prefixlen 64 scopeid 0x1 inet 10.</description></item><item><title>「試して学ぶ スマートコントラクト開発」を読みながら</title><link>https://jqinglong.github.io/programmers-office/%E3%80%8C%E8%A9%A6%E3%81%97%E3%81%A6%E5%AD%A6%E3%81%B6-%E3%82%B9%E3%83%9E%E3%83%BC%E3%83%88%E3%82%B3%E3%83%B3%E3%83%88%E3%83%A9%E3%82%AF%E3%83%88%E9%96%8B%E7%99%BA%E3%80%8D%E3%82%92%E8%AA%AD%E3%81%BF/</link><pubDate>Sun, 22 Mar 2020 06:09:56 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%80%8C%E8%A9%A6%E3%81%97%E3%81%A6%E5%AD%A6%E3%81%B6-%E3%82%B9%E3%83%9E%E3%83%BC%E3%83%88%E3%82%B3%E3%83%B3%E3%83%88%E3%83%A9%E3%82%AF%E3%83%88%E9%96%8B%E7%99%BA%E3%80%8D%E3%82%92%E8%AA%AD%E3%81%BF/</guid><description>良い本なのは間違いないです。
ただ、途中で行き詰まってしまったので、最後までガッツリとは作りきれませんでした。
試して学ぶ スマートコントラクト開発 新品価格
￥3,839から
(2020/3/22 14:57時点) きっかけ 最近、ふとブロックチェーンの勉強をしてみようと思い立ち、CryptoZombieshttps://cryptozombies.io/jp/をやってみて、分かったような分からないような気分だったので、もう少しちゃんと勉強しようと調べてみました。で、当然色々なサイトがありますが、何も基礎がない状態だと、もう少ししっかり書かれているものがないかなと言う気持ちになり、この本に出会いました。
この本はQUESTというアプリを作った経験を踏まえて書かれているようです。
で、残念ながらQUESTは現在動いていないよう（単に証明書入れていないだけ？）なのですが、こちらでその概要が分かります。
https://speakerdeck.com/norinity1103/quest-tutorial
すなわち、セミナーとか講座とかで、質問してくれた人に仮想通貨で報酬を与えることで、場を活性化させるみたいなことを狙っているようです。
この内容が自分の関心があるところでもあり、これの簡易版でも作れたら良いなと思いながら始めました。
本の序盤 そもそも仮想通貨の購入等もしたことがない状態からのスタートですので、この本でも最初の基礎情報と、METAMASKウォーレット作成から始まる構成は大変助かりました。
なお、テストネットでEther取得を行いますが、最初Ropstenの取得に失敗しました。今改めてやってみたらできたので、何かやらかしたかもしれません。
本の中でも、CryptoZombies をやってみる章があります。
これは、本当は、CryptoZombies のWeb環境ではなく、自分の環境でやってみたいと思うのですが。もう少し理解が進んだらできるようになるのでしょうか。
そんなこんなで、Solidityという言語と、スマートコントラクトと言うものを学びます。が、正直、現段階でも、要はこう言うこと、という腹落ちした状態にはなっていません・・・
また、Remix という、イーサリアム開発用のWeb IDE が紹介されます。
これも良いなと思ったのですが、その後の開発は必ずしもそれを使用するわけではないので、まあ、参考情報という感じです。ちょっと見た目も変わっていて、Compileタブどこ？となります。
その次は、プロダクトデザインの考え方（UX）の章になります。
ジャーニーマップとか、ユーザテストとかの考え方が、丁寧に書かれています。
開発環境 Chapter 4 あたりからが本題。
開発環境として書かれているのが、
・Docker
・Geth
・Ganache
・Node.js
・Truffle
・Git
・VSCode
実践型の環境と感じられます。
そして、開発用ブロックチェーンをプライベートネットとして構築します。
これをやっているときに一つエラーが発生。
geth --datadir ~/private-net --nodiscover --maxpeers 0 init ~/private-net/genesis.json とやると
INFO ・・・ Fatal: Failed to write genesis block: unsupported fork ordering: eip150Block not enabled, but eip155Block enabled at 0 https://ethereum.</description></item><item><title>2020年1月　台北旅行</title><link>https://jqinglong.github.io/programmers-office/2020%E5%B9%B41%E6%9C%88%E3%80%80%E5%8F%B0%E5%8C%97%E6%97%85%E8%A1%8C/</link><pubDate>Sun, 23 Feb 2020 05:14:47 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/2020%E5%B9%B41%E6%9C%88%E3%80%80%E5%8F%B0%E5%8C%97%E6%97%85%E8%A1%8C/</guid><description>旅行の記録も残しておきたいのですが、行って満足して終わってしまうのですよね。
この3連休で台湾に行く予定にしていましたが、コロナウイルスの影響が怖く、キャンセルしてしまいました。
台湾以外にも色々行っていますが、いったん直近の台北の記録をまとめておきます。
インフォメーション 飛行機 往路
ピーチ･アビエーション · MM627
2020年1月3日 22:20 NRT 成田国際空港 T3
2020年1月4日 01:45 TPE 台湾桃園国際空港 T1
復路
ピーチ･アビエーション · MM620
2020年1月6日 02:30 TPE 台湾桃園国際空港
2020年1月6日 06:35 NRT 成田国際空港 夜の桃 以前、金曜夜に会社から直行し月曜朝に直接出勤とか、日帰りとかやりましたが、今回も1泊4日のなかなかの強行日程。
帰りの便が整備・燃料の問題で大幅に遅れて会社遅刻になってしまいましたが、宿泊料を抑えて最大限満喫しようとしたらこれがmaxではないでしょうか。
最近は航空券はTrip.comに依存しています。
（Trip.comもアフィリエイトやってますね。海外のアフィリエイトサイトを経由するようなので、気が向いたらやってみよう） ホテル 一方ホテルはトラブル発生。
最初は、桃園近くのMRT環北駅付近で探して、友人から勧められたホテルは満室だったため、値段重視で、Expediaでグッド ナイト ホテル (晚安旅店)というホテルを予約しました。
ところが、予約後に表示されるページからリンクされる地図は全く違う場所。MRT環北まで来て、だいぶ歩いて、さらに電車で2駅。あるいは環北から車で30分近く。確かにキャンセル不可の予約でしたが、これはそもそもの前提が違うという事で、メールしたり電話したり。なかなか理解してもらえず出発まで結局決着は付きませんでしたが、旅行中にキャンセル通知が入ったので、とりあえずよかった・・・と思って、公開するのもやめておこうかと思ったのですが、今見てみても予約前のページの情報は書き換えられていない。少しでも被害者を減らすために公開してしまいます。 結局ホテルもTrip.comで、たまたまですが、以前（杨丞琳演唱会https://www.programmers-office.ml/%e6%9d%a8%e4%b8%9e%e7%90%b3%e6%bc%94%e5%94%b1%e4%bc%9a/）も泊まったサントス国際観光ホテル（台北三德大飯店）。激安ではないですが、そこそこの値段できれいです。 移動 夜中に空港について、台北へ移動。事前情報では夜中でもバスがあるという事だったのですが、バスの窓口は松山行きの窓口しか開いてなく、台北行き6時の文字が目に入って、あれ？と思い、400元のタクシーに乗りそうになりましたが、よく見てるとちゃんと2:30、2:50のバスもある。140元で台北に移動しました。 今回の主目的は、桃園国際棒球場でのコンサート。MRTで行くと空港よりも先ですが、検索して見ると、高鉄（新幹線）で行ってもそんなに料金は変わらず、だいぶ早いので、そちらにしました（台北から行って、空港、棒球場、高鉄桃園、という順番です）。帰りは混むと思ってMRTにしましたが、やはり遠いですね・・・ 両替 以前のお金が残っていたので、空港では両替せず、街に向かい、誠品書店内のATMでキャッシングしました。 クレジットカードキャッシング
5000
18105</description></item><item><title>AppSheetによるノーコード開発</title><link>https://jqinglong.github.io/programmers-office/appsheet%E3%81%AB%E3%82%88%E3%82%8B%E3%83%8E%E3%83%BC%E3%82%B3%E3%83%BC%E3%83%89%E9%96%8B%E7%99%BA/</link><pubDate>Sun, 26 Jan 2020 02:43:41 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/appsheet%E3%81%AB%E3%82%88%E3%82%8B%E3%83%8E%E3%83%BC%E3%82%B3%E3%83%BC%E3%83%89%E9%96%8B%E7%99%BA/</guid><description>ローコード開発とかノーコード開発とかコードレス開発とか、盛り上がりそうな、盛り上がらなそうな微妙な感じがつづているように思いますが、いかがでしょうか。
そんな中で、GoogleがAppSheetを買収しました。
AppSheet の買収によりコーディングなしでのアプリケーションの作成と拡張が可能に
早速試してみた内容はQiitaに書きました。
AppSheet ちょっと面白いかも
マネタイズの仕組みはまだですかね。2019年2月時点でのQA。
https://community.appsheet.com/t/hi-appsheet-is-great-i-never-made-apps-be/5531
上記Googleの投稿によれば、「この買収によりお客様は、すでに馴染みのある Google スプレッドシートや Google フォームだけでなく、Android や Google マップ、Google アナリティクスなどの高度な Google テクノロジーも活用して、高度なアプリケーションを大規模に開発できるようになります。」と書かれていますが、現時点ではGoogle アナリティクスと連携するような機能が提供されているわけではなさそう。
もう少し様子見ながら注視しておこうと思います。</description></item><item><title>またサイト止めてしまいました</title><link>https://jqinglong.github.io/programmers-office/%E3%81%BE%E3%81%9F%E3%82%B5%E3%82%A4%E3%83%88%E6%AD%A2%E3%82%81%E3%81%A6%E3%81%97%E3%81%BE%E3%81%84%E3%81%BE%E3%81%97%E3%81%9F/</link><pubDate>Sun, 22 Dec 2019 01:47:52 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%81%BE%E3%81%9F%E3%82%B5%E3%82%A4%E3%83%88%E6%AD%A2%E3%82%81%E3%81%A6%E3%81%97%E3%81%BE%E3%81%84%E3%81%BE%E3%81%97%E3%81%9F/</guid><description>ドメイン名サービスの更新を怠って、本サイトをしばらく止めてしまっていました。
Freenomの更新 以前にも繋がらなくなったことがあって、Cloudflareが止まってたということがありましたので、それも疑いましたが全然情報が出ていないので、そうではなさそう。
サイト自体が死んだかと思いましたが、再起動しても状況は変わらず、そもそもサイトが死んだ場合はCloudflareがエラー画面を返すのでそうでもなさそう。
本サイトは、
https://www.karelie.net/free-fast-wordpress-site-freenom/
を参考に、freenomで無料ドメインサービスを使用しています（した）。
今月頭に、「Your domain name PROGRAMMERS-OFFICE.ML needs renewal」というメールが来ていたのですが、完全に見落としていました。
そして、これにしたがって更新していれば無料でできたようなのですが、一度終了してしまうと、再度取り直す際には有料になっています。ということで10ドルちょっと支払いました・・・（ただ、この更新料は他の有料サービスから比べても格安だとは思います）
ついでにWordPressの更新 そして、ドメインの更新とは全く関係ありませんが、この際にWordPressも更新しておくことにします。
更新の際には、いつも（？）、下記のエラーになります。
いくつかのファイルをコピーできないため、最新版のインストールができません。これはたいていの場合、ファイルのパーミッションが適切でないことが原因です。: wp-login.php, wp-cron.php, xmlrpc.php, wp-load.php, wp-activate.php, wp-config-sample.php, wp-settings.php, wp-mail.php, wp-signup.php, wp-links-opml.php https://www.karelie.net/free-fast-wordpress-site-setting/#wordpress-2
を参考にしてパーミッションを変更します。
そちらに書いてある
sudo chmod 707 wp-settings.php sudo chmod 707 wp-cron.php sudo chmod 707 wp-activate.php sudo chmod 707 wp-load.php sudo chmod 707 wp-login.php sudo chmod 707 wp-signup.php sudo chmod 707 wp-trackback.php sudo chmod 707 wp-config-sample.php sudo chmod 707 license.txt sudo chmod 707 readme.</description></item><item><title>I am Now AWS Certified</title><link>https://jqinglong.github.io/programmers-office/i-am-now-aws-certified/</link><pubDate>Sun, 10 Nov 2019 00:20:41 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/i-am-now-aws-certified/</guid><description>AWS Certified Solutions Architect – Associate試験に合格しました！
合格者特権で、試験対策について書いてみたいと思います。
（まあ、こういうのは読み流すものです）
自分のスペック 私は、仕事で多少クラウド環境でアプリを動かすこともありますが、ほとんどがオンプレミス環境での構築です。
このブログはGCPで動かしており、趣味としてクラウド環境を触っているのは記事として書いている通りです。AWSも一時期Magentoをガッツリやろうとして、それを動かす環境として触っていましたが、諸事情によりMagentoの話が先送りになったため、AWSも触らなくなってしまい、１年間の無料期間も過ぎてしまいました。
ですので、遊びレベルでEC2、S3、ECR、ECS あたりは雰囲気は分かっている、という状況でした。
対策講座 会社的な諸事情があり、１日の入門講座を受講しました。とりあえずVPCを作って、EC2を立ち上げて、オートスケールを試してみる、というくらいの一番の初心者向け講座でしたので、これはおそらく合格には関係なかったかなと思います。それでも、趣味で遊んでいるだけだと、VPCとは、みたいなことを意識せずにやっていたので、そういうものがあるという認識のためには「無」ではなかったかというところでしょうか。
今回の主要な（９割９分）準備は、Udemyの対策講座でしたので、そちらを紹介。
Udemy対策講座 これだけでOK！ AWS 認定ソリューションアーキテクト – アソシエイト試験突破講座（初心者向け21時間完全コース）試験に出る範囲の概要を押さえる、という役割だと思いますが、確かに、結果的にはこれだけでOKでした。
始める前は、動画講座は見るのがしんどい（まだるっこい）かなと思っていたのですが、２倍速で見ているとまだるっこさはなく、自発的にページをめくらなくてもどんどん進んでいくためだらだらしない、というメリットがありました。
ただ、しばしば寝落ちしてもう一度見直す、みたいなこともありましたので、ちゃんと体勢を整えてやりましょう。
終わった今思うのは、各セクションの終わりに小テストが用意されていますが、これを先にやってからビデオを見る方が良かったかも、ということです。小テストで、こんなことやってたっけ？？みたいなことがしょっちゅうあったので、そこで見返すよりも、ちゃんとポイントを押さえてから見た方が効率的ではないかということです。
この講座はあちこちの合格体験記で紹介されていますが、ハンズオンについて、ちゃんとやる派が多いように思われます。私は、試験を申し込んでからこれを受講し、時間がないなと思ったのでハンズオンは全て見るだけにしました。
僅かながらも触ったことはあったから、というのも大きいですが、やっていることがイメージできるなら、必ずしも試験対策としては手を動かす必要はなかったかなと思います。ただ、手を動かすことで、もう少し、説明されている箇所以外のオプション等にも目が行ったかな、試験ではそういうのも結構出てたぞ、という感じもあります。
模擬試験 なんだかんだで、Udemy講座を見終えたのが、試験（17時から）当日の朝でした。そこで、まずはUdemy講座についているの模擬試験の一つ目をやってみました。70%の合格ラインに対して、40%。
え、そんなこと説明されたました？？みたいな問題ばかり。青ざめます。
続いて、模擬試験二つ目。55%。ダメダメですが、ただ、そんな問題が出るんだ、という感覚は分かりました。そこでふと疑問が。これはUdemyの模擬試験の感覚であり、本番もそうなのか？？
ここで、慌てて、公式模擬試験があることを思い出し、すかさず申し込んで実施。結構近い問題が出てる！80％。行ける！
Udemyの模擬試験３つ目は模擬試験とはちょっと違う小テストの形式の65問ですが、正解45問＝約70%。後は間違っているところの見直しをやれば良いか、という感じでざっとおさらいして、もう一度模擬試験一つ目。なんとこのタイミングで模擬試験内容が更新されました、との通知。まあ、頻繁に内容が更新されているというのは良いなという好印象。で、84%。行ける！と感じながら試験会場へ向かいました。
本番試験 身分証明証は二つ（一つは写真付き）持っていきましょう。
さて、試験を始めて最初に思うのは、公式模擬試験、結構モダンな画面だったじゃん！本番、昔ながらの古臭い画面じゃん！
それはさておき、問題、全然模擬試験と違います。よりシビアです。どこまで公開して良いか分からないのでイメージで言うと、模擬試験はAとBを識別できれば回答できるが、本番はA1とA2の識別が必要、みたいな。
今回、直前の復習で、こちらのサイトの表を参考にさせていただき、大いに役立ちました。
表で対策するAWS 認定ソリューションアーキテクト – アソシエイト(SAA)
この中で言うならば、例えば、VPCエンドポイント（ゲートウェイ型）とVPCエンドポイント（インターフェース型）を識別しましょう、と言うことです。
あとは、この試験に限りませんが、問題文の細かい条件がヒントになっている。また、「英語」ボタンがあるので、日本語が怪しいと思ったら英語も見てみる。一つ、canの訳し方が微妙じゃない？というのがありました。
対策本 ここが一番気にされるところだと思いますが、今回書籍類は使用しませんでした。ただ、より本番試験に近い内容が書かれているなら、模擬試験までやった後に弱いところの補強にやると良いのかもしれません。そういう意味では、新しい本でないと意味がないかなと思います。
また、最初に、**AWS Well-Architected フレームワーク ホワイトペーパー(PDF)**も読みましたが、読むというよりは眺める感じになってしまい、あまり意味がありませんでした。Udemy講座の中で何度も説明してくれるので、ホワイトペーパーを読むこと自体は必須ではないかなという感じです。
余談 今回の、Udemy講座は非常に良かったなと思いますが、Udemyの全ての講座が良いかというのは不明です。名前からして怪しげなものも色々あるな…審査してるのかな…
しかも、ベネッセが提携してやっている。大学入試の件で、私のベネッセに対する印象がかなり悪くなってます。ベネッセ、そうじゃなかったと思うんだけど。</description></item><item><title>Watson Machine Learning を活用してWordPress サイト内にアプリ作成</title><link>https://jqinglong.github.io/programmers-office/watson-machine-learning-%E3%82%92%E6%B4%BB%E7%94%A8%E3%81%97%E3%81%A6wordpress-%E3%82%B5%E3%82%A4%E3%83%88%E5%86%85%E3%81%AB%E3%82%A2%E3%83%97%E3%83%AA%E4%BD%9C%E6%88%90/</link><pubDate>Sat, 14 Sep 2019 00:34:41 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/watson-machine-learning-%E3%82%92%E6%B4%BB%E7%94%A8%E3%81%97%E3%81%A6wordpress-%E3%82%B5%E3%82%A4%E3%83%88%E5%86%85%E3%81%AB%E3%82%A2%E3%83%97%E3%83%AA%E4%BD%9C%E6%88%90/</guid><description>いつも悩んで終わっている記事になってしまうのですが、今回は作りきった話。
ただ、作りきってから解説を書こうと思うと熱が冷めてしまっているというジレンマ・・・
IBMのWatson Studio から利用できる機械学習環境 AutoAI で予測モデルを構築し、それを外部PHPアプリから参照するアプリを作りました。タイタニック　チャレンジ 以前から作ろうとしていた、タイタニックアプリがやっとできた！ということです。タイタニックアプリを作ろう（Nuxt.js 開発環境の基本） システム構成 基本的には、機械学習を行なったモデルをAPIとして公開し、そのAPIを呼び出すアプリを作る、というぬるさくで学習していた構成です。
https://norwegian-geek.booth.pm/items/1296418
いままでかなり色々な方法を試してきたわけですが、AutoAIを知った事で、ローカルで構築した機械学習環境を公開環境に持っていく、という事を考えなくて良くなったのが大きいです。
まずは、AutoAIがデプロイ機能まで持っていて、これでAPIを公開できます。
これを呼び出すアプリは、WordPressサイトを立てて、その中でPHPアプリを書きました。
AutoAI によるAPI公開 こちらについては、AutoAIで検索するだけでも色々情報が出てきますし、「AutoAI タイタニック」と検索すれば、まさに今回行なったことをみなさんやられているので、割愛します。
これが無料で公開されているというのがすごいなと思います。
WordPress 環境内にアプリ構築 UI側をどう作るかがこの記事のメインとなります。
最初は、せっかく勉強したということでOutSystemsでやってみようと思いました。
OutSystems まず、ちょっと悩んだのが、あまりにもデータとフォームが結合していて、単なる検索条件を入力するための画面を作りたいのに、フォームのためにはデータが必要という構造。フォームを使わない方法も当然あると思いますが、仮のデータを作成する方法でもできなくはなかったです。
REST API呼び出しについては、ちゃんと仕組みが用意されていて、これは便利。テスト呼び出しもしやすい画面が用意されている。
それで、呼び出しまではできたのですが、取得したデータの処理がうまくできませんでした。これについては、そもそもAutoAIのJSONの構造が複雑すぎませんか？という気もしています。
WordPress 昔から思っているのですが、CMSで管理するコンテンツというのは、単にブログ等の文章だけではないはず、CMSはサイト全体のデザインの統一性を実現するために使用するもので、そこには文章だけではなくアプリケーションも含まれるのではないでしょうか。その一例として、問い合わせフォームくらいはCMSの機能に含まれたりもすると思うのですが、もっとがっつりしたアプリもCMS管理配下に乗せてしかるべきではないか、という気がしています。
なぜこれを私がこれを強く思うかというと、私がデザインが苦手だからです。なるべくセンスの良いデザインを使わせていただくために、その枠組みの中でアプリも作りたいと思うのです。
実際それはやったことはあるので、自分のできる範囲に戻ったという感じではあります。
フォームプラグイン そう考えた上で、今回最初に、Wordpressのプラグインを使って、フォームを作れないかと思いました。
色々なプラグインを見ていく中で、使えなくないなと思ったのは、Form Maker by 10Web。The Most Powerful Drag&amp;Drop WordPress Form Builder デザインテーマも用意されていて（Wordpress本体のテーマとは完全独立なのは良い悪いあると思いますが）、きれいなデザインのフォームが作れます。
また、無料で使えるコントロールが充実しています（他の類似プラグインは有料オプションが多い印象）。
ただし、基本的には、あくまでも入力した内容をデータに保存して、せいぜいメールを飛ばす機能。今回やりたかったのは入力値を外部のAPIに渡すこと。フォーム処理の後外部URL等に転送することはできますが、入力値がPOSTされるわけではないのです。
これについては、もう少し頑張ってみました。
JavaScriptを追加することができますので、
function send_form(){ var f = document.forms["form6"]; f.method = "POST"; f.action = "/apps/titanic-result/" f.submit(); } みたいなものを追加し、画面側では標準のSubmitボタンを使わずに、ボタンを追加して、OnClickイベントにsend_form()を記載する、ということをすると、指定したところに入力値をPostすることができるわけです。</description></item><item><title>Kubernetes・GKEでの公開</title><link>https://jqinglong.github.io/programmers-office/kubernetes%E3%83%BBgke%E3%81%A7%E3%81%AE%E5%85%AC%E9%96%8B/</link><pubDate>Sun, 28 Jul 2019 01:01:12 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/kubernetes%E3%83%BBgke%E3%81%A7%E3%81%AE%E5%85%AC%E9%96%8B/</guid><description>続きます。Docker イメージを Google Container Registry に登録 kubectl で設定を行うためのyamlファイル作成 上記でGoogle Container Registryに登録したDockerイメージをGKE（GCP の Kubernetes Engine）で公開します。
今回は、APIだけを公開するということで、API用のファイルだけ作成します。
内容は、基本的には、githubの方を参照しています。
https://github.com/pco2699/NullSuck-AI/tree/master/k8s
また、イングレス用ファイルは下記のような感じで作りました。
k8s/api/api-ingress.yml
apiVersion: extensions/v1beta1 kind: Ingress metadata: name: api-ingress spec: rules: - http: paths: - path: /* backend: serviceName: api-svc servicePort: 5432 GKE周りの設定 これを適用するにあたり、まずは準備ということで、
gcloud container clusters create nullsuck --num-nodes 2 --zone asia-northeast1-a を実行するとなっていますが、エラー。
ERROR: (gcloud.container.clusters.create) ResponseError: code=403, message=Kubernetes Engine API is not enabled for this project. Please ensure it is enabled in Google Cloud Console and try again: visit https://console.</description></item><item><title>Docker イメージを Google Container Registry に登録</title><link>https://jqinglong.github.io/programmers-office/docker-%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B7%E3%82%99%E3%82%92-google-container-registry-%E3%81%AB%E7%99%BB%E9%8C%B2/</link><pubDate>Fri, 26 Jul 2019 22:03:18 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/docker-%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B7%E3%82%99%E3%82%92-google-container-registry-%E3%81%AB%E7%99%BB%E9%8C%B2/</guid><description>時は遡り、画面が何とか動くようになったので、API連携しようとしたものの、失敗して終了していたこちら。ぬるさくapi連携（失敗） 画面も、色々試せそうになってきたので、とりあえず、APIを公開しようということで、ぬるさく本の「6.3 Docker イメージを Google Container Registry に登録してみよう 」を試すことにします。
GCPプロジェクトの作成 既存のアカウントにプロジェクトを追加します。
プロジェクト名は真似して「nullsuck」、プロジェクトID「nullsuck-xxxxxx」は自動で振られます。
Docker イメージを push ここで数日を要した・・・
まず、今回はAPI側を公開することにするので、appとなっている部分は全てapiと読み替えて作業します。
そこを間違えなければ（一旦間違えましたが・・・）、docker build はおそらく問題なし。docker tag は、結論としてはそこの問題ではなかったのですが、本でも、GCPドキュメントでも、プロジェクトIDを含めるように書かれているのですが、本の記述が「nullsuck」と書かれていて、若干混乱。「nullsuck-xxxxxx」の方を記述するようにしました。
そして、gcloud docker — push をするのですが、まず、この記述は古いようで、現状では、docker pushでやる形になっています。
が、やってみると、
denied: Token exchange failed for project 'nullsuck-247713'. Caller does not have permission 'storage.buckets.create'. To configure permissions, follow instructions at: https://cloud.google.com/container-registry/docs/access-control で、権限の問題か、ということで、記載されているドキュメントを見て、バケットを作ってみたりとか、色々試してみていたのですが、最終的な問題点は、現在接続しているプロジェクトが、既存のプロジェクトであり、今回作成したnullsuckプロジェクトではない、ということでした。
gcloud config list でプロジェクトが確認できます。これはdefault構成だったので、新しい構成を作成。
gcloud config configurations create nullsuck そして、gcloud initは、対話式で聞いてくれるので、nullsuckプロジェクトを指定することにより、環境が切り替わります。
そこで改めて、docker pushをすると、今度は成功しました。
公開設定が「非公開」になっているのが、本とは異なるので、若干気になる・・・</description></item><item><title>OutSystems でのアプリ自動生成</title><link>https://jqinglong.github.io/programmers-office/outsystems-%E3%81%A7%E3%81%AE%E3%82%A2%E3%83%97%E3%83%AA%E8%87%AA%E5%8B%95%E7%94%9F%E6%88%90/</link><pubDate>Wed, 17 Jul 2019 13:44:52 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/outsystems-%E3%81%A7%E3%81%AE%E3%82%A2%E3%83%97%E3%83%AA%E8%87%AA%E5%8B%95%E7%94%9F%E6%88%90/</guid><description>一連の投稿の続きになります。
OutSystemsはローコード開発か。ノーコーディングにはならないのか、ということで、OutSystems とGlide App（glideapps）の比較用に、Glide で使用したものと同じデータを使用して、OutSystems でアプリ自動生成を行ってみます。
使用するデータは、下記で調整を行なった、港区観光施設データです。Glideの味わい方〜オープンデータを活用しよう OutSystems 環境整備 OutSystems セルフトレーニングで、最後に肝心のデザイン変更のところを飛ばしてしまいましたが、そこでは、SILK UI フレームワークのDublin テンプレートを使用することになっていたので、まずは、そちらをインストールします。
Forge page で「Dublin Template」を検索して、インストールします。
そして、アプリケーションの作成。
Dublinテンプレートによるアプリ作成（失敗） 順に進めていくと、初期画面が出来上がります。
一度ここで起動してみるとこんな感じ。
この辺が、どうも何をしているのか、何をすべきなのかよくわからない。
そして、結局起動できず。
もしかして、Mac版はダメだけど、Windows版なら、と思ったのですが、ダメでした。一応、画面生成まではできましたが、起動しません。一応、こんな画面ができるという感じです。
Dublinの場合は、左上に、デバイス切り替え機能がつきます。
基本テンプレによる画面作成 では基本テンプレートならどうかということ、こちらはできました。
テンプレートとしてTop Menu を選択する以外は、上記Dublinの場合と同じです。
デザイン画面を開いて、おもむろにExcelをインポートしますが、Google スプレッドシートからダウンロードしたものはExcelファイルではないと言われて、失敗しました。一度Office 365 で開いて保存し直したら大丈夫でした。
ただ、シート名、1行目の名称でテーブルを作ってくれると思ったら、それは失敗しました。
まずWindows版だと、ちゃんとシート名を認識はしてくれています。
これが、Mac版だとこの時点でダメ。
で、Windows版でも、Mac版でも、インポート結果はこの通り。
単なる連番になってしまいました。これは、シート名、項目名が日本語のためかと思われます。
それでも進めることはできます。
基本テンプレの場合は、初期状態でMainFlowには何もありません。
ここにEntity1 を２回ドロップすることで、リスト画面と詳細画面が生成されます。勝手に結合されている状態です。
実行する前には、各画面のAnonymous プロパティをチェックOnにします（ログイン画面を表示させないため）。
そして起動するとこのような画面が生成されます。明細部分のページングもされていますし、これをスタートとするのは大いにアリでしょう。
Glide と違って、参照画面だけでなく、更新画面も生成されます。これは割と大きな違いかもしれません。
ただ、これを完成品としては公開できないかなという感じがあり、その辺が繰り返しになりますが、Glide App と、OutSystems の違いになるような気がします。</description></item><item><title>Glide とOutSystems</title><link>https://jqinglong.github.io/programmers-office/glide-%E3%81%A8outsystems/</link><pubDate>Mon, 15 Jul 2019 06:31:06 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/glide-%E3%81%A8outsystems/</guid><description>Qiita に初投稿してみました。
Glide App（glideapps） のMap List 機能
https://qiita.com/JQinglong/items/8c8cd2e2d5c29225972a
ノーコーディングツールとしてのGlide App（glideapps）（検索で引っかかりにくいので、こういう書き方をしてみてます）のパワーは凄まじい。
今回取り上げたMap List 機能で、地図上に複数展表示ができる。そして、これは単にスプレッドシートの場所情報を表示しているだけであり、スプレッドシートの更新は自由にできる。
そして、ちょっと前に、Per-user data 機能も追加されており、ログインユーザごとのデータのフィルタリングができるようになっている。
これらを組み合わせると、あんなことやこんなことや・・・
そして、Glideの中では、一切コーディングさせない。コーディング的なこともさせない。
一方、OutSystems。
これもアプリの色々な要素の自動生成機能は凄まじい。ある意味、Glideと同じことは、ほぼ同様にできる（あとでやってみる）。
そしてそこにとどまらない。基本的に、どんどん自動生成されたものに対してさらにカスタマイズできる。自動制裁されたアプリを見て、オブジェクト、変数、RDB構造のようなものを想定できるならば、どんどん「式」を書ける。
これは考え方の違いでしょう。
OutSystems は、ノーコーディングというよりはローコーディングであり、結局は従来と違う方法でコーディングしている。そして、たまにコーディングの影が見える。この影が見えると、拒絶反応を起こす人はそれなりにいて、それは自分の仕事ではないと感じるのだと思われる。
OutSystems を見て、Accessだなと感じたのは、基本的には自動生成してくれるのだけれども、それで完了でもなくて、そこから手を入れるんだなというところ。だから利用者もエンドユーザではなく、開発者。
Glide は徹底的にノーコーディングで完成品まで持っていくことに徹している。
これにより利用者としてエンドユーザも入ってくると思われる。そのためには、痒いところに手が届かないのも、今はやむを得ないという考え方。イノベーションのジレンマが発生している状態ではあるが、一気にこの20数年の開発スタイルをひっくり返しかねないやり方だ、というのは言い過ぎ？？</description></item><item><title>9.4　スキャフォールディングとRichWidgetを使ってみよう（OutSystems セルフトレーニング）</title><link>https://jqinglong.github.io/programmers-office/9-4%E3%80%80%E3%82%B9%E3%82%AD%E3%83%A3%E3%83%95%E3%82%A9%E3%83%BC%E3%83%AB%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0%E3%81%A8richwidget%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86/</link><pubDate>Sun, 14 Jul 2019 14:16:05 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/9-4%E3%80%80%E3%82%B9%E3%82%AD%E3%83%A3%E3%83%95%E3%82%A9%E3%83%BC%E3%83%AB%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0%E3%81%A8richwidget%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86/</guid><description>テキストによるエクササイズの続きです。8.2　ウェブサービスのエクササイズ（OutSystems セルフトレーニング） Part 1: Add Cinemas at Warp Speed 前に画面を誰かが勝手に作ってくれたと思ったのは、スキャフォールドだったんですね。
勝手に作るんじゃなくて、ドラッグ&amp;amp;ドロップで作ってくれるというのも良いなと思います。
さらに画面へのドラッグ&amp;amp;ドロップで明細画面を追加してくれて、ポップアップエディタまで作ってくれるのはすごい。
で、ポップアップエディタは作ってくれましたが、Popup_InfoBalloonはダメでした。今度は検索したら選択肢には出てきますが、ドロップするとエラー。
もしかしてlondonじゃないから？
変えるのも大変そうだけど・・・
https://www.outsystems.com/forums/discussion/15489/changing-the-theme-of-my-application/#Post84632
Part 2: RichWidgets とりあえず進めてみる。
LayoutsOther¥Layout_Popup を選択するところは、LayoutOther が存在しないため、Layouts¥LayoutPopup を選択してみたが、削除することになっているHader もFooter もないので、やはり違うみたい。
MovieTable のStart Index プロパティに、List_Navigation_GetStartIndex(MovieTable.Id) を指定するとのことだが、エラーになってしまう。
それは諦めて、Dynamic Sortingの追加をしたら、またエラー。
一旦追加したList_SortColumn を削除したのですが、復活せず。
最後に破壊してしまいました。
とりあえず、この先は別のアプリを作ってみるエクササイズなので、OutSystems セルフトレーニングシリーズは、ここで一旦終了とします。</description></item><item><title>8.2　ウェブサービスのエクササイズ（OutSystems セルフトレーニング）</title><link>https://jqinglong.github.io/programmers-office/8-2%E3%80%80%E3%82%A6%E3%82%A7%E3%83%96%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%81%AE%E3%82%A8%E3%82%AF%E3%82%B5%E3%82%B5%E3%82%A4%E3%82%BA%EF%BC%88outsystems-%E3%82%BB%E3%83%AB%E3%83%95%E3%83%88/</link><pubDate>Sat, 13 Jul 2019 08:38:46 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/8-2%E3%80%80%E3%82%A6%E3%82%A7%E3%83%96%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%81%AE%E3%82%A8%E3%82%AF%E3%82%B5%E3%82%B5%E3%82%A4%E3%82%BA%EF%BC%88outsystems-%E3%82%BB%E3%83%AB%E3%83%95%E3%83%88/</guid><description>テキストによるエクササイズの続きです。7.4　セッションハンドリングのエクササイズ（OutSystems セルフトレーニング） Part 1: Add a Reference to a REST endpoint こんなサイトがあり、APIを提供している。
https://www.themoviedb.org/
Part 2: Define Site Properties for the API サイトプロパティの追加のみ
Part 3: Call a Web Reference method 画像を選択するところで、RichWidgetsが表示されないので、Header_Logoというものが選択できない。
まあ、普通のLogoでもよいか。
そして、ここではStyle Editorが登場する。
ServiceCenterでログも見られます、は良いが、詳細のリクエスト内容までは見えないですね。
Part 4: Implement a Web Service Callback OnAfterResponse というコールバックイベントが用意されています</description></item><item><title>7.4　セッションハンドリングのエクササイズ（OutSystems セルフトレーニング）</title><link>https://jqinglong.github.io/programmers-office/7-4%E3%80%80%E3%82%BB%E3%83%83%E3%82%B7%E3%83%A7%E3%83%B3%E3%83%8F%E3%83%B3%E3%83%89%E3%83%AA%E3%83%B3%E3%82%B0%E3%81%AE%E3%82%A8%E3%82%AF%E3%82%B5%E3%82%B5%E3%82%A4%E3%82%BA%EF%BC%88outsystems/</link><pubDate>Sat, 13 Jul 2019 08:35:51 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/7-4%E3%80%80%E3%82%BB%E3%83%83%E3%82%B7%E3%83%A7%E3%83%B3%E3%83%8F%E3%83%B3%E3%83%89%E3%83%AA%E3%83%B3%E3%82%B0%E3%81%AE%E3%82%A8%E3%82%AF%E3%82%B5%E3%82%B5%E3%82%A4%E3%82%BA%EF%BC%88outsystems/</guid><description>テキストによるエクササイズの続きです。6.4　ウェブブロックとUIを再利用してみよう（OutSystems セルフトレーニング） Part 1: Create and use Session Variables Find Usages みたいな技を教えてくれるのは良いですね
Part 2: Create and use Site Properties サイトプロパティを変えてもブラウザ再表示でMovie詳細画面のまま反映された。</description></item><item><title>6.4　ウェブブロックとUIを再利用してみよう（OutSystems セルフトレーニング）</title><link>https://jqinglong.github.io/programmers-office/6-4%E3%80%80%E3%82%A6%E3%82%A7%E3%83%96%E3%83%96%E3%83%AD%E3%83%83%E3%82%AF%E3%81%A8ui%E3%82%92%E5%86%8D%E5%88%A9%E7%94%A8%E3%81%97%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86%EF%BC%88outsystems-%E3%82%BB/</link><pubDate>Sat, 13 Jul 2019 05:45:17 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/6-4%E3%80%80%E3%82%A6%E3%82%A7%E3%83%96%E3%83%96%E3%83%AD%E3%83%83%E3%82%AF%E3%81%A8ui%E3%82%92%E5%86%8D%E5%88%A9%E7%94%A8%E3%81%97%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86%EF%BC%88outsystems-%E3%82%BB/</guid><description>テキストによるエクササイズの続きです。6.2　画面のライフサイクル: Ajaxのエクササイズ（OutSystems セルフトレーニング） Part 1: Create a Web Block for star ratings Placeholder のwidth はempty にはできず、Fullにしておく
Part 2: Make the stars in the Block clickable Search Box で「Notify」を検索することとなっているが、検索されない。
https://www.outsystems.com/forums/discussion/41219/notify-deprecated-in-service-studio-11-what-can-i-use-to-replace-it/
Manage Dependencies (ctrl + q) で探してくれは良いけど、Deprecated（廃止予定）ってどういうこと？そちらを教えて欲しい・・・
・・・一応その回答はこちら。
https://success.outsystems.com/Documentation/11/Developing_an_Application/Design_UI/Reuse_UI/Use_Events_to_Propagate_Changes_From_a_Block_to_the_Parent
これまでは、ウェブブロックの中でScreenAction（テキストではStarClicked）を定義して、それをNotifyするという仕組みだったのが、11では、ScreenActionとは別のEventというものが定義できるようになった。
Notifyのメッセージとして、値等（StarIterator.List.CurrentRowNumber + 1）を定義し、さらに親画面におけるウェブブロックインスタンスのDestinationとしてアクション（OnRatingNotify）を作成して指定する、と言う流れだったのが、バージョン11では、親画面でイベントに対応するハンドラを書く、と言う感じ？
そして、Destinationのアクション（OnRatingNotify）の記述として、Figure 26のような割と複雑なロジックを作っていくわけですが、これはどう書くのだろう・・・
ちょっとテキストがバージョン11に追いついていないので、ここは飛ばしていきます。
Eventsという形にしたのは悪くないと思うのですが。</description></item><item><title>6.2　画面のライフサイクル: Ajaxのエクササイズ（OutSystems セルフトレーニング）</title><link>https://jqinglong.github.io/programmers-office/6-2%E3%80%80%E7%94%BB%E9%9D%A2%E3%81%AE%E3%83%A9%E3%82%A4%E3%83%95%E3%82%B5%E3%82%A4%E3%82%AF%E3%83%AB-ajax%E3%81%AE%E3%82%A8%E3%82%AF%E3%82%B5%E3%82%B5%E3%82%A4%E3%82%BA%EF%BC%88outsystems-%E3%82%BB/</link><pubDate>Sat, 13 Jul 2019 02:12:50 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/6-2%E3%80%80%E7%94%BB%E9%9D%A2%E3%81%AE%E3%83%A9%E3%82%A4%E3%83%95%E3%82%B5%E3%82%A4%E3%82%AF%E3%83%AB-ajax%E3%81%AE%E3%82%A8%E3%82%AF%E3%82%B5%E3%82%B5%E3%82%A4%E3%82%BA%EF%BC%88outsystems-%E3%82%BB/</guid><description>テキストによるエクササイズの続きです。5.7　Input Validationのエクササイズ（OutSystems セルフトレーニング） Part 1: Add a comments sidebar to movie Container の幅指定の方法は変わっている。
Styles Editor を指定。
bold 、italic 設定もStyles Editor で。
CreateUserMovieComment はCoreUserMovieComment の中
Assign してReflesh すると言う流れを理解する</description></item><item><title>5.7　Input Validationのエクササイズ（OutSystems セルフトレーニング）</title><link>https://jqinglong.github.io/programmers-office/5-7%E3%80%80input-validation%E3%81%AE%E3%82%A8%E3%82%AF%E3%82%B5%E3%82%B5%E3%82%A4%E3%82%BA%EF%BC%88outsystems-%E3%82%BB%E3%83%AB%E3%83%95%E3%83%88%E3%83%AC%E3%83%BC%E3%83%8B%E3%83%B3%E3%82%B0/</link><pubDate>Sun, 07 Jul 2019 05:18:34 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/5-7%E3%80%80input-validation%E3%81%AE%E3%82%A8%E3%82%AF%E3%82%B5%E3%82%B5%E3%82%A4%E3%82%BA%EF%BC%88outsystems-%E3%82%BB%E3%83%AB%E3%83%95%E3%83%88%E3%83%AC%E3%83%BC%E3%83%8B%E3%83%B3%E3%82%B0/</guid><description>テキストによるエクササイズの続きです。5.5　Actionとコードを再利用してみよう（OutSystems セルフトレーニング） Part 1: Test the built-in validations Validation設定のServer とServer &amp;amp; Client を試す
Part 2: Add validations to editing a movie Feedbackメッセージを日本語で入力しようとしたら文字化けした！
ここまで長くなってくると全体が見通せなくなる。
一つ一つのプロパティを見ないと何をやっているのか分からない。
また、この辺でソース管理についての説明があると良いのでは
Part 3: Test the validations for editing a movie 動作確認
Part 4: Add validations for editing a person 自分でやってみよう、ということなので、一つだけやって、取り急ぎ進めます。
Part 5: Test the validations for editing people 動作確認</description></item><item><title>5.5　Actionとコードを再利用してみよう（OutSystems セルフトレーニング）</title><link>https://jqinglong.github.io/programmers-office/5-5%E3%80%80action%E3%81%A8%E3%82%B3%E3%83%BC%E3%83%89%E3%82%92%E5%86%8D%E5%88%A9%E7%94%A8%E3%81%97%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86%EF%BC%88outsystems-%E3%82%BB%E3%83%AB%E3%83%95%E3%83%88%E3%83%AC/</link><pubDate>Sun, 07 Jul 2019 02:02:36 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/5-5%E3%80%80action%E3%81%A8%E3%82%B3%E3%83%BC%E3%83%89%E3%82%92%E5%86%8D%E5%88%A9%E7%94%A8%E3%81%97%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86%EF%BC%88outsystems-%E3%82%BB%E3%83%AB%E3%83%95%E3%83%88%E3%83%AC/</guid><description>テキストによるエクササイズの続きです。5.3　データのクエリとウィジェットのエクササイズ（OutSystems セルフトレーニング） Part 1: Create a reusable Action 淡々と進めます
Part 2: Convert Action to a Function こうして作ったユーザアクションは、基本的には、ステートメントとしてのみ呼び出すことができる、方法はアクションフローへのドラッグ&amp;amp;ドロップ。
FunctionにすることでExpressionの中で呼ぶこともできるようになる。
やることはプロパティを変えるだけ
Part 3: Test calling an Action and a Function できるけど、分かったような分からないような（分かっていない）</description></item><item><title>5.3　データのクエリとウィジェットのエクササイズ（OutSystems セルフトレーニング）</title><link>https://jqinglong.github.io/programmers-office/5-3%E3%80%80%E3%83%87%E3%83%BC%E3%82%BF%E3%81%AE%E3%82%AF%E3%82%A8%E3%83%AA%E3%81%A8%E3%82%A6%E3%82%A3%E3%82%B8%E3%82%A7%E3%83%83%E3%83%88%E3%81%AE%E3%82%A8%E3%82%AF%E3%82%B5%E3%82%B5%E3%82%A4/</link><pubDate>Sat, 06 Jul 2019 14:52:54 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/5-3%E3%80%80%E3%83%87%E3%83%BC%E3%82%BF%E3%81%AE%E3%82%AF%E3%82%A8%E3%83%AA%E3%81%A8%E3%82%A6%E3%82%A3%E3%82%B8%E3%82%A7%E3%83%83%E3%83%88%E3%81%AE%E3%82%A8%E3%82%AF%E3%82%B5%E3%82%B5%E3%82%A4/</guid><description>テキストによるエクササイズの続きです。4.4　画面のライフサイクル: インタラクションのエクササイズ（OutSystems セルフトレーニング） Part 1: Add participants to a movie アクションからの「New Web Screen」で自動的には名前はつけてくれなかった。（Mac版だから？）
「Link」のプロパティの設定は、Widget Treeで「Actions」の中ににあるリンクを選択。
タイトル欄にExpressionを追加したのち、ムービータイトルを表示させるようにするための設定は、下記の図のような形でダブルクリックにより指定できる。
Windows環境とMac環境両方で開発している場合、すなわち、複数人で開発している場合、モジュール（今回でいうとOSMDb_Core）が変更された場合の再読み込みはそれぞれで行う必要がある（当たり前といえば当たり前）。
再読み込みを行なったいないために、データタイプにPersonMovieRoleが表示されなくて悩んだ。
Part 2: Test the ‘add participants’ to a movie ここまで順調にきたわけですが、ついにエラー発生。よりによって実行時エラー。開発環境側にはエラーはない。
こうなってしまうと、何をすれば良いか分からない。
が、もう少し冷静になって考えてみると、画面を開く時点でエラーになっているので、preparation が怪しいと考えられる。見てみると、赤ではないが黄色の波線。
SQLを実行してみるとエラー。ピリオドとカンマ！
ということで修正したら動きました。
SQL書いたらその場でテストしましょう。
Part 3: Display the participants of a movie ではPersonエンティティを取得した上で、PersonMovieRole もソースとして追加し、PersonMovieRoleへのフィルタとして、MovieId とActor を指定しようとしています。
しかし、このActor のフィルタ追加で、PersonRole はないよと言われています。正解は、PersonalRole。 その後Group By の設定をしますが、若干表現が異なります。
そして、それをやった後の画面も相当異なります。
Group By の設定を、テキストの画像にあるように、▽ボタンを押して行うのではなく、右クリックで行なったら、近い形になったので、こちら右リック推奨です。
Part 4: Search and filter the list of movies 淡々と進める</description></item><item><title>4.4　画面のライフサイクル: インタラクションのエクササイズ（OutSystems セルフトレーニング）</title><link>https://jqinglong.github.io/programmers-office/4-4%E3%80%80%E7%94%BB%E9%9D%A2%E3%81%AE%E3%83%A9%E3%82%A4%E3%83%95%E3%82%B5%E3%82%A4%E3%82%AF%E3%83%AB-%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%A9%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E3%82%A8/</link><pubDate>Wed, 03 Jul 2019 13:46:39 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/4-4%E3%80%80%E7%94%BB%E9%9D%A2%E3%81%AE%E3%83%A9%E3%82%A4%E3%83%95%E3%82%B5%E3%82%A4%E3%82%AF%E3%83%AB-%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%A9%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E3%82%A8/</guid><description>テキストによるエクササイズの続きです。4.2　リレーションのモデリングをしてみよう（OutSystems セルフトレーニング） Part 1: Add the ‘Edit Movie’ feature テキスト通り進められます。
途中で、Movieの中にGenreIdが表示されなくて、追加し忘れていたかと思ったら、追加はしたけど表示更新していなかったということでした。
とりあえず、テキストボックスをドラッグして幅を広げる際のデザイナの表示がかっこいい。こういうの待ってたよ！
Part 2: Add the ‘New Movie’ feature 最初に「＜＞」タブをクリックすると書かれていますが、現在のバージョン11では「Widget Tree」タブですね。
そしてテキストでは「Layout_London」が指定されていたのを今知る・・・
まあ、そのまま進めます。（後から変えられるのかな・・・）
Part 3: Test the creation and update of movies 動作確認
ちゃんと動いています
Part 4: Add the ‘Edit Person’ feature そのまま進めます
Part 5: Add the ‘New Person’ feature 衝撃の事実？
実はここまでにも若干気になっていたのですが、
People とPerson Detail が、結構出来上がっている。
フォームを自動的に作ってくれるので、ある程度上記でやってきたSaveボタンとかは自動的に作ってくれるのかなと思ったりしていたのですが、ちょっとできすぎじゃない？という気が・・・更新後のメッセージとか、このあと作るんじゃないの？みたいなのまでできている。
まさか、小人が作ってる？
そうじゃないとすると、他の人と被って更新している？同じ名前だとそんなことが起きうる？ちょっと変な感じ。</description></item><item><title>4.2　リレーションのモデリングをしてみよう（OutSystems セルフトレーニング）</title><link>https://jqinglong.github.io/programmers-office/4-2%E3%80%80%E3%83%AA%E3%83%AC%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E3%83%A2%E3%83%87%E3%83%AA%E3%83%B3%E3%82%B0%E3%82%92%E3%81%97%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86%EF%BC%88outsystems/</link><pubDate>Tue, 02 Jul 2019 12:21:56 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/4-2%E3%80%80%E3%83%AA%E3%83%AC%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E3%83%A2%E3%83%87%E3%83%AA%E3%83%B3%E3%82%B0%E3%82%92%E3%81%97%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86%EF%BC%88outsystems/</guid><description>Modeling Data Relationships Exercise
https://www.outsystems.com/learn/lesson/859/modeling-data-relationships-exercise/
3.3、3.6に続き、テキストをやってみます。3.6　ウィジェットを使ってみよう（OutSystems セルフトレーニング） Part 1: Create a foreign key between Entities テキスト通り
外部キーを追加する際に、カラムの型はデータ自体の型を指定するのではなく、データIdentifierを指定する、というのが面白い
Part 2: Create the junction Entities テキスト通り、関連テーブルのエンティティを作成
Part 3: Create an Entity Diagram リレーションの線が自動的に描画されるはずが、最初描画されずに、あれ？と思いましたが、画面をクリックすると表示されました。
Part 4: Publish the application module Management Dependencies画面は若干変わっている。</description></item><item><title>3.6　ウィジェットを使ってみよう（OutSystems セルフトレーニング）</title><link>https://jqinglong.github.io/programmers-office/3-6%E3%80%80%E3%82%A6%E3%82%A3%E3%82%B8%E3%82%A7%E3%83%83%E3%83%88%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86%EF%BC%88outsystems-%E3%82%BB%E3%83%AB%E3%83%95%E3%83%88%E3%83%AC/</link><pubDate>Sun, 30 Jun 2019 08:35:17 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/3-6%E3%80%80%E3%82%A6%E3%82%A3%E3%82%B8%E3%82%A7%E3%83%83%E3%83%88%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86%EF%BC%88outsystems-%E3%82%BB%E3%83%AB%E3%83%95%E3%83%88%E3%83%AC/</guid><description>Widgets I Exercise
https://www.outsystems.com/learn/lesson/876/widgets-i-exercise/
3.3と同様3.3　データのモデリングをしてみよう（OutSystems セルフトレーニング） テキストを進めます。
Part 1: Add a new module to the application まず「Responsive」ではなく「Web Responsive」になっている、ちょっと気になる。
また、ワークスペースの画面状態も、初期コンテントがない状態、ちょっと気になる。
Part 2: Reference Entities from core module 書いてある通り
Part 3: Retrieve and display the movie list テキストでは、既存のHomescreenの名前を変えることになっているが、新しくscreenを作る。
テンプレートはとりあえず「Empty」。名前は最初から「Movies」。
スクリーンの準備としてアグリゲートの指定をする。そこにエンティティを指定することでデータの取得処理が作られる。
スクリーンのコンテントにテーブルレコードを指定して、そのデータソースとして準備で取得したデータを指定する。
という流れですね。これで画面も表示されました。
Part 4: Retrieve and display a movie’s details 詳細画面の表示のさせ方＝画面へのデータの連携のさせ方は同様ですが、フィルタをかけて１件を表示対象とするということ。
なので、Input Parameter を設定する。
Widthを「8 col」に指定する、というところの画面説明がないですが、Stylesの中。
フォームの名前が自動的に変わると言われても、どこで確認できるか分かりませんでしたが、Widget Tree で見ることができました。
モデルの項目をドロップすると画面を構成してくれるのは大変助かります。
その際、テキストではラベルと入力域が左右に並ぶ形になっていますが、今回は縦に並ぶ形になってしまいました。
Part 5: Add a Screen to the top Menu そのまま</description></item><item><title>3.3　データのモデリングをしてみよう（OutSystems セルフトレーニング）</title><link>https://jqinglong.github.io/programmers-office/3-3%E3%80%80%E3%83%87%E3%83%BC%E3%82%BF%E3%81%AE%E3%83%A2%E3%83%87%E3%83%AA%E3%83%B3%E3%82%B0%E3%82%92%E3%81%97%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86%EF%BC%88outsystems-%E3%82%BB%E3%83%AB%E3%83%95/</link><pubDate>Sun, 30 Jun 2019 02:46:05 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/3-3%E3%80%80%E3%83%87%E3%83%BC%E3%82%BF%E3%81%AE%E3%83%A2%E3%83%87%E3%83%AA%E3%83%B3%E3%82%B0%E3%82%92%E3%81%97%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86%EF%BC%88outsystems-%E3%82%BB%E3%83%AB%E3%83%95/</guid><description>Modeling Data Exercise
https://www.outsystems.com/learn/lesson/875/modeling-data-exercise/
Lesson Materialsをダウンロードすると、その中にテキストPDFが入っているので、それを見て進めます。
テキストはバージョン10ベース、現在の最新環境は11のため、所々違うところが出てくると思われます。
Part 1: Create the application いきなり、Blank module templateを使うようにとなっていますが、それが見当たらない。（先を進めると、このことを言っているのではなく、最初のモジュールを作る時にBlankを選択するのだと分かりますが）
何かテーマを選んでみるか。
参考：http://annatokugawa.blog.fc2.com/blog-entry-45.html
とも思いましたが、またハマると嫌。
出来上がりイメージはトップメニューの形のようなので、「TOP MENU」テンプレートを選択します。
それ以降は、テキストの通り。
Part 2: Create Entities Mandatoryとは「必須」の意味。
で進めていってたら、キーボード入力を受け付けなくなった。mac版で進めるのはやはりリスキーだな・・・
一回終了したら正常化されました。なお、終了する際は、Uploadします。Saveではない、すなわち、これは実は全てサーバ管理になっているということですね。
Part 3: Create Static Entities データを追加していくのみ
Part 4: Publish the application module クリックするのみ。
ただ、「Template_TopMenu」が見つかりませんというメッセージ。
むう・・・テンプレートを選ばないこともできたのだろうか。
さらにタイムアウトになったりしましたが、再度ボタンを押すと成功します。
ただ、NOTEとして書かれている通り、この時点ではUIがないので、「Wrong URL address – this module does not contain a default entry.」というエラーメッセージが表示されるのみです。</description></item><item><title>OutSystems セルフトレーニング</title><link>https://jqinglong.github.io/programmers-office/outsystems-%E3%82%BB%E3%83%AB%E3%83%95%E3%83%88%E3%83%AC%E3%83%BC%E3%83%8B%E3%83%B3%E3%82%B0/</link><pubDate>Thu, 27 Jun 2019 12:07:25 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/outsystems-%E3%82%BB%E3%83%AB%E3%83%95%E3%83%88%E3%83%AC%E3%83%BC%E3%83%8B%E3%83%B3%E3%82%B0/</guid><description>OutSystemsもおもしろうそうなので、早速、WebAPIのデータを表示させるアプリを作ってみようかと思います。
その際、mac版を使ったところ、読み込み時にエラーになってしまう。Windows版では成功したということは、やはりmac版は多少不安定な面がるかもしれません。
そして、呼び出しはできる（WebAPI読み込みコンポーネントのようなものは作れる）ものの、それを画面のListに表示させる方法がいまいちわからない。
もう少し勉強しようということで、こちらをしばらくやってみたいと思います。
OutSystems セルフトレーニング
http://www.bluememe.jp/outsystems/outsystems_support/self_training.html
（しばらくこのページを随時更新していく形になります）
1　コースイントロダクション 日本語字幕あり（しばらくあるようなので、特筆しない限りは以降、日本語字幕ありです）
各セッションの概要
どういうアプリを作っていくか
映画管理
ホテル予約
試験制度
どんな問題が出るか
2　OutSystemsの基礎知識 2.1　OutSystems概要 development
quality
production
プラットフォームサーバ
コンパイル
デプロイ
管理
service studio
integration studio
service center
2.2　Service Studioとは ここで使われているのはバージョン10
基本的なIDE機能は概ね予想通り
最後にソースの競合、マージの説明
ソース管理ツールも統合されているイメージ
3　ウェブアプリ開発の基礎 3.1　画面のライフサイクル Webアプリケーションとは何か
ブラウザは何をするのか
静的リソースと動的コンテンツ
Preparationという概念を使用しており、その中でデータ取得等を行う
3.2　データのモデリング Entity→テーブルの行
Attribute→列
Service Studioのデータレイヤーで作成
名前からデータ型を推測してテーブルを作る！
例：Amount→Currency
3.3　データのモデリングをしてみよう これから行うExerciseの説明。（ビデオなし）
movie databaseのwebアプリケーションを作ります。
継続的に拡張、公開、テストを行います。
行う内容は
1.アプリケーション作成
2.最初のモジュールの作成
3.エンティティとbootstrapデータの作成
4.静的エンティティとレコードの作成
5.Outsystems webサーバでの公開</description></item><item><title>OutSystemsによるローコード開発？</title><link>https://jqinglong.github.io/programmers-office/outsystems%E3%81%AB%E3%82%88%E3%82%8B%E3%83%AD%E3%83%BC%E3%82%B3%E3%83%BC%E3%83%89%E9%96%8B%E7%99%BA%EF%BC%9F/</link><pubDate>Sun, 23 Jun 2019 12:36:57 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/outsystems%E3%81%AB%E3%82%88%E3%82%8B%E3%83%AD%E3%83%BC%E3%82%B3%E3%83%BC%E3%83%89%E9%96%8B%E7%99%BA%EF%BC%9F/</guid><description>先ほど色々システム構成図の画像をアップした中に、OutSystemsのものがあります。
OutSystemsとは 日本公式サイトだと、「コードレス開発」を謳っていますが、「ローコード開発」とか、色々言い方はあるようで。ソース生成型のツールで、いざとなったらソースいじることもできるようなので、「ローコード開発」の方がよいのでは。
http://www.bluememe.jp/outsystems/product/product-devops-dev.html
ASP.NETかJavaのソースを出力してくれるそうです。あまり何も考えずにチュートリアルをやってみたら、ASP.NET＋SQL Serverの環境を作ってくれたようです。
チュートリアルをやってみて 以前、Glide をやってみた時、Glideの味わい方〜オープンデータを活用しよう これは、本当に何もしないんだな、まさにコードレスだなと思いましたが、かなり近いところまで行っているようにも思います。
画面テンプレートを選択すると、サンプルデータで動く形までできていて、EXCELデータを指定すると、それをDBに登録して、そちらを参照するように変更してくれる、というのはスマートな作りだと思います。
このような画面を作るのですが、リスト用のデータと、グラフ用のデータをそれぞれ指定するだけでここまでできてしまいます。リストから詳細ページへの流れも、詳細画面は勝手にそれっぽく作ってくれるという点で、Glideと同様の発想かと思います。
.NETと言っているのでWindows版だけかと思ったら、technical previewとしてはmac版も提供されていました。
https://success.outsystems.com/Support/Enterprise_Customers/Maintenance_and_Operations/OutSystems_Service_Studio_for_Mac
個人用フリー版が用意されているのもうまいと思います。私も、もう少し使ってみたいと感じました。</description></item><item><title>システム構成図色々</title><link>https://jqinglong.github.io/programmers-office/%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E6%A7%8B%E6%88%90%E5%9B%B3%E8%89%B2%E3%80%85/</link><pubDate>Sun, 23 Jun 2019 11:30:35 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E6%A7%8B%E6%88%90%E5%9B%B3%E8%89%B2%E3%80%85/</guid><description>先日行ってきた、AWS Summit Tokyo 2019 と、Interop Tokyo 2019 でゲットしきた資料のシステム構成図色々。
こういうの参考にしたくなること多いですよね。</description></item><item><title>ぬるさくapi連携（失敗）</title><link>https://jqinglong.github.io/programmers-office/%E3%81%AC%E3%82%8B%E3%81%95%E3%81%8Fapi%E9%80%A3%E6%90%BA%EF%BC%88%E5%A4%B1%E6%95%97%EF%BC%89/</link><pubDate>Sat, 15 Jun 2019 22:05:24 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%81%AC%E3%82%8B%E3%81%95%E3%81%8Fapi%E9%80%A3%E6%90%BA%EF%BC%88%E5%A4%B1%E6%95%97%EF%BC%89/</guid><description>前回からの続きぬるさく画面に再チャレンジ 固定値による画面表示はできたので、実際にapiからデータを取得しようとしました。しましたが、ハードル上げすぎて失敗したので、一旦ハードルを下げようと思いますが、まず失敗の記録をしておきます。
ページ、および、それに伴うストア等の分割 やろうとしていることは、
Pagesの中に、boookフォルダと、todoフォルダを作って、それぞれのアプリを作った状態で、さらに、wineフォルダを作って、その中でぬるさく本のアプリを作ろうということです。
pages |--Lauter | |--index.vue |--README.md |--book | |--books | | |--_id.vue | |--index.vue |--index.vue |--login.vue |--todo | |--index.vue |--wine | |--index.vue | |--result.vue store |--README.md |--book.ts |--counter.ts |--index.ts |--modules | |--todoTypes.ts | |--todos.ts | |--userTypes.ts | |--users.ts |--root.ts |--todo.ts |--wine.ts ただ、すでに作成しているtodoは一部きれいに分けきれずに、indexの中にtodo固有のものが残ってしまっています。
また、wineについても、本の説明は、indexとして作っているサンプルがベースなので、まあ色々ハマりました。
本の該当箇所は、「4.7 API に投げるために Vuex を実装しよう」のあたりです。やりたいのは、「v-for=”i in 11″」を「-for=”wineAttr in wineAttributes”」にする、ということです。
apiについては、「http://0.0.0.0:5432/api/wine_attributes」が動いているのが前提です。
最初はこの辺のエラー対応です。
commons.app.js:21599 [vuex] unknown getter: GET_WINE_ATTR const gettersはexport const gettersにしないといけないのではないでしょうか。actionsも。自信はないですが、これにより呼ばれるようにはなりました。
また、本では触れられていませんが、githubのソースでは、index.d.ts で@nuxtjs/axios の記述があります。しかしそれをやると、</description></item><item><title>ぬるさく画面に再チャレンジ</title><link>https://jqinglong.github.io/programmers-office/%E3%81%AC%E3%82%8B%E3%81%95%E3%81%8F%E7%94%BB%E9%9D%A2%E3%81%AB%E5%86%8D%E3%83%81%E3%83%A3%E3%83%AC%E3%83%B3%E3%82%B8/</link><pubDate>Sat, 08 Jun 2019 23:24:33 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%81%AC%E3%82%8B%E3%81%95%E3%81%8F%E7%94%BB%E9%9D%A2%E3%81%AB%E5%86%8D%E3%83%81%E3%83%A3%E3%83%AC%E3%83%B3%E3%82%B8/</guid><description>以前Nuxt.js と Python でつくるぬるさく AI アプリ開発入門 途中で分からなくなってしまい中断していましたが、改めてやってみようと思います。
まずは、Vuetifyのスライダーでの入力画面と、amChartsのグラフ表示。
router-linkによるメニュー追加 現在、v-navigation-drawer &amp;gt; v-list &amp;gt; router-linkという階層で、メニューを作っており、、、が並んでいる状態で、ここに、を追加したいと思います。
そして、こんなものは、単にコピペーして、文字変えれば良いのではと思ったのですが、なかなか反応してくれません。
結構調べましたが、解消せず。最後の最後に、再起動（docker-compose down、 docker-compose up -d）を行ったら見事（？）反映されました。
Vuetify Slider コンポーネント 前回はスッキリ行きませんでしたが、今回はこれはあっさりできました。
components/FormCard.vue
&amp;lt;template &amp;lt;v-card class="ma-2 pa-1" &amp;lt;div class="subheading" Heading &amp;lt;/div &amp;lt;div class="caption" 1/11 &amp;lt;/div &amp;lt;v-slider class="px-5 pt-5 pb-3" thumb-label="always" height="3" hide-details&amp;lt;/v-slider &amp;lt;/v-card &amp;lt;/template &amp;lt;script lang="ts" import Vue from 'vue' export default Vue.extend({ }) &amp;lt;/script pages/wine/index.vue
&amp;lt;template &amp;lt;v-layout column &amp;lt;form-card v-for="i in 11" :key="'${i}'"&amp;lt;/form-card &amp;lt;v-btn @click="submit"診断結果を表示する&amp;lt;/v-btn &amp;lt;/v-layout &amp;lt;/template &amp;lt;script lang="</description></item><item><title>Firebase ユーザ認証機能を利用する</title><link>https://jqinglong.github.io/programmers-office/firebase-%E3%83%A6%E3%83%BC%E3%82%B6%E8%AA%8D%E8%A8%BC%E6%A9%9F%E8%83%BD%E3%82%92%E5%88%A9%E7%94%A8%E3%81%99%E3%82%8B/</link><pubDate>Sat, 01 Jun 2019 05:09:33 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/firebase-%E3%83%A6%E3%83%BC%E3%82%B6%E8%AA%8D%E8%A8%BC%E6%A9%9F%E8%83%BD%E3%82%92%E5%88%A9%E7%94%A8%E3%81%99%E3%82%8B/</guid><description>今回もこちらの続き。Vuetify の基本 今回も参考はこちら。
Nuxt × TypeScript でTodoListとユーザ認証を実装してFirebase Hostingにデプロイ [Tutorial – Part 5/5 – ユーザ認証の追加]
https://note.mu/tkugimot/n/n80c2e4b33bbc
で、ちょっと時間が空いてしまい、始める前に気づいたら、エラーが出ている。
This dependency was not found: nuxt_plugin_bootstrapvue_69bcb01f in ./.nuxt/index.js To install it, you can run: npm install --save nuxt_plugin_bootstrapvue_69bcb01f 書いてある通りnpm installしてもNot Foundと言われるだけ。
しかし、
docker-compose down
docker-compose up -d
で復旧。なんのこっちゃ。
Firebase Authentication機能の利用 手順としては、まず、package.jsonにfirebaseの記述を追加して、npm updateを実行するところから始まるのですが、ここで早速大量エラー。
概ねこんな感じ。
Can't find Python executable "python", you can set the PYTHON env variable. Failed at the grpc@1.20.0 install script. This is probably not a problem with npm.</description></item><item><title>Firebase Hostingにデプロイ</title><link>https://jqinglong.github.io/programmers-office/firebase-hosting%E3%81%AB%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4/</link><pubDate>Wed, 29 May 2019 13:37:55 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/firebase-hosting%E3%81%AB%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4/</guid><description>こちらの続き。Vuetify の基本 デザインについて、今参考にしているのはVuetify公式サイトのレイアウトサンプル。
https://vuetifyjs.com/ja/framework/pre-made-layouts
これとかすごいと思いますが、初心者はまだ手を出さないことにします。
Vue Material Admin
https://vuejsprojects.com/vue-material-admin
Firebase Hostingにデプロイ 引き続き、こちらを参考に。
Nuxt × TypeScript でTodoListとユーザ認証を実装してFirebase Hostingにデプロイ [Tutorial – Part 4/5 – Firebase Hostingにデプロイ]
https://note.mu/tkugimot/n/n44c327a22c24
最終的にはGCPにリリースする予定ですが、Firebaseも勉強してみたいので、流れに沿ってやってみます。
npm install -g firebase-tools でfirebase-toolsのインストール、
firebase login でログインして、プロジェクト作成して、というところは書いているまま。
この次の
firebase init をどこで実行すべきか？
今現在nuxtアプリを作っている、すなわち、componentsとかlayoutsとかが存在するフォルダで実行します。
最初
? What do you want to use as your public directory?
に対して、初期値のpublicで進めてしまいましたが、distを指定すべき。
? Configure as a single-page app (rewrite all urls to /index.html)?
はNoでよいかと。
ところが、
npm run build で大量エラー。</description></item><item><title>Vuetify の基本</title><link>https://jqinglong.github.io/programmers-office/vuetify-%E3%81%AE%E5%9F%BA%E6%9C%AC/</link><pubDate>Sun, 19 May 2019 13:21:48 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/vuetify-%E3%81%AE%E5%9F%BA%E6%9C%AC/</guid><description>Nuxt.jsでTodoList機能を作りながら、Vuetifyの基本を学習。
こちらを参考に、進めています。
https://note.mu/tkugimot/n/n47218fd1eec5
なんとか自力で問題解決できたので、既存のアプリに機能追加する形で動かすことができました。
上記サイトでは、次に、デザインを整えることになります。で、そこではbulmaを使っているのですが、できればあれこれ手を広げたくないので、Vuetifyで作ってみることにします。
全体デザインについて、上記サイトでは、「ヒーロー」というパターンを使っています。「ヒーロー」なんていうデザインのパターンがあるのですね。
簡単にVuetifyでもそんな指定ができたら良いかと思いましたが、そういう名前のものがあるわけではなさそう、かつ、メニュー構造は必要なので、Vuetify公式サイトのレイアウトサンプルから選択することにし、一番基本的な「Baseline」を使ってみることにします。
https://vuetifyjs.com/ja/framework/pre-made-layouts
最初は、部分的に移植しようと思いましたが、それだとレイアウト崩れが発生してしまうため、逆に、いったん、layouts/default.vueを書き換えてしまってから、必要な部分を戻す、という形にしました。
また、Todoの一覧表示のところに関しても、bulmaを使用していると思われるため、そのままではなく、各詳細情報は、v-cardを使用するようにしました。これも、サンプルメージを参考にしてなんとかなったような、なってないようなです。（幅指定がよくわからない・・・）
また、テキスト入力欄も、v-text-fieldを使用して、プレースホルダよりラベル表示の方が面白いと思い、それで作りました。
なお、入力位に自動でイベントを発生させる際に、このやり方だと日本語変換確定のEnterでも反応してしまって本当は良くありません。
下記のサイトに記載の通りですが、今はここは対応保留としておきます。
[Vue.js] 日本語変換の確定でkeyup.enterが発火してしまうのを防ぐhttps://qiita.com/h-orito/items/6d99e2256074132d7867
カードの並べ方等、もう少し綺麗にできたら良いのでしょうが、一旦これで、次に進みます。</description></item><item><title>Nuxt.js環境の学習継続中</title><link>https://jqinglong.github.io/programmers-office/nuxt-js%E7%92%B0%E5%A2%83%E3%81%AE%E5%AD%A6%E7%BF%92%E7%B6%99%E7%B6%9A%E4%B8%AD/</link><pubDate>Sun, 19 May 2019 02:24:44 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/nuxt-js%E7%92%B0%E5%A2%83%E3%81%AE%E5%AD%A6%E7%BF%92%E7%B6%99%E7%B6%9A%E4%B8%AD/</guid><description>Nuxt.js開発を進めるためには、もう少し学習が必要ということで、入門サイトを見てみたりしていますが、なかなか思う方向には進んでくれません。その苦労の足跡を残します。（ごちゃごちゃになりすぎて記憶も飛び気味ですが）
やりたいことのゴールはこちらタイタニックアプリを作ろう（Nuxt.js 開発環境の基本） 入門用サイト 本当はまずやりたいのはヌルサクです。Nuxt.js と Python でつくるぬるさく AI アプリ開発入門 ただ、結構端折られているところも多く、また、微妙に最新環境でないところがあって、初心者にはエラー対処が難しかったりするため、もう少し入門的なところから始めたいと思いました。そして、それはそれで色々参考になるサイトがあるのですが、これもなかなかそのままは動いてくれなかったりして、苦労しました。
Nuxt × TypeScript でTodoListとユーザ認証を実装してFirebase Hostingにデプロイ https://note.mu/tkugimot/n/nfe81dbbe8bad
こちらのサイトは、入門者の立場から、gitの使い方的なところにも配慮しながら進めてくれるので、非常に勉強になります。
それでもたまにそのままでは動かないところがあったりして、例えば、
3.Todoの module と Component を準備する
の時点でのpages/index.vueは
&amp;lt;template &amp;lt;Todos / &amp;lt;/template ではなくて
&amp;lt;template &amp;lt;TodoList / &amp;lt;/template ですよね、みたいなのがあったりします。
また、結構
implicitly has an ‘any’ type.
で怒られることが多く、「: any」をつけて対処したりしてたのですが、それで良いのか、理解できていません。
さらに、
module namespace not found in mapGetters(): todos/
みたいなエラーが出て、これは解消できずにとりあえず進めたりしました。
その後も色々なエラーを解消できず、もう一度最初からやり直してみても最後には上記エラーに引っかかってしまう状態から抜けられず、途中で一旦中止しました。
（追記）
この問題は解消しました。
store/modules/todos.ts
という構造になっているので、
// export const name = 'todos'; export const name = 'modules/todos'; とすることにより、エラー解消しました。</description></item><item><title>Docker内のNuxt.jsサイトを公開する</title><link>https://jqinglong.github.io/programmers-office/docker%E5%86%85%E3%81%AEnuxt-js%E3%82%B5%E3%82%A4%E3%83%88%E3%82%92%E5%85%AC%E9%96%8B%E3%81%99%E3%82%8B/</link><pubDate>Fri, 10 May 2019 20:49:51 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/docker%E5%86%85%E3%81%AEnuxt-js%E3%82%B5%E3%82%A4%E3%83%88%E3%82%92%E5%85%AC%E9%96%8B%E3%81%99%E3%82%8B/</guid><description>Docker内に構築したNuxt.jsのサイトを公開する、条件として、公開サイトもDockerで構築し、かつ、ソースはボリューム機能でDocker外と共有とする。無料で。
なかなかハードルが高かったですが、できました！
Docker環境をどこに公開するか 無料公開と考えた場合に、1年の期間制限のAWSは対象から外します。そして、本サイト自体がGCEで立っているので、一旦それも除外。そこで検討したのが、Azureです。
Azure App Service Azureでは、素のApp Serviceは無料プランがあります。
App Service の価格
https://azure.microsoft.com/ja-jp/pricing/details/app-service/windows/
この素のサービスはPaaSなので、Dockerをインストールして環境構築するということはできません。これと連携してコンテナを読み込む、Web App for Containersというサービスがありますが、これは無料プランでは利用できません。さらに、通常であれば利用を検討すべきContainer InstancesとかAKS（Azure Kubernetes Service）というものもありますが、これらも有料プランのみです。
色々苦労した挙句、無料でDockerコンテナを立ち上げるのは無理ということで、あきらめました。
Heroku Herokuでもコンテナを読み込んでリリースする機能が提供されています。
https://devcenter.heroku.com/articles/container-registry-and-runtime
これは無料で使えるプランもあるのですが、Volumeはサポートされていません。
なぜVolumeを使いたいかというと、ローカルの開発環境もDockerで構築したい、それと同一の環境をリリース環境に持っていきたい、ただ開発ツールはクライアントに持つことになるのでソースはローカルに持ちたい、そのソースをコミットすることでリリース環境にも反映したい、という理由です。
そういう意味で、最近話題の、VSCodeのRemote Development機能
https://crieit.net/posts/VSCode-Remote-Development
開発ツールをローカルに持ちつつソースはローカルに持つ必要がないという意味ですごいと思うのですが、複数人開発と考えた時にはどうなんだろうとも思ったりします。
さくらArukas https://arukas.io/
今回試しませんでしたが、これもHerokuと同様、Volumeはサポートされません。ただ、無料プランが提供されているのは発見でした。
GCE（Google Compute Engine） 結局VMをそのまま使わせてもらえる環境でなければ今回の条件には合わない、と理解し、そうなると使えるのはGCEしかないのでは、という結論になりました。すでにDocker立てているわけですが、そこはDocker。複数立てることもできるわけです。ということで、もう一つDocker環境を立てることにしました。
公開用Docker構築 前回タイタニックアプリを作ろう（Nuxt.js 開発環境の基本） ここではなるべくシンプルなDockerファイルを目指して設定をしましたが、これはDockerをUpした後にサービスを起動しなければならないということです。
そうではなく、Upと共にNuxtサービスも立ち上げるということで試行錯誤しました。
まず、最初はDocker Build、あるいはUpでのエラー。
ERROR: Service ‘app’ failed to build: containerd-shim not installed on system
DokerファイルをいじるとBuildだけはできたりして、大いに悩みましたが、最終的には、VMリスタートで解消。時間を返せ・・・
再起動したらしたで、既存のDocker＝本サイトが立ち上がらないという問題発生！原因は、先にApaheが起動していてポート80を取られていたため。サービスを落として再度実行により問題解消。かなりの時間を費やして、やっと本題。
最終的には下記のサイトを大いに参考にさせていただきました。
dockerでnuxt.jsの環境を作ってみる
https://qiita.com/reflet/items/e7c33f84ab43ab237ee4
Dockerfile
FROM node:12.1.0-alpine WORKDIR /app RUN npm install --global @vue/cli @vue/cli-init WORKDIR /app/titanic-client RUN yarn install ENV HOST 0.</description></item><item><title>タイタニックアプリを作ろう（Nuxt.js 開発環境の基本）</title><link>https://jqinglong.github.io/programmers-office/%E3%82%BF%E3%82%A4%E3%82%BF%E3%83%8B%E3%83%83%E3%82%AF%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86%EF%BC%88nuxt-js-%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83%E3%81%AE%E5%9F%BA%E6%9C%AC/</link><pubDate>Sun, 05 May 2019 00:21:17 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%82%BF%E3%82%A4%E3%82%BF%E3%83%8B%E3%83%83%E3%82%AF%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86%EF%BC%88nuxt-js-%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83%E3%81%AE%E5%9F%BA%E6%9C%AC/</guid><description>Kaggleのタイタニック問題は、機械学習の基礎として面白いので、それを活用し、かつ、技術書典の2冊で学んだことも生かして、アプリを作ってみましょう。
Kaggleのタイタニック問題で機械学習  Nuxt.js と Python でつくるぬるさく AI アプリ開発入門 コンテナ時代のWebサービスの作り方 環境のイメージ たどり着けるかわかりませんが、ゴールのイメージとしては、下記のようになります。
ローカルにDockerでNuxt.jsのWebアプリ環境 Jupyter Notebookで機械学習環境を作り、responder のAPIサービス環境はDockerで Dockerプライベートでレジストリとして、GitLab Container Registry プライベートレジストリからAzure App Service に公開 DockerによるNuxt環境構築 今回フォルダ構成はこのようにしています。
titanic -app --docker-compose.yml --client ---Dockerfile --server ---Dockerfile 参考にさせていただいたのはこちら。
Nuxt.jsの動作環境をdockerで作る
https://qiita.com/FrozenVoice/items/2ae89ce820cade84924e
若干新しいバージョンに変更しました。
client/Dockerfile
FROM node:12.1.0-alpine RUN mkdir /app WORKDIR /app RUN npm install -g vue-cli ENV HOST 0.0.0.0 EXPOSE 3000 docker-compose.yml
version: '3' services: app: build: ./client volumes: - ./client:/app ports: - "</description></item><item><title>Kaggleのタイタニック問題で機械学習</title><link>https://jqinglong.github.io/programmers-office/kaggle%E3%81%AE%E3%82%BF%E3%82%A4%E3%82%BF%E3%83%8B%E3%83%83%E3%82%AF%E5%95%8F%E9%A1%8C%E3%81%A7%E6%A9%9F%E6%A2%B0%E5%AD%A6%E7%BF%92/</link><pubDate>Fri, 03 May 2019 02:30:04 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/kaggle%E3%81%AE%E3%82%BF%E3%82%A4%E3%82%BF%E3%83%8B%E3%83%83%E3%82%AF%E5%95%8F%E9%A1%8C%E3%81%A7%E6%A9%9F%E6%A2%B0%E5%AD%A6%E7%BF%92/</guid><description>ぬるさくで学んだ基礎を生かして、アプリを作ってみよう！
ぬるさくの学習はこちらNuxt.js と Python でつくるぬるさく AI アプリ開発入門 参考はこちら【Kaggle初心者入門編】タイタニック号で生き残るのは誰？ Kaggleの説明もこちら
Kaggleとは？機械学習初心者が知っておくべき3つの使い方 そしてKaggleの入門用コンペ
Titanic: Machine Learning from Disaster
https://www.kaggle.com/c/titanic
最初にプロジェクト用のディレクトリ（例：titanic）を作成し、その中にdatasetフォルダを作成して、ダウンロードしたデータを配置。
さらにworkspaceディレクトリも作成。
Anaconda-Navigatorを起動
Notebookを起動
プロジェクト用のディレクトリのworkspaceに移動
New &amp;gt; Python 3
そうすると
import pandas as pd import numpy as np train = pd.read_csv("../dataset/train.csv") test = pd.read_csv("../dataset/test.csv") で行ける。
「データセットの欠損の確認」のスクリプトは、そのまま貼り付けるとインデントが効いていないので注意。
「文字の数字への置き換え」のところでエラー発生。
train["Sex"][train["Sex"] == "male"] = 0 train["Sex"][train["Sex"] == "female"] = 1 train["Embarked"][train["Embarked"] == "S" ] = 0 train["Embarked"][train["Embarked"] == "C" ] = 1 train["</description></item><item><title>Nuxt.js と Python でつくるぬるさく AI アプリ開発入門</title><link>https://jqinglong.github.io/programmers-office/nuxt-js-%E3%81%A8-python-%E3%81%A6%E3%82%99%E3%81%A4%E3%81%8F%E3%82%8B%E3%81%AC%E3%82%8B%E3%81%95%E3%81%8F-ai-%E3%82%A2%E3%83%95%E3%82%9A%E3%83%AA%E9%96%8B%E7%99%BA%E5%85%A5%E9%96%80/</link><pubDate>Thu, 02 May 2019 06:49:11 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/nuxt-js-%E3%81%A8-python-%E3%81%A6%E3%82%99%E3%81%A4%E3%81%8F%E3%82%8B%E3%81%AC%E3%82%8B%E3%81%95%E3%81%8F-ai-%E3%82%A2%E3%83%95%E3%82%9A%E3%83%AA%E9%96%8B%E7%99%BA%E5%85%A5%E9%96%80/</guid><description>技術書典6で購入した本2冊目。
これも素晴らしい。#技術書典6 の #ぬるさくAI ですが 14時に完売しました！！
ご購入いただいた皆様、本当にありがとうございました！！！
BOOTHでのpdf販売を同時に開始しましたので
ぜひ、#技術書典 にお越しいただけなかった方、ご購入ください！https://t.co/S7fajL0B8o &amp;mdash; takayama.k (@pco2699) April 14, 2019 なんとか連休中に平成最初のリリースまで持って行きたかったのですが、色々つまり出してきたので、実際に何かを作ってリリースするところを目指したいと思い、Docker環境構築までで一旦まとめておきたいと思います。
Jupyter Notebook いきなり、あなたの知らない世界で、Jupyter Notebook のインストールから。
こちらなども参考に。
https://techacademy.jp/magazine/17430
まずはAnaconda をインストール。Anaconddaで2.3GBも使うんですね・・・
インストールしたら、
Enviroments &amp;gt; 「analytics」
Notebookをインストールしようとして間違えてJupyterLabをインストールしてしまいました。そうしたらNotebookも勝手に入りました。
3.3.1 データセットを読み込む 第１章、第２章も読み応えありますが、作り始めるのは第３章からになります。
初めてJupyter Notebook を使う身としては、色々不明点を抱えながら進めます。どうやって実行するんだ、というところから始まりますが、Runボタンで実行です。
実行すると、エラー。
ModuleNotFoundError Traceback (most recent call last) &amp;lt;ipython-input-2-aed2979e33dd in &amp;lt;module 1 # 分析に必要なライブラリをインポート ---- 2 import pandas as pd 3 import numpy as np 4 5 # データセットを読み込む ModuleNotFoundError: No module named 'pandas' 先に</description></item><item><title>コンテナ時代のWebサービスの作り方</title><link>https://jqinglong.github.io/programmers-office/%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E6%99%82%E4%BB%A3%E3%81%AEweb%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%81%AE%E4%BD%9C%E3%82%8A%E6%96%B9/</link><pubDate>Sat, 27 Apr 2019 15:06:46 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E6%99%82%E4%BB%A3%E3%81%AEweb%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%81%AE%E4%BD%9C%E3%82%8A%E6%96%B9/</guid><description>技術書典6で購入した本１冊目。
ガチで役に立つ本でした。
コンテナ時代のWebサービスの作り方 | 楽描商店 https://t.co/xFdOX3orNn 技術書典6で頒布した本をboothにて委託しております。ご活用ください。#booth_pm #技術書典 &amp;mdash; とまと（nasum）技術書典え35楽描帳 (@tomato360) April 14, 2019 とりあえず、76/103ページまでやってみました。ここまで行くと、ソースをコミットしたら自動的にサイトに反映される仕組みが動きます。
が、多少悪戦苦闘したところもありますので、その辺をメモ。
リージョン 書籍では、東京リージョン（ap-northeast-1）を使うことになっていますが、元々オハイオを使っていたのでそちらのus-east-2を使うことにしてみました。
すると、
The image id '[ami-785c491f]' does not exist となります。これはリージョンによって異なるので、ami-8b92b4eeに変更します。（参考）https://docs.docker.com/machine/drivers/aws/
Terraform Terraform初体験。インフラをコードで定義するとはこういうことなんだ。
しかし、これも簡単に進ませてはくれません。
Error inspecting states in the "s3" backend: BucketRegionError: incorrect region, the bucket is not in 'us-east-2' region status code: 301, request id: , host id: 今回一番ハマったかもしれないのはこのエラー。
例えば、
aws s3 ls なんかを叩くと帰ってくるので、この接続でs3の所定のバケットが見えていないわけでもない。結局、フォルダ全体を一回消して、再度やり直したらOKという最悪パターンでした。
また、実際の発生順序は前後しますが、さらに進んでまたこのエラーが出るようになりましたが、書籍だと、aws_route_table.tf、aws_route_table_association.tfが、間違っているのでgithub（書籍に記載あり）のソースを見て記載しました。
rubyバージョン 元々のローカル環境がruby2.3.7だったのが悪いと思うのですが、最初にそれで進めてしまい、いざbuildが動くと
You must use Bundler 2 or greater with this lockfile が出るようになってしまいました。</description></item><item><title>Glideの味わい方〜オープンデータを活用しよう</title><link>https://jqinglong.github.io/programmers-office/glide%E3%81%AE%E5%91%B3%E3%82%8F%E3%81%84%E6%96%B9%E3%80%9C%E3%82%AA%E3%83%BC%E3%83%97%E3%83%B3%E3%83%87%E3%83%BC%E3%82%BF%E3%82%92%E6%B4%BB%E7%94%A8%E3%81%97%E3%82%88%E3%81%86/</link><pubDate>Thu, 18 Apr 2019 11:24:15 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/glide%E3%81%AE%E5%91%B3%E3%82%8F%E3%81%84%E6%96%B9%E3%80%9C%E3%82%AA%E3%83%BC%E3%83%97%E3%83%B3%E3%83%87%E3%83%BC%E3%82%BF%E3%82%92%E6%B4%BB%E7%94%A8%E3%81%97%E3%82%88%E3%81%86/</guid><description>Xamarinなかなか踏み込んでくれないなと感じたりしています。
Xamarin 最近どうよ？ – Qiita
https://qiita.com/amay077/items/399002a02c1abf9d620b
こちらの記事は面白く、中で紹介されている、Xamarin.Forms Visualの画像を見ると、「よいのでは！」と思いますが、さてどうなることやら・・・
これに対して、上記記事でも紹介されているGlideが、めちゃくちゃ踏み込んできていて面白い。
Glide
https://www.glideapps.com/
ノンコーディング、ノンデザインセンスで、綺麗なアプリがすぐに作れる。本当にすぐに。ただし、データがあれば。私も、常々、コンテンツを持っている人は強いなと思っており、そういう人とコラボして面白いものを作りたいと思っているのですが、まあ普通の人はもしかしたら、簡単にアプリが作れると言っても、響かないのかもしれません。しかし、・・・
オープンデータがある！ オープンデータの定義は
① 営利目的、非営利目的を問わず二次利用可能なルールが適用されたもの
② 機械判読に適したもの
③ 無償で利用できるもの
となります。
https://cio.go.jp/policy-opendata
カタログサイトも提供されているので、色々な観点で見てみると、興味があるデータもあるのではないでしょうか。それを、アプリを通じて活用できたら面白いのではと思いました。
Glide実践 では、実際のデータを使用して、アプリを作ってみます。
データ登録 今回は、「港区観光施設」データを使用してみます。
http://www.city.minato.tokyo.jp/opendata/kanko/index1.html
CSVで提供されているので、ダウンロードします。
ダウンロードしたら、すかさず、Googleドライブにアップします。
アップして、すかさず開き、すかさずGoggleスプレッドシートで開きます。
データ加工 これだけでアプリ作成に行けますが、あえて最初からデータ加工してみます。
「港区観光施設」データをみると、「エリア名称」と「種別」でカテゴリ分けされていることが分かります。アプリでも、この二つのカテゴリで絞り込みできるようにします。
まず、ファイル名は「港区観光施設」とし、元のシートは「施設一覧」に名前を変更します。次に、シートを追加し、シート名を「エリア名称」とし、A1の値も「エリア名称」とします。
次に、A2に「=Unique」と打ち込みますと、入力アシスタンスが起動しますので、クリックし、「施設一覧」シートのB列を選択します。Enterにより、「エリア名称」シートは値がグルーピングされた状態で表示されます。すごい。
（なお、94行目に余計なデータがあることが分かりますので、行削除してしまいます）
で、これだと1行目の「エリア名称」も含まれてしまうので、「=UNIQUE(‘施設一覧’!B2:B)」とします。これできれいになります。
同じように、「種別」シートも作成します。
次に、両シートに細工します。「エリア名称」のB列の1行目を「施設=施設一覧:エリア名称:multiple」として、各行をA列を参照するようにします。「種別」シートも同様です。
これで準備完了です。
Glide基本作成 Glideにログインします。
「＋」でアプリ追加を行います。先ほど作成したファイルを指定して、「Select」クリックにより、アプリが生成されます。
基本的にはこれで動くアプリができています。ただし、さすがに、どの項目をどういう配置で表示するかは指定してあげないといけません。
今回のデータだと、施設一覧データの先頭2列が表示されてしまっているので、これを変更します。しかしそれも簡単です。Titleに「名称」、Detailsに「所在地」を指定すると、それっぽくなると思います。
データを1行選択すると、詳細ページに遷移します。
こちらでも、各項目の設定をします。１項目目のSummaryは、「名称」「種別」が良いかなと思うので変更し、「名称」「種別」「緯度」「経度」は不要かと思うので削除します。さらに、右上の「＋」で項目追加ができますので、ここでMapを指定します。Address欄に「所在地」を指定することで自動的に地図が表示されます。
「エリア名称」「種別」は基本項目が１項目しかないので、明細は自動表示で問題なしです。クリックした先の施設一覧情報は、Inline listの項目を調整します。
完成です！
今回作ったアプリはこちら。
https://minatoku-kanko.glideapp.io/
Glide仕組みのポイント いきなり単純データを指定してアプリを作ってから、シートを直してもReload sheetにより反映されますので、最初はそのようにしてカスタマイズしていくのが面白いと思います。
一番のポイントは、Inline listの作り方ではないかと思います。上ではさらっと書きましたが、Inline listを作るために、シートに細工をします。最初に行った、multipleの指定です。
シートの中に、multipleの指定を行うと、その項目をInline listに指定することができます。
もう少し具体的に書くと、ある詳細画面に１データを表示している際に、その中に、子データを明細表示できるのが、Inline listです。今回の上記アプリでは、エリアの詳細情報（と言っても今回は１項目だけですが）の中に、エリアに紐づく施設を子データとして明細表示している形になっています。子データというからには、キーによる紐付けが必要で、その定義を1行目の項目記述で行なっています。
「施設=施設一覧:エリア名称:multiple」という記述では、子データの情報名が「施設」、その子データがどこに存在するかが「施設一覧」、紐付けキーが「エリア名称」、そして子データとして複数明細存在することを示す「multiple」という構造になっています。
他にも作ってみました。 面白いので量産しています。</description></item><item><title>MacでVisual Studio 2019</title><link>https://jqinglong.github.io/programmers-office/mac%E3%81%A7visual-studio-2019/</link><pubDate>Sat, 13 Apr 2019 23:47:31 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/mac%E3%81%A7visual-studio-2019/</guid><description>Visual Studio 2019がリリースされ、Mac版にも対応されていますので、インストールしてみます。
最初にメッセージが出ますが、インストール中2、３回パスワード入力が必要ですので、完全放置はできませんでした。
インストールしたら、サンプルとして
https://docs.microsoft.com/ja-jp/xamarin/cross-platform/samples/
Acquaint
⁨app-acquaint⁩/App⁩/Acquaint.XForms.sln
を開きますが、UWPは対応していないというメッセーが出るので、ソリューションからは削除します。
で、左上に「Xcode 10.2でコマンドラインツールがありません」というメッセージが出ているので、これはインストールしてしまいます。
https://developer.apple.com/download/more/
次に、「アクティブな構成内でプロジェクトがビルドされていません」というメッセージが出て、ビルドが完了しませんが、これは下記が参考になりました。
http://kuxumarin.hatenablog.com/entry/2016/12/01/Xamarin.iOS_%E3%81%AE%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%A7_%22%E3%82%A2%E3%82%AF%E3%83%86%E3%82%A3%E3%83%96%E3%81%AA%E6%A7%8B%E6%88%90%E5%86%85%E3%81%A7%E3%83%97%E3%83%AD
ビルドするとそれでも警告は残っていますが、実行すると、何も設定をしていないのでさすがにデータ保存はできませんが、とりあえず、最初の画面表示はできました。</description></item><item><title>Adobeの行く先</title><link>https://jqinglong.github.io/programmers-office/adobe%E3%81%AE%E8%A1%8C%E3%81%8F%E5%85%88/</link><pubDate>Wed, 10 Apr 2019 11:25:40 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/adobe%E3%81%AE%E8%A1%8C%E3%81%8F%E5%85%88/</guid><description>アドビ、3月1日付けでマルケトとの統合を完了（2019年3月6日）
https://www.adobe.com/jp/news-room/news/201903/20190306-adobe-marketo-integration.html
「この度の統合によりデジタルにおける顧客体験において、アドビがもつ分析、コンテンツ管理、パーソナライゼーション、広告、コマースといった様々なソリューションに加え、マルケトのリード管理およびアカウントベースドマーケティング技術を合わせて両社のお客様に提供することが可能になります。」
それに先行して
アドビ、Magento Commerceを買収
https://www.adobe.com/jp/news-room/news/201805/20180522-magento-commerce.html
Magento Commerce Cloudが組み込まれることにより、コマース機能がAdobe Experience Cloudにシームレスに一体化され、B2BとB2C両方の世界中のお客様に単一のプラットフォームを提供できるようになります。
両製品の位置づけ https://www.adobe.com/jp/what-is-adobe-experience-cloud.html
Adobe Experience Cloudという製品群の中で
分析：Adobe Analytics
オーディエンスのプロファイル：Adobe Audience Manager
・・・
コマース：Adobe Magento
B2Bマーケティング：Marketo
そもそも、Experience Cloudの位置づけ Creative Cloud：PhotoshopやIllustrator等の提供　一般的（昔からの）なAdobeのイメージ？
Experience Cloud：単一のクラウド基盤に統合された、「エクスペリエンスのための記録システム」
Document Cloud：Acrobat など　これも昔からのAdobeイメージ
すなわち、昔ながらのビジネス領域でもクラウド化を進める中で、クラウド自体を基盤としたビジネスも展開し始めているということのよう。
所感 内容が分かりにくすぎる。
Adobe Analytics？Google Analytics的なことを意図しているのは分かりますが、具体的に何ができて、どういう仕掛けが必要なのか、一般情報から何もわからないのは、導入の検討のしようもないかと思います。
個人的には、ビジネス利用としては、Magento、Marketoがより充実したサポートが得られるようになることを期待しつつ、本当はその一つ手前に、CMSが主戦場としてあるべきで、Adobe Experience Manager Sitesがそこを担っているように思われますが、あまりにも情報不足なので、無料提供含めて利用者層を拡大するのが良いのでは。その際の強みは、デザインツールとの統合で、ビジュアル面に優れたサイト構築ができること、かと思います。
期待してます。</description></item><item><title>LINEリッチメニューのコツ</title><link>https://jqinglong.github.io/programmers-office/line%E3%83%AA%E3%83%83%E3%83%81%E3%83%A1%E3%83%8B%E3%83%A5%E3%83%BC%E3%81%AE%E3%82%B3%E3%83%84/</link><pubDate>Sun, 31 Mar 2019 12:55:03 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/line%E3%83%AA%E3%83%83%E3%83%81%E3%83%A1%E3%83%8B%E3%83%A5%E3%83%BC%E3%81%AE%E3%82%B3%E3%83%84/</guid><description>ネタは熱いうちに打たないと、テンションはすぐ下がりますね。
まずは、小ネタで、リッチメニューについて。
リッチメニューとは何かについては、
https://www.google.com/search?q=line+%E3%83%AA%E3%83%83%E3%83%81%E3%83%A1%E3%83%8B%E3%83%A5%E3%83%BC&amp;amp;source=lnms&amp;amp;tbm=isch&amp;amp;sa=X&amp;amp;ved=0ahUKEwjChdXvsazhAhVXyIsBHbDIDCAQ_AUIDigB&amp;amp;biw=1628&amp;amp;bih=1054
こんな感じで画像を見るとよくわかりますね。で、これがあってこそ、ボット作ったな感が出ると思うので、まずはここから始めるのはアリかと思います。実際上も、いきなり何を入力したら良いかわからない、という事態を避けるためには、メニューは有効かと思います。
しかし、絵心がない人が、これをどう作るか、というのは悩みどころです。
しかも、６分割メニューを作るなら、画像を６個用意するのかなと思ったら、大きい画像を用意して、その絵の中で６分割の表現をする、ということで、まずはそもそも、どうやってそんな綺麗に分割するのかというところから始まってしまいました。
しかし、これについては、良い方法を思いつきました。あまり大きい画像では持て余すかと思って、400×270で作りましたが、こちらを見ると、本当は1200×810で作った方が良かったようです。
で、良い方法というのは、Excelで列幅133、高さ135のセルを６個作り、それを塗りつぶし、罫線を白にします。その６マスをコピーして、Wordに画像として貼り付ける！これで、よい感じの雛形ができますので、あとは、そのマス内にイラスト等を貼り付けたり文字を書いたりして、周りを塗りつぶす！
画像アプリを使いこなせない非デザイナにとってはなかなか良い方法ではないでしょうか。
そしてまた、この作業をするにあたっては、macはきつかったです。標準のプレビューアプリでは塗り潰しができず、PhotoScape Xという無料アプリでも、塗りつぶし機能は有償オプションになっていました。この点、Windowsのペイントなら完璧にタスクをこなしてくれます。
しかも、上記のExcelからWord貼り付け作戦は、Googleスプレッドシートではできず、Excelオンラインでもできませんでした。
まさか、画像作成で、macからWindowsに戻るとは・・・
もう一つ注意点としては、アップロードする画像サイズはぴったりサイズでないと受け付けてくれません。エラーメッセージが、jpgかpngでないとダメです、というようなものなのでわかりにくかったのですが、幅399を400にしたら受け付けてもらえました。
ということで、一応参考画像を下に貼っておきますが、次回作る時は、1200×810で作り直そうと思います。（最初からそれにしておいたらアップロードではまらなかった・・・）</description></item><item><title>車検だ、自動車保険だ</title><link>https://jqinglong.github.io/programmers-office/%E8%BB%8A%E6%A4%9C%E3%81%A0%E3%80%81%E8%87%AA%E5%8B%95%E8%BB%8A%E4%BF%9D%E9%99%BA%E3%81%A0/</link><pubDate>Sun, 31 Mar 2019 09:24:06 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E8%BB%8A%E6%A4%9C%E3%81%A0%E3%80%81%E8%87%AA%E5%8B%95%E8%BB%8A%E4%BF%9D%E9%99%BA%E3%81%A0/</guid><description>色々溜まっていることもやらねばならず、車検を申し込み、自動車保険の見積も申し込み。
車検はディーラーに任せるスタイル。そのおかげではないかもしれませんが、今の車は中古ながら装備的に非常に満足度が高く、それでいてお値段もお得だったので、基本的には一切合切お任せしています。
で、その時は、任意保険もお任せでやったのですが、さすがに、保険の内容はディーラーは感知しないし、値段もだいぶ違うだろうということで、ネットでの一括見積もり。
申し込むとすぐに見積もりが表示されますが、やはりだいぶ違いますね。あまり、各社の差異もないと思われるので、最安値で良いか、という感じです。</description></item><item><title>チャットボット（LINE bot）を作る</title><link>https://jqinglong.github.io/programmers-office/%E3%83%81%E3%83%A3%E3%83%83%E3%83%88%E3%83%9C%E3%83%83%E3%83%88%EF%BC%88line-bot%EF%BC%89%E3%82%92%E4%BD%9C%E3%82%8B/</link><pubDate>Fri, 29 Mar 2019 23:43:31 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%83%81%E3%83%A3%E3%83%83%E3%83%88%E3%83%9C%E3%83%83%E3%83%88%EF%BC%88line-bot%EF%BC%89%E3%82%92%E4%BD%9C%E3%82%8B/</guid><description>仕事の方の年度末のパワープレーの影響で、こちらはすっかりご無沙汰になりました。
そして、突然チャットボットを作ることを思い立ち、試してみたところこれがなかなか面白い。ということで、いくつか作ってみたいのですが、前半戦を終えたところで、まとめてみたいと思います。
LINE bot　の処理の流れ 作るにあたって、今回いきなり作り始めましたが、ある程度流れがわかっていると、よりスムーズに入れるのでは、ということで、流れの絵を描いてみました。
絵心のなさアピールしてどうするんだという気持ちもありますが・・・
①普通に、LINEでトークをする場合に、自分が発言入力したら、それはおそらくLINEのDBに保存されて、画面に表示されて、処理終了となると思います。
チャットボットを作る場合は、利用者の入力に対して、Webhookという仕組みを組み込みます。
設定としては、Webhook送信を「利用する」として、そのURLを指定するのみです（けど、URL指定するなら、「利用する」の当たり前じゃない？？最初、URLだけ指定して、呼び出しに失敗して小一時間ほどハマりました）。
②LINEはWebhook送信先に、入力内容をPOSTします。
ですので、まずPOSTを受けられるサイトを用意する必要があります。
これを、今回は、GAS（Google Apps Script）を使用して立ち上げました。
しかし、立ち上げたという表現は正しくないかもしれません。「立ち上げる」的な行為は何もしてません。ただ、Googleドキュメントの１ページを作るかのように、ファイルを一つ作成し、そこにおもむろにコードを書きます。
function doPost(e)
と書いて、ウェブアプリケーションとして公開するのみです。これがサーバーレス・アーキテクチャというものか・・・とちょっと感動しました。
③GASの中で色々やっても良いのですが、GASから外部サービスを呼んで、Responseを受け取ることができます。多くの場合はこのパターンではないでしょうか。Webhookはhttpsで呼ぶ必要がありますが、GASからの呼び出しはhttpでもよい、という裏技的な使い方も可能です。
④受け取った情報を加工して、最後は、LINEのMessaging APIを呼び出します。Replyというのが、要は、利用者にとっての、トーク相手の発言になります。この返し方も、単純なテキストメッセージとして返すだけでなく、様々なフォーマットで返すことができる、というところがボットとしてのインターフェースの魅力につながります。
また、②のPostに対するResponsとしてReplyを返すのではなく、独立したAPI呼び出しになっている、というのもなるほどと思いました。例えば、一つの入力に対して、複数のReplyを返すことができる、ということです。※これはできないっぽい。メッセージを配列で返すことはできます。
⑤最後に、Replyの内容が、画面上に表示されます。
なぜチャットボットを作るのか 正直、これまで、限られた知り合いとの連絡手段として以外にLINEをあまり使ってこなかったこともあり、ボットの何が良いのかわかりませんでした。
しかし、今回作る方から入ってみて、魅力があることも分かりました。
利用者にとってのチャットボットの魅力 一言で言うならば、「入力画面というインターフェースからの解放」とでも言えば良いのでしょうか。画面にいくつか項目があって、それらを入力して情報を得る、というのは、やはり処理する側の都合に合わせたインターフェースではあると思います。より直接的にこれが欲しいと言ってもらう、あるいは、質問に答えてもらいながら欲しいものを認識する、という方法が、自然な気がしました。
開発者にとってのチャットボットの魅力 主題はこちらですが、意外と良いものでした。
(1)フロント側作業の軽減
LINEとして決まっているReplyの返し方に従っている限り、ある程度の見た目の保証が得られる、かつ、フロント側障害が発生しにくい、ということがあるかと思います。もちろん、綺麗にメニューを出そうと思ったらイラストを書く等が必要になってきたりして、フロント側の才能が不要になるわけではありません。しかし、見た目の印象作りにいつも悩まされる身としては、これだけの作業でこの結果が得られるというコスパはかなり高いと感じます。
(2)クロスプラットフォーム開発
今作っているのも、身近な人用のこじんまりとしたアプリですが、その利用者の中でもiPhoneとアンドロイド端末は半々という感触です。すなわち、各OS向けのアプリと作るか、クロスプラットフォーム開発をするしかない、と考えています。
しかし、クロスプラットフォーム開発は、ここでも色々トライしているように、なかなか決定打が現れないというのが現状かと思います。また、それぞれ作ろうと思っても、macアプリを作ろうと思ったらmacが必要、というのもやはり障壁です。
これに対して、LINEのプラットフォーム上で動作するチャットボット方式はそこへの配慮が０で良い、という点で強力です。
(3)インストールへのハードルの低さ
上とも関係しますが、特に、身近な人向けの野良アプリの場合、作ったものをインストールしてもらおうというのも、一苦労があったりします。iPhoneの場合に野良アプリを配布する方法があるのか、分かりません。
アンドロイドの場合も、apkファイルをダウンロードしてもらう方法は提供できたとして、それをインストールしようとしたら警告が出てしまうことを考えると、ちょっと無理だな、と思ってしまいます。
これに対して、チャットボットであれば、LINEで繋がっている人であれば「おすすめ」でその人を指定することですぐに見てもらうことができますし、友達になる前にQRコードを見せて繋がってもらうこともできます。これであれば、安心して利用してもらえるのではないかと感じました。
開発に向けての情報 世間には１時間で開発できる系の情報がたくさんあります。確かに、１時間で動くもの（入力した文字をそのまま応答する、程度ですが）が完成するので、とっかかりやすいのは間違いないです。そこからさらに、６時間くらいかけて、
・日→中、中→日、日→英、英→日　翻訳
・リクルートのスタディサプリAPIからの情報検索
・クックパッドの情報検索
を作りました（クックパッドは丸パクリですが）。
作ったもののそれぞれの解説をしてみたいと思う他にも、今後の開発に向けての情報として、書きたいことが色々出てきました。
・GASとは。サーバレストは。
・GAS版JSON処理方法、XMLパース方法、HTMLスクレイピング方法
・LINEリッチメニューのコツ
・Flex MessageによるリッチUI
・ローソンアプリ（現在のLINEボットの最高峰？）の分析
ボチボチやっていこうかと思います。</description></item><item><title>PayPal決済の導入</title><link>https://jqinglong.github.io/programmers-office/paypal%E6%B1%BA%E6%B8%88%E3%81%AE%E5%B0%8E%E5%85%A5/</link><pubDate>Sun, 10 Feb 2019 21:15:02 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/paypal%E6%B1%BA%E6%B8%88%E3%81%AE%E5%B0%8E%E5%85%A5/</guid><description>WooCommerce・WCFM Marketplaceサイトに、PayPal決済を導入します。
お金の動き WooCommerceとして、こういうのを本当は簡単にまとめて欲しいわけですが・・・まず、購入者がPayPalを使って支払う、この支払われたお金は、どこに行くべきか。
WooCommerceだけで考えるなら、このサイト開設者＝店舗なので、そこに行けば良いわけですが、Marketplaceの場合は、基本的には店舗に行きつつ、システム利用料（コミッション）がサイト開設者に行くべきとなります。
で、最終的にはそうなのですが、では、具体的にPayPalの設定は誰のアカウントで設定すべきなのか。店舗ごとに設定するのは大変ではないですか？と考えると、開設者のアカウントで設定し、一旦開設者に支払われた後、店舗に利用料を差し引いた分が支払われる？
そんなことを考えながら、進めます。
上記の予想から考えると、サイトとしての設定はWooCommerceとしてやるべきだろうということと、WooCommerceの方が情報が多いので、それをやってみましょう。
WooCommerceのPayPal設定 ダッシュボードから、WooCommerce→Settings→Paymentsと進むと、支払い方法を選択する画面になります。
たくさん・・・Paypalは二つ、Stripeはたくさん・・・
さて、PayPalには、PayPalという、いわゆるPayPal Standardと、PayPal Checkoutというものがあります。
この違いは何か。
開発者向けTOP（導入方法・技術情報）-PayPal(ペイパル)
https://www.paypal.com/jp/webapps/mpp/developer
このページの「簡単決済ボタン」と「API決済」に対応するということですね。
簡単決済は、いったんPayPalサイトに飛んで行って戻ってくるタイプ。
API決済はどこまで裏でできることになるか分かりませんが、「よりセキュリティーが高く、画面遷移が少ないため、成約率のアップが期待でき、カゴ落ち率の減少に貢献します。」とのことです。
PayPal Standard（簡単決済ボタン） とりあえず、簡単そうな方から。
Payment methods画面のPayPalの文字、または右端のSetupボタンから、設定画面に移動します。
「PayPal email」に、PayPalサイトの「Sandbox Accounts」で確認した、BUSINESSのアドレスを登録します。
そして、「PayPal sandbox」にチェックします。
「Receiver email」にもBUSINESSアドレスを登録。
「PayPal identity token」は、PayPal画面で確認。
Sandboxのダッシュボードの右上歯車アイコンで、アカウント設定画面に入ります。
左メニューから「アカウント設定」→「販売ツール」→「ウェブサイトの設定」で、
「ウェブペイメントの設定」という画面に入ります。
ここで、自動復帰：オン、復帰先は、サイトのトップにしてみます、そして、支払いデータ転送：オンにすると、IDトークンが表示されます。
あまり日本語情報ないなと思っていましたが、こちらが参考になりました。
https://e-yota.com/webservice/wooccommerce_paypal_standard_payment/
いったんは、これで動作するのではないか、ということで、試してみます。
商品をカートに入れて、支払い画面に遷移すると、注文者情報入力欄の右側に、下記のようなエリアが現れます。
・・・おっと、これだと配送方法が決定できず、支払いに進めませんので、先にそちらの設定をします。</description></item><item><title>PayPal決済の準備</title><link>https://jqinglong.github.io/programmers-office/paypal%E6%B1%BA%E6%B8%88%E3%81%AE%E6%BA%96%E5%82%99/</link><pubDate>Sat, 09 Feb 2019 01:15:20 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/paypal%E6%B1%BA%E6%B8%88%E3%81%AE%E6%BA%96%E5%82%99/</guid><description>次は、WooCommerce・WCFM Marketplace からのPayPal決済連携を試したいと思いますが、その前にPayPal決済環境の準備。
PayPal Sandbox 当然、いきなり決済を開始できるわけではないので、まずはお試しをしたい。
そのために、Sandbox環境が用意されています。
いつも、PayPalにログインするものの、開発者サイトへの入り口に悩んで、結局ググって直接、飛んでいく。
PayPal Developer
https://developer.paypal.com/
PayPal、仕組み自体は開発者に優しいと思いますが、Webサイトはあまり優しくない。
PayPal Developerにログインしたら、右上にログイン者の情報が表示されるエリアがあるので、その中のDashboard。
そこから先は、こちらなどを参考に。
https://qiita.com/PPJP/items/6ba65ed21da7fba65586
ポイントとして、gmailのアドレスでは、「＋」記号を使ってエイリアスを自動的に作ってくれるところ。これで、買い手用のアカウントと売り手用のアカウントをそれぞれ作ります。
アカウントを作成したら、Sandboxサイトにログインしてみます。
https://www.sandbox.paypal.com/jp/webapps/mpp/home
これも、Sandboxだと分かるようにしてくれれば良いと思うのですが、本番サイトさながらのページ。
URLを確認しながら、ログインし、トップページのダッシュボードを確認します。
私の場合、アカウントは以前作ってあったのですが、どこから情報を確認したらよかったんだっけ、という状態でしたので、その場合は、PayPal Developerにログインし、ダッシュボードでアカウントを確認し、そのアカウントで、Sandboxサイトにログインする、ということになります。
このアカウントを使って、決済連携を試してみます。</description></item><item><title>WCFM Marketplace ショップページ</title><link>https://jqinglong.github.io/programmers-office/wcfm-marketplace-%E3%82%B7%E3%83%A7%E3%83%83%E3%83%97%E3%83%9A%E3%83%BC%E3%82%B8/</link><pubDate>Sun, 03 Feb 2019 01:26:35 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/wcfm-marketplace-%E3%82%B7%E3%83%A7%E3%83%83%E3%83%97%E3%83%9A%E3%83%BC%E3%82%B8/</guid><description>WCFM Marketplaceの設定。各ショップページの設定。
基本的には、Marketplace→Vndorsで設定していきます。
デモサイトのこちらの見た目を参考にします。
http://wcfmmp.wcfmdemos.com/store/wcfm-vendor/
気になる点は二つ。
一つは、STORE HOURS。
WCFM MARKETPLACE – STORE HOURS
https://wclovers.com/knowledgebase/wcfm-marketplace-store-hours/
これを見ると、2ヶ所の設定だけで良さそう。念のためと思って、ベンダーユーザでログインしてこのヘルプページと同じ画面でも確認してみましたが、設定はされているけど、公開ショップページには表示されない。
この辺は、おそらく使用しているテーマにも関係してくる。
Shop Isleを使っている訳ですが、テーマのカスタマイズで、「Vendor Store Sidebar」という設定項目があり、そこで、Store Hoursを追加できます。
で、これをやると表示されるようになった訳ですが、ただ、元々表示されていた、商品カテゴリー表示とか、店舗地図とかが消えちゃった。
まあ、あまりデフォルト表示に頼るのもどうかというのもあるので、必要な表示をここに追加していくことで、だいぶ見た目も整ってきました。
※用意されているウィジェットも豊富です。
もう一点は、ABOUTとPOLICIESの入力場所。
これは、どうやら管理者ログインだと表示されないようで、ベンダーログインして設定。
管理者は全部できるようにしておいて欲しい気もしますが、まあ、良いかと思います。</description></item><item><title>WCFM Marketplace 地図の表示〜Places API</title><link>https://jqinglong.github.io/programmers-office/wcfm-marketplace-%E5%9C%B0%E5%9B%B3%E3%81%AE%E8%A1%A8%E7%A4%BA%E3%80%9Cplaces-api/</link><pubDate>Sat, 02 Feb 2019 23:44:30 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/wcfm-marketplace-%E5%9C%B0%E5%9B%B3%E3%81%AE%E8%A1%A8%E7%A4%BA%E3%80%9Cplaces-api/</guid><description>地図のプラグインMAPPRESS GOOGLE MAPを入れて、API Keyを設定すると、地図自体は表示されるけれども、入力した住所と連動してくれないという状態でした。
で、productsの地図を入力しようとすると、このようなエラーが。
Google Maps API Key error: please enable the Places API in the Google Developer Console. すなわち、Google Maps Platformという大きな括りの中で、大きく三つのサービスが提供されています。そして、そのうちの一つが、Places APIです。
https://cloud.google.com/maps-platform/products/?hl=ja
たしかに、3つ目をチェックしなかった気がします。
改めて、有効にするのはこちらの画面から。
無事連動するようになりました。</description></item><item><title>鉄拐</title><link>https://jqinglong.github.io/programmers-office/%E9%89%84%E6%8B%90/</link><pubDate>Fri, 01 Feb 2019 16:05:37 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E9%89%84%E6%8B%90/</guid><description>立川流の人たちは本を書きますね。
落語進化論は立川志らくさんの本。
落語進化論 /新潮社/立川志らくposted with カエレバ 楽天市場 Amazon 7net この最後に紹介されるのが、鉄拐という落語。
鉄拐は、李鉄拐という仙人。八仙人の一人ということで、八仙人とは、こちら。
https://ja.wikipedia.org/wiki/%E5%85%AB%E4%BB%99
八仙人が登場する小説としては東遊記などがある。西遊記ではなく東遊記。
内容は、上海問屋のイベントのために仙人が駆り出され、そこから仙人が芸人として俗人化していくところに、人間(仙人は人間？)の業があるか。
最後に登場するのは、李白と陶淵明。
李白は唐代の詩人。陶淵明は東晋から南北朝時代の文学者。どちらも酒飲みという背景がオチとして使われている。</description></item><item><title>WCFM Marketplace Homepage設定</title><link>https://jqinglong.github.io/programmers-office/wcfm-marketplace-homepage%E8%A8%AD%E5%AE%9A/</link><pubDate>Thu, 31 Jan 2019 16:00:36 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/wcfm-marketplace-homepage%E8%A8%AD%E5%AE%9A/</guid><description>Homepageに表示する固定ページ 設定画面のReadingから「Homepage」にショップページを指定します。
最初Wordpressインストール時に日本語指定していたからか、日本語になってしまってますが、WooCommerce本体としてのトップページであり、これがWCFM Marketplaceでは、全店舗横断の商品ページ、という位置付けになります。
「Posts page」は指定すると、その画面はブログページになってしまうので、必要な場合はそれ用の固定ページを作る、ブログが不要な場合は非表示のページを指定しておく、というような形で良いかと思います。
地図 今日のメインは地図。
地図の表示にあたっては、他のプラグインとの連携が考えられているようです。
DOCUMENTATION
https://wclovers.com/knowledgebase/
この中で、INTEGRATIONSに挙げられている地図関連のものが3つ。
どれを使っても良いのかなというのは、それぞれの紹介文面から見て取れます。
WCFM – MAPPRESS GOOGLE MAP
https://wclovers.com/knowledgebase/wcfm-mappress-google-map/
In recent days Map – Google Map is very much essential to inform about your store/product location to your customers. “MapPress Easy Google Map” is one of the most easiest and user friendly plugin to do so. You can associate any number of maps with your product and also allowed any no of points within a single map, isn’t it really cool!</description></item><item><title>WCFM Marketplace サイト構成</title><link>https://jqinglong.github.io/programmers-office/wcfm-marketplace-%E3%82%B5%E3%82%A4%E3%83%88%E6%A7%8B%E6%88%90/</link><pubDate>Wed, 30 Jan 2019 14:56:33 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/wcfm-marketplace-%E3%82%B5%E3%82%A4%E3%83%88%E6%A7%8B%E6%88%90/</guid><description>WCFM Marketplaceならではのサイト構成をどう考えるか。
デモサイトを見ると、まず、HOMEPAGEとしては、色々なショップの商品一覧。
http://wcfmmp.wcfmdemos.com/
地図があって、検索条件項目があって、商品写真が並ぶ。
妥当ですね。
ヘッダのリンクは管理画面のリンクも混在していますが、コンシューマ画面と考えた場合に必要なのは、ショップ一覧というのは先日も書いたところ。
https://www.programmers-office.ml/2019/01/26/wcfm-marketplace-%E6%9C%80%E5%88%9D%E3%81%AE%E4%B8%80%E6%AD%A9/
上記デモサイトでは「STORES」から遷移する画面。
http://wcfmmp.wcfmdemos.com/stores/
こちらも、地図があって、左サイドにショップの検索項目と、お勧めショップがあって、メインにショップの写真一覧が並ぶ。妥当。
次に必要なのは、各ショップのページ。
デモサイトで一例を見る。
http://wcfmmp.wcfmdemos.com/store/wcfm-vendor/
ヘッダに写真があって、左サイドに商品検索、クーポン、営業時間情報、カテゴリ、その他のショップのお勧め、地図、商品おすすめ。メインに商品を並べて、タブ切り替えで、店舗情報、レビュー等。
妥当。
そして、商品情報。
http://wcfmmp.wcfmdemos.com/product/olive-oil/
とりあえず、全体的にオーソドックスで良いと思いますので、この構成を一つずつ作っていきたいと思います。</description></item><item><title>WooCommerce用テーマ　Shop Isle</title><link>https://jqinglong.github.io/programmers-office/woocommerce%E7%94%A8%E3%83%86%E3%83%BC%E3%83%9E%E3%80%80shop-isle/</link><pubDate>Tue, 29 Jan 2019 15:07:05 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/woocommerce%E7%94%A8%E3%83%86%E3%83%BC%E3%83%9E%E3%80%80shop-isle/</guid><description>サイトの構成が見えてきたら、やはり見た目を整えたくなる。
ということで、WooCommerce用テーマの選択。
最初使ってみたのはこちら。
THESHOP
https://athemes.com/theme/theshop/#
おしゃれだなとは思ったのですが、ヘッダ部分にアイコン三つの表示が固定になっているようで、ちょっとアピールされすぎている感が気になりました。
そしてもう少し探してみて見つけたのがこちら。
ShopIsle
https://docs.themeisle.com/article/184-shopisle-documentation
https://ja.wordpress.org/themes/shop-isle/
以前、別のサイトを作るときに、IsleMagというテーマを使ったことがあります。
https://ja.wordpress.org/themes/islemag/
カラフルな見た目が気に入りました。
このサイトでも使おうと思いましたが、投稿日の表示のされ方だけ、ほんのちょっと気になって、また、現在使用しているMesocolumnがよりカラフルだったのでこちらにしたのですが、情報量の多さではIsleMagの方が強いので、実は今でも気になっています。
（ただ、今ちょっと調べてみると、This theme has been retired.となってしまっていますね。2019/1/28に更新されているのに？？謎・・・
https://themeisle.com/themes/islemag/
）
で、名前から分かるように同じ作者のeCommerce WordPress Themeとして提供されているものが、ShopIsleな訳です。
こちらの日本語情報も一通りの確認をするのに良さそうです。
https://lightup-works.com/shopisle
Islemagに比べれば情報はかなり少なくなりますが、共通知識も使えるのではという期待も込めて、使ってみたいと思います。
なお、他にテーマを探したい方は、こちらも参考になりそうです。THESHOPもShopIsleも紹介されています。オンラインストアの構築に最適！すべて無料のおすすめWordPressテーマ20選</description></item><item><title>WCFM Marketplace 最初の一歩</title><link>https://jqinglong.github.io/programmers-office/wcfm-marketplace-%E6%9C%80%E5%88%9D%E3%81%AE%E4%B8%80%E6%AD%A9/</link><pubDate>Sat, 26 Jan 2019 13:10:39 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/wcfm-marketplace-%E6%9C%80%E5%88%9D%E3%81%AE%E4%B8%80%E6%AD%A9/</guid><description>WooCommerce Multi vendor Marketplace (WCFM Marketplace)を使うにあたって、どこから始めれば良いか。
日本語情報は早々に諦めて、手探りで始めます。
管理画面 WPのダッシュボードはこんな感じになります。
そして、「Marketplace」からWCFM Marketplaceのメニューに移ります。
手順としては、やはりVendorsから始めます。
登録内容自体は見れば分かるレベルなので良いですが、ドキュメント検索しても見つからないのは、ちょっと不安・・・。
商品 次にProducts。
の前に、Categories。これが最初分かりにくかったですが、Productsメニューの中にあります。要するに、WooCommerceの機能なのか、Marketplaceの機能なのかを意識しながら考えることが必要です。
Productsについては、商品の種類を選択して、基本内容を登録し、バリエーション商品の場合は、属性を登録して、その属性によって金額等のバリエーション情報を登録。
この辺の仕組みは、WC Marketplaceでも同じ。というか、それはWooCommerceの機能ですね。
https://www.programmers-office.ml/2019/01/14/wc-marketplace%EF%BC%88%E5%95%86%E5%93%81%E6%A9%9F%E8%83%BD%EF%BC%89/
ちなみに、Welcartとかだと、バリエーションの分SKUコードを振って、それごとに金額等を設定。
https://www.welcart.com/documents/manual-2/%E5%95%86%E5%93%81%E3%83%9E%E3%82%B9%E3%82%BF%E3%83%BC
Magento もそうでしょう。その方がきっちりと管理できるのでしょうが、ちょっと面倒。必要なければ内部管理でも良いのでは、と思います。
そして、商品登録については、当然CSV等によるインポートが必要かと思います。
しかし、Product CSV Import機能は、ULTIMATEの機能だと言われます。
そんな・・・
WOOCOMMERCE FRONTEND MANAGER – ULTIMATE
https://wclovers.com/product/woocommerce-frontend-manager-ultimate/
と思いきや、商品の基本情報について言えばWooCommerceの機能な訳なので、メインダッシュボードの方のImport機能は使えます。
ですので、そちらでImportして、どの店舗の商品化の情報だけ後で加える、という方法も不可能ではないですね。けど大量だとやはり厳しいので、ULTIMATEは購入しても良いのかもしれません。49ドルは良心的でしょう。
そうすると、とりあえず、公開ページも見えるようになってきます。
基本の商品ページだと、色々なショップの商品が混在で表示され、ショップ名をクリックするとそのショップの情報とそのショップの商品が表示される。これは予想通り。良い感じかなと思います。
ショップ一覧表示ショートコード 一つやっておきたいのが、ショップ一覧。
これはショートコードが提供されているので、それを使います。
WCFM MARKETPLACE – STORE, WIDGETS &amp;amp; SHORT CODES
https://wclovers.com/knowledgebase/wcfm-marketplace-widgets-short-codes/
[wcfm_stores]というショートコードが提供されており、１行あたりの表示店舗数がデフォルト2になっているので、「per_row」という属性が用意されています。属性の使い方は、通常のWordpressのショートコードの作法を確認して、[wcfm_stores per_row=3]とします。
これはまあこんな感じでしょう。
デモサイトだとこんな感じ。
http://wcfmmp.wcfmdemos.com/stores/</description></item><item><title>Tポイント解約の前に、と思ったら・・・minibot スマートロボット掃除機</title><link>https://jqinglong.github.io/programmers-office/t%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88%E8%A7%A3%E7%B4%84%E3%81%AE%E5%89%8D%E3%81%AB%E3%80%81%E3%81%A8%E6%80%9D%E3%81%A3%E3%81%9F%E3%82%89%E3%83%BB%E3%83%BB%E3%83%BBminibot-%E3%82%B9%E3%83%9E%E3%83%BC/</link><pubDate>Wed, 23 Jan 2019 13:06:25 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/t%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88%E8%A7%A3%E7%B4%84%E3%81%AE%E5%89%8D%E3%81%AB%E3%80%81%E3%81%A8%E6%80%9D%E3%81%A3%E3%81%9F%E3%82%89%E3%83%BB%E3%83%BB%E3%83%BBminibot-%E3%82%B9%E3%83%9E%E3%83%BC/</guid><description>話題のTポイント。もしかしたらやめようと思っている方も多いかもしれません。
私も、ちょっと距離を置こうかなと思っています、というか、ここ2年ほどはだいぶ距離を置いています。嫌われがちな楽天ポイントですが、その中にどっぷり浸かってみるつもりになってみると、意外とお得感を感じるということは、以前も書こうとしたのですが、このタイミングで書くのも面白いかなと思っています。
が、その前に、T-PONT使おうぜ、というお知らせをしようとしたのですが、予想外の展開・・・。
お勧めしたいのは、「minibot スマートロボット掃除機」です。
これが、以前SOFTBANK SELECTIONというショッピングサイトで売られていまして、しかも、他のサイトと比べてかなり安かったのです。
購入時のメールを抜粋すると、下記のような形です。
[ご注文総額]
&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;
商品税込計：15,800円
送料(税込)：0円
&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;
お支払い総額：15,800円
&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;
Tポイント利用：800円
クレジットカード決済利用：15,000円
&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;&amp;#8212;
取得ポイント：158pt これに対して、現在身近なところで購入できるAmazonだと、2018.1現在で18,600円となっています。
ですので、Tポイントやめる前に、これ買ってからやめた方が良いよ、と言おうと思ったのですが、取り扱いをやめてしまっているよう（製品ページはありますが、購入できないみたい）なので、この製品購入でTポイントを活用するのは諦めてください。
ただ、上記の画像リンクからAmazonの商品ページの「類似商品と比較する」の表を見ていただくと分かるように、現価格でも十分安いです。
しかも、機能的には、スマホアプリ制御ができる、という点で他の格安品とはランクが異なります。
利点を二つ書くと、
・スマホアプリ制御
外出先から状態確認、開始・終了ができる。エラーになっている場合に、状態によっては、帰還だけさせておく、ということも可能。（動けなくなっているような場合は無理ですが）
・水拭き機能あり
ちょっと水分多めですが、フローリングの部屋や廊下には使えます。
ということで、コスパ最高と言って良いかと思います。
当然難点も色々あり、ただ、これは、上位製品なら対応できているかというと、そこは分からないのですが、
・ゴム、紐、マット等を巻き込んでエラーになっていることが多い
特に、輪ゴムは、取り外すのがかなり手間取るくらいがっちり巻き込んでしまう場合があるので、注意が必要
また、玄関マットに乗っかって、そのまま玄関下に墜落、ということもあるので、掃除の時は、片付けておく必要あり
・体力の続く限り掃除し続けるタイプ
どこを掃除したかを覚えておくタイプではないようで、適当に動き回って、電池が少なくなってきたら帰還しようとする、という動きのようです。
ですので、放っておいたら３時間以上やっていると思います。
それでも、よくここまで来るな、という感じで動き回り、２部屋＋廊下＋トイレ＋洗面所くらいは一通り掃除してくれます。
・静かではない
最初は気にならなかったですが、気にしだすと静かではないです。けど、普通の掃除機よりは静かではないかと思います。
・ごく稀にごみ受けが外れている。
Amazonのレビューにもありますが、ゴミ受けボックスが外れていることがありました。でも、10回に1回とかではないかと思います。
ということで、個人的には、ロボット掃除機はこれ一択ではないかというくらい気に入っています。</description></item><item><title>WooCommerceのマルチベンダープラグイン</title><link>https://jqinglong.github.io/programmers-office/woocommerce%E3%81%AE%E3%83%9E%E3%83%AB%E3%83%81%E3%83%99%E3%83%B3%E3%83%80%E3%83%BC%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3/</link><pubDate>Sun, 20 Jan 2019 13:18:55 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/woocommerce%E3%81%AE%E3%83%9E%E3%83%AB%E3%83%81%E3%83%99%E3%83%B3%E3%83%80%E3%83%BC%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3/</guid><description>ということで、改めて、WooCommerceのテスト環境を構築しましたが、マルチベンダー構成にするためのプラグインについては、もう少し検討したいと思います。
プラグイン画面で、「multi vendor」で検索すると、いくつかヒットします。この上位4件は割とインストール数も多いですし、更新頻度も高そうです。
いずれも、日本語対応は弱いので、優劣付けづらいのですが、概ね下記のような感じかと思います。
WC Marketplace
製品サイト
https://wc-marketplace.com/
デモサイト
http://wcmpdemos.com/WCMp/
アドオン
https://wc-marketplace.com/addons/
ドキュメント
https://wc-marketplace.com/knowledgebase/
・プラグイン自体は無償で、アドオンは有償（割と高め）が多い
・WooCommerce自体にはstripeの追加プラグインがあるのに、これ用には別途有償アドオンが必要？
・見た目はそれほど良くはないかな。テーマが豊富に公開されているのは良いけど、ほとんど有償？
https://wc-marketplace.com/third-party-themes/
WooCommerce Multivendor Marketplace
製品サイト
https://wordpress.org/plugins/wc-multivendor-marketplace/
デモサイト
http://wcfmmp.wcfmdemos.com/stores/
アドオン
https://wclovers.com/addons/
ドキュメント
https://wclovers.com/knowledgebase/
・アドオンは少ないけど、安価
特にデリバリ機能のアドオンが魅力的
・オープンソース
WC Vendors Marketplace 製品サイト
https://www.wcvendors.com/
アドオン
https://www.wcvendors.com/extensions/
ドキュメント
・デモが公開されていないのはなんともしがたい
・製品自体は、Free版とPro版になっていて、かなりお金がかかりそう
Dokan
製品サイト
https://wedevs.com/dokan/
デモサイト
https://dokandemo.wedevs.com/?utm_campaign=dokan_demo_users&amp;amp;utm_medium=dokan_demo_link&amp;amp;utm_source=WordPress.org
アドオン
https://wedevs.com/dokan/modules/
ドキュメント
https://wedevs.com/docs/dokan/
・見た目が美しい
・これもお金はかかりそう
・Free機能はオープンソース？
https://github.com/weDevsOfficial/dokan
結論 Dokanの見た目はかなり魅力的ですが、オープンソースで、追加アドオンも安価そうなWooCommerce Multivendor Marketplaceで進めてみたいと思います。
小さなＥＣサイトのＷｏｒｄＰｒｅｓｓ＋Ｗｅｌｃａｒｔ導入・設定ガイド 自前でもできる！ /翔泳社/南部正光posted with カエレバ 楽天市場 Amazon 7net</description></item><item><title>Docker 環境をステージング環境へ（GCP編）</title><link>https://jqinglong.github.io/programmers-office/docker-%E7%92%B0%E5%A2%83%E3%82%92%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E7%92%B0%E5%A2%83%E3%81%B8%EF%BC%88gcp%E7%B7%A8%EF%BC%89/</link><pubDate>Sun, 20 Jan 2019 04:57:47 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/docker-%E7%92%B0%E5%A2%83%E3%82%92%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E7%92%B0%E5%A2%83%E3%81%B8%EF%BC%88gcp%E7%B7%A8%EF%BC%89/</guid><description>GCP環境にDockerコンテナを作る方法はいくつかあるようです。
・GCE（Compute Engine）のVMインスタンス作成時に、コンテナ イメージをデプロイ
・Google Kubernetes Engine（GKE）にクラスタ環境を構築してデプロイ
・その他色々・・・
公式ドキュメントはこちら
Compute Engine への Docker コンテナのデプロイ
https://cloud.google.com/compute/docs/instance-groups/deploying-docker-containers?hl=ja
で、今回はシンプルそうな、VMインスタンス時にデプロイする方法を試します。
公式ドキュメントはこちら
VM およびマネージド インスタンス グループへのコンテナのデプロイ
https://cloud.google.com/compute/docs/containers/deploying-containers?hl=ja&amp;amp;_ga=2.46174759.-1895702560.1541304432
ですが、どうも分かりにくい。いくつか試してくれているサイトがありますが、どうも面倒なようにしか見えない・・・
インスタンス作成時は、Always Freeの条件
f1-micro インスタンス（1 か月あたり、バージニア州北部 [us-east4] を除く米国リージョンのみ）
を踏まえて。
ただこれ、イメージは一つだけなんですね。後から追加できるかな・・・とりあえず、DBのイメージだけ指定します。
とりあえず、起動はします。
DBだけだと動いているか分かりませんが、SSHで入って確認してみます。
入ると
########################[ Welcome ]########################
# You have logged in to the guest OS. #
# To access your containers use &amp;#8216;docker attach&amp;#8217; command #
###########################################################
と表示されています。
docker images で目的のイメージが入っていることが確認できます。
であれば、もう一つのイメージはpullを叩いても良いか。</description></item><item><title>Docker push Google Container Registry 編</title><link>https://jqinglong.github.io/programmers-office/docker-push-google-container-registry-%E7%B7%A8/</link><pubDate>Sun, 20 Jan 2019 02:07:55 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/docker-push-google-container-registry-%E7%B7%A8/</guid><description>さらに新しい編。ドカベンか！
ドカベン　プロ野球編　（1-52巻 全巻） / 水島新司 / 秋田書店posted with カエレバ 楽天市場 Amazon 7net 今度は、Google Container Registry へのpushを試してみます。
始める前の準備 Container Registry のクイックスタート
https://cloud.google.com/container-registry/docs/quickstart?hl=ja
プロジェクトは既存のものを使用します。
課金の設定もしてあります。
Container Registry APIの有効化は、こちらのページのリンクボタンからGCP画面へ飛んで行って、ボタンを押していけばできます。
Google Cloud SDKはインストール済みでしたので、ここもスキップ。
この時にインストールしたのですね。
サイト引っ越し、そして、再引っ越し（Part2）
https://www.programmers-office.ml/2018/12/22/%E3%82%B5%E3%82%A4%E3%83%88%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97%E3%80%81%E3%81%9D%E3%81%97%E3%81%A6%E3%80%81%E5%86%8D%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97%EF%BC%88part2%EF%BC%89/
Dockerもインストール済み。ビルド済み。
認証から行きます。
認証してpush gcloud auth configure-docker
でDocker config fileへの更新確認をされるので、Yで進めます。
次にイメージにタグをつけます。
そしてpushしようとすると、認証できていない・・・
denied: Token exchange failed for project &amp;#8216;xxx&amp;#8217;. Caller does not have permission &amp;#8216;storage.buckets.create&amp;#8217;. To configure permissions, follow instructions at: https://cloud.</description></item><item><title>Docker push AWS ECR 編</title><link>https://jqinglong.github.io/programmers-office/docker-push-aws-ecr-%E7%B7%A8/</link><pubDate>Sat, 19 Jan 2019 05:33:30 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/docker-push-aws-ecr-%E7%B7%A8/</guid><description>色々な編ができていく・・・
ずっとはまっていてもダメなので、ちょっとGitLabからのPullはどこかで質問することにします。
そして、AWS ECS で pull するのであれば、当然相性良いだろうと思われる、ECR にpushしてみます。
イメージのプッシュ
https://docs.aws.amazon.com/ja_jp/AmazonECR/latest/userguide/docker-push-ecr-image.html
もうpushするimageはできているところからスタートします。
Docker 環境をステージング環境へ（Docker push編）
https://www.programmers-office.ml/2019/01/14/docker-%E7%92%B0%E5%A2%83%E3%82%92%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E7%92%B0%E5%A2%83%E3%81%B8%EF%BC%88docker-push%E7%B7%A8%EF%BC%89/
python環境 pushするためには、まず1.の認証が必要です。
そのために、AWS CLIのインストールが必要です。
まあ、そうなんだろうけど面倒は面倒ですね。どんどん遡る・・・
結局、開発環境をDockerで作るとしても、それを扱うための環境（ここで言えばpython環境）をローカルに作らなければいけない。もう少しローカル依存を減らしたいのですが・・・
AWS CLI をインストールする方法
https://docs.aws.amazon.com/ja_jp/cli/latest/userguide/cli-chap-install.html
おもむろに
$ pip install awscli &amp;#8211;upgrade &amp;#8211;user を叩くと、「pip: command not found」のつれないメッセージ。
$ python -m pip -V
/usr/bin/python: No module named pip そこからか・・・
python3 そもそも、macの初期インストールpythonは
python &amp;#8211;version
Python 2.7.10 です。
pipはPython 3.4以降には、標準で付属しているそうです。
Python3系を入れましょう。
Code4Startupの時は、普通にインストーラーをダウンロードする形でしたが、今時だとやはり、Homebrewでしょうか。
https://brew.sh/index_ja.html
インストールのスクリプトを素直に実行。
インストール完了後、
$ brew doctor</description></item><item><title>Vimeo PRO（有料プラン）からBASIC（無料プラン）への変更</title><link>https://jqinglong.github.io/programmers-office/vimeo-pro%EF%BC%88%E6%9C%89%E6%96%99%E3%83%97%E3%83%A9%E3%83%B3%EF%BC%89%E3%81%8B%E3%82%89basic%EF%BC%88%E7%84%A1%E6%96%99%E3%83%97%E3%83%A9%E3%83%B3%EF%BC%89%E3%81%B8%E3%81%AE%E5%A4%89%E6%9B%B4/</link><pubDate>Sat, 19 Jan 2019 00:58:36 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/vimeo-pro%EF%BC%88%E6%9C%89%E6%96%99%E3%83%97%E3%83%A9%E3%83%B3%EF%BC%89%E3%81%8B%E3%82%89basic%EF%BC%88%E7%84%A1%E6%96%99%E3%83%97%E3%83%A9%E3%83%B3%EF%BC%89%E3%81%B8%E3%81%AE%E5%A4%89%E6%9B%B4/</guid><description>お試しでVimeoのPROプランに入っていた（2018年12月）のですが、いったんBASICに戻そうと思います。
PROは年間払いと月間払いのコースがあり、月間の方を契約していた（つもりでした）。
キャンセルについては、こちらの「いつキャンセルできますか？」に
https://vimeo.com/jp/upgrade
はい、すべてのプランが返金保証付きです。年間メンバーシップにご登録後30日間以内、または月間メンバーシップにご登録後5日間以内のキャンセルの場合は全額返金させていただきます。現在のメンバーシップで利用可能な追加機能が必要なくなった場合は、他のプランにグレードを落とすことができます。 とあります。
では、実際にキャンセルしようと思うと、これが難しい。
基本的には
有料メンバーシップからベーシックメンバーシップへ戻る
https://help.vimeo.com/hc/ja/articles/115006635407-Lapsing-from-paid-membership-to-Basic-membership
にあるように、更新をしない、ということが必要で、自動更新をオフにすることになります。
この手続きも分かりにくいですが、こちらが参考になります。
http://www.smile-hack.com/entry/2017/07/23/121957
でそうしたのですが、その上で現在のプランを見ると、2019年1月時点で、「あなたのVimeoPROメンバーシップの期限は2019/12/01に切れます。」となっています。
え？結局年間契約？
よくよく見ると、年間契約になっていました。ショック・・・
この場合は
Plus、PRO、Business または Vimeo Live の払い戻し
https://vimeo.zendesk.com/hc/ja/articles/224822227-Plus-PRO-Business-%E3%81%BE%E3%81%9F%E3%81%AF-Vimeo-Live-%E3%81%AE%E6%89%95%E3%81%84%E6%88%BB%E3%81%97
にしたがい、契約後30日以内であれば、お問い合わせフォームから払い戻しを依頼する、ということになるようです。
ということで、１年間使うしかない。何か考えよう・・・
とりあえず、こちらでもご覧ください。</description></item><item><title>Docker 環境をステージング環境へ（Docker pull編）part1</title><link>https://jqinglong.github.io/programmers-office/docker-%E7%92%B0%E5%A2%83%E3%82%92%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E7%92%B0%E5%A2%83%E3%81%B8%EF%BC%88docker-pull%E7%B7%A8%EF%BC%89part1/</link><pubDate>Mon, 14 Jan 2019 14:36:14 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/docker-%E7%92%B0%E5%A2%83%E3%82%92%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E7%92%B0%E5%A2%83%E3%81%B8%EF%BC%88docker-pull%E7%B7%A8%EF%BC%89part1/</guid><description>docker pushができたので、今度は、サーバ側からpullします。
サーバは、GCPのつもりでしたが、Mgentoの検証を行っていたAWSを使うか、と考え、それならば、Elastic Container Serviceを使ってみることにします。
Elastic Container Service（ECS） まず、ECSには二つの起動モデルがあります。
・Fargate 起動タイプモデル
・EC2 起動タイプモデル
Fargateはコンテナ用のリソースで、EC2とは切り離されており、それ用の料金が発生します。逆に言えば、コンテナを使うためにEC2を増強するための料金は不要ということです。これに対して、EC2起動モデルの場合は、ECSの料金は不要です。
今回は、EC2の１年間無料枠を利用して、EC2起動タイプで行ってみます。
（AWSもDockerも初心者なのに大丈夫かどうかは不明です）
ECSの手順については、こちらを参照させていただきました。
https://dev.classmethod.jp/cloud/aws/amazon-ecs-entrance-1/
最初の、タスク定義を作成するところで、FARGATEかEC2かを選択するボタンがあるので、EC2を選択します。
タスク定義名は、タスク定義で指定する内容が、使用するDockerイメージだったり、ということなので、WooCommerceとしておきます。
他は初期値のままで「コンテナの追加」をします。
今回は、woocommerce_mariadb_1、woocommerce_wordpress_1として、二つ分追加します。
ポートマッピングは悩みますが、mariadb側はなし、wordpress側は80:80と、443:443を追加しておきます。
タスク定義が正常に作成されました、とのことです。
続いて、クラスターを作成します。
クラスターテンプレートは、Fargateではないので、「EC2 Linux + ネットワーキング」を指定します。
インスタンスタイプは無料枠なので、t2.micro、キーペアは作成済みのものを選択します。
「コンテナインスタンスの IAM ロール」はさらに不明なので、「新しいロールの作成」のまま進めます。
分からないながら進めていき、起動します。
「サービスの検出の統合の有効化」はさらに不明のため、チェックを外しておきます。（上記サイトの絵にはありませんので、貼っておきます）
以上で立ち上がったはずですが、サービス画面に行ってみると、起動失敗。
理由は、
https://registry.gitlab.com/v2/aaa/bbb/woocommerce_wordpress_1/manifests/latest: denied: access forbidden
まあ、そうですよね・・・
コンテナの設定の、「プライベートレジストリの認証」「認証情報パラメータ」辺りだと思いますが、今日は時間切れです。</description></item><item><title>Docker 環境をステージング環境へ（Docker push編）</title><link>https://jqinglong.github.io/programmers-office/docker-%E7%92%B0%E5%A2%83%E3%82%92%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E7%92%B0%E5%A2%83%E3%81%B8%EF%BC%88docker-push%E7%B7%A8%EF%BC%89/</link><pubDate>Mon, 14 Jan 2019 10:25:10 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/docker-%E7%92%B0%E5%A2%83%E3%82%92%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E7%92%B0%E5%A2%83%E3%81%B8%EF%BC%88docker-push%E7%B7%A8%EF%BC%89/</guid><description>まだ、全然途中ですが、いったんベンダー機能とショップ画面が見えるようになったところで、これを別サーバ（ステージング環境のつもり）に持っていきたいと思います。
Docker力強化の目的もあります。
Docker イメージのレジストリサービス ローカル開発環境のDockerイメージを別サーバに持っていくために、まずは、Dockerイメージを共有することが必要と考えます。すると、レジストリサービスが必要ということが分かります。
そしてレジストリサービスを調べてみると、ありがたいサービスが提供されていることが分かります。
・Docker Hub
・Amazon Elastic Container Registry (ECR)
・Google Container Registry
・Azure Container Registry
・GitLab Container Registry
などなど。
構築先がGCPなのと、このサービスもAlways Free対象なので、Googleも有力な候補ではありますが、ソースをGit管理するなら、同じ管理にするのが合理的なのではということと、GitはGitLab派の私としては、GitLab Container Registryを使ってみることとします。
GitLab Container Registryへのpush 流れとしては、まずcommitして、イメージ作成。
これは、こちらを参照
https://www.memotansu.jp/docker/626/
commitなの、buildなの、というのはよく分かっていませんが、とりあえず、これで行ってみます。
docker login registry.gitlab.com
ログインはできます。
しかし、pushは、3つあるイメージのうちの2つをpushしたいわけで、その仕組みがいまいち分かりません。
gitlabのページに記載を参考に、最後に「:タグ名」を付けてみても、
「An image does not exist locally with the tag」
となります。
この辺りを参考に、タグ付けします。
http://docs.docker.jp/linux/step_six.html
https://docs.docker.com/engine/reference/commandline/tag/
そうすると、
registry.gitlab.com/aaa/bbb/woocommerce_mariadb_1 v1.1 a4e11e5e5b41 3 hours ago 262MB
registry.gitlab.com/aaa/bbb/woocommerce_wordpress_1 v1.1 eba2457b8e6a 4 hours ago 438MB というようなイメージが出来上がります。</description></item><item><title>WC Marketplace（商品機能）</title><link>https://jqinglong.github.io/programmers-office/wc-marketplace%EF%BC%88%E5%95%86%E5%93%81%E6%A9%9F%E8%83%BD%EF%BC%89/</link><pubDate>Sun, 13 Jan 2019 15:53:13 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/wc-marketplace%EF%BC%88%E5%95%86%E5%93%81%E6%A9%9F%E8%83%BD%EF%BC%89/</guid><description>商品登録方法は、素のWooCommerceとWC Marketplaceでは考え方が違う部分がありますので、その確認。
商品とベンダーの関係 Setting up – Assign Single Product to Multiple Vendors
https://wc-marketplace.com/knowledgebase/setting-assign-single-product-multiple-seller/
WC Marketplaceプラグインインストール時に、「Single Product Multiple Vendors」というチェックボックスがあります。
同一商品を複数ベンダーから販売することができ、購入時に顧客がベンダーを選択することができる、というものです。
これはしないので、スキップします。
管理者による商品の登録 Setting up – Uploading products for WCMp
https://wc-marketplace.com/knowledgebase/setting-up-uploading-products-for-wcmp/
アップロードから始まるというのが、順番としてどうなのかと思わざるを得ませんが、必須機能ではある、というかむしろ最終的にはこちらが優先なので、これで良いのか。
・・・と思って読み進めると、別にファイルアップロードの話ではなく、普通に商品登録の話でした。そういう言葉使いですか・・・
最初に、承認を経由するかしないかの設定の話。
そして、管理者が通常のWooCommerceの方法で、商品登録する場合の話。
ここで、WC Marketplaceが入っていると、ベンダーを指定するプルダウンがあります。これをクリックすると、中身が空で、「？」と悩むのですが、テキストボックスに一文字入力するとそれにマッチするベンダーが選択できるようになります。まあ、ベンダーが大量に登録されていると、ずらっと出てこられても困るかもしれませんが・・・
通常のWooCommerceの商品登録の方法については、
https://docs.artws.info/document/managing-products/
のお世話になるのが良いかと思います。
特に商品タイプ、特に「バリエーションのある商品」（Variable product）は重要です。
ベンダーによる商品登録 実際は、商品の登録は各ベンダーがやるでしょう、ということで、その機能についての説明です。
ベンダーのユーザでログインして、Vendor Dashboard画面に入ります。
こちらの画面からの登録も、細かい手順や画面構成が異なるのみで、登録内容は基本的に同じです。
ところが、Product Typeで、「Simple product」しか選択できません。
他のタイプを選択したい場合は、backendに行かなければならないということです。
すなわち、ベンダー用画面には、2種類あります。ログイン直後のVendor Dashboard画面と、wp-adminの画面であるbackendです。
こんなところから移動できます。
こちらに移動すれば、機能制限された管理画面が表示される、というわけです。
Advanced Frontend Manager https://wc-marketplace.com/knowledgebase/wcmp-frontend-manager/
で、一応、AFMというものを使ってほしそうです。
これを使えば、backendに移動せずに、「Simple product」以外の商品メンテもできるということです。
ただ、そんなに、画面からメンテするのか、と考えたら、コスパはあまり良くないかなという気もします。
https://wc-marketplace.com/product/wcmp-frontend-manager/
という感じで、だいぶ理解はできてきました。</description></item><item><title>WC Marketplace（ベンダー関連機能）</title><link>https://jqinglong.github.io/programmers-office/wc-marketplace%EF%BC%88%E3%83%99%E3%83%B3%E3%83%80%E3%83%BC%E9%96%A2%E9%80%A3%E6%A9%9F%E8%83%BD%EF%BC%89/</link><pubDate>Sun, 13 Jan 2019 09:17:32 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/wc-marketplace%EF%BC%88%E3%83%99%E3%83%B3%E3%83%80%E3%83%BC%E9%96%A2%E9%80%A3%E6%A9%9F%E8%83%BD%EF%BC%89/</guid><description>しかし、WooCommerceも日本語情報は、豊富とは言えませんね・・・
ほとんどお一人で頑張られている？？
https://docs.artws.info/about-this-site/
WC Marketplaceと言っても、そもそもWooCommerceが分からなければ始まらないので、上記を参考にさせていただきながら、進めていきます。
なお、現時点で、
WooCommerce Version 3.5.3
WC Marketplace Version 3.3.0
です。
基本ドキュメント インストールは、基本レベルだと特に悩まないとは思いますが、
https://wc-marketplace.com/knowledgebase/wcmp-setup-guide/
一応こちらを参照しておけば、安心かと思います。
その他のドキュメントも、ここから辿っていきます。
ベンダー管理システム Vendors Management System
https://wc-marketplace.com/knowledgebase/vendors-submenu/
まず、考え方として、Vendorを登録し、これは、wpサイトログインのユーザにもなります。そして一対一でShopが紐付きます。
基本的には、管理者がVendorユーザを作って、詳細情報はそのVendorユーザが自分自身の情報を登録し、管理者がその登録内容を承認する、という流れのようで、そのためのステータス管理（Pending、Rejected、Suspended、）がされているという形のようです。
これを登録すると、
http://localhost/circlant/user1/
という形で、そのベンダーのページが作成されるのですが、そこに表示される画像はどこで設定するのかが分からない。追々分かることを期待して進めます。
ベンダー登録方法 Setting up – Vendor Registration for WCMp
https://wc-marketplace.com/knowledgebase/setting-vendor-registration-wcmp/
ベンダーについては、より詳細な登録方法として、さらにドキュメントが提供されています。
管理者が登録する方法以外に、Registration Formも用意されており、それをするしない、承認を経由するしない、フォームで登録する内容、等が設定可能です。
例えば、Store DescriptionとCountry　を追加すると、このような登録フォームになります。
ベンダー用機能 Setting Up WCMp – A Vendor Guide
https://wc-marketplace.com/knowledgebase/setting-wcmp-vendor-guide/
どうもドキュメントの並びが綺麗ではないように思うのですが、ベンダー登録したところで、今度は、ベンダー用機能を見てみます。
Vendorロールのユーザでwp管理画面にログインすると、ダッシュボードの見た目はだいぶ違います。
上に書いた、店舗画面の見た目等はここから設定することになります。
その他、商品や、支払い方法等を登録し、あるいは、注文情報の確認等を行いますが、ポイントは商品登録だと思いますので、今回はここで一旦終了します。</description></item><item><title>WooCommerceを試す</title><link>https://jqinglong.github.io/programmers-office/woocommerce%E3%82%92%E8%A9%A6%E3%81%99/</link><pubDate>Sun, 13 Jan 2019 01:52:34 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/woocommerce%E3%82%92%E8%A9%A6%E3%81%99/</guid><description>MagentoのDocker環境を作った訳ですが、サンプルデータを後から投入しようとすると、やはり、「PHP Fatal error: Allowed memory size of xxx bytes exhausted」が発生したりして、Dockerの出来合いの環境ならもう少しすんなり行くかなと言う期待は、あまり応えてはもらえませんでした。
そこで、ちょっと浮気をしてみます。
Docker力強化も兼ねて、今回もDocker環境を作ります。
WooCommerce入りのDocker Hubのイメージもありますが、そこは後からプラグイン入れても良いよね、ということでwordpress環境をまず作ります。
イメージは、あえて公式ではなく、先日の構成を参考にして、bitnami版にしてみます。
今回は、最初から、ymlに永続化用の記述をしておきます。
mkdir docker/WooCommerce
mkdir docker/WooCommerce/wc-mariadb-persistence
mkdir docker/WooCommerce/wc-wordpress-persistence
cd docker/WooCommerce/
curl -LO https://raw.githubusercontent.com/bitnami/bitnami-docker-wordpress/master/docker-compose.yml
・・・yml編集・・・
docker-compose up -d やはり、wordpressセットアップ画面をすっ飛ばして、サイトが立ち上がっている状態まで来てくれます。
管理画面はwp-admin、ユーザ・パスワードは、Settings画面参照（WORDPRESS_USERNAME、WORDPRESS_PASSWORD）。
日本語化はされていません。
そして、おもむろに、Pluginsから、WooCommerceをInstall、Activate。PluginsのページにWelcome to WooCommerceのメッセージと「Run the Setup Wizard」ボタンが表示されているので、クリックします。
基本情報を入力し、Payment画面では、PayPalとstripe、さらにCash on deliveryを有効にしてみます。Shippingはとりあえず適当に、オススメのAutomated TaxesとMailChimpも有効にしておいて、Jetpackは接続できないというメッセージになりましたがそのまま行きます。
チュートリアルに従って商品登録し、「Visit Site」の下の「Visit Shop」をクリックすると、商品が表示され、カートに投入し、カートを見ると購入商品が表示されます。
ただ、この状態ではあまりに見た目が投げやりなので、AppearanceのThemesからStorefront を検索して、Install、Activateします。
「Design your store」という画面が表示されますので、流れに従って入力。多少見た目が整います。「Design your store」が公式のようなので入れてみましたが、なかなかのシンプルさではあります。
https://shimesan.com/2018/03/24/woocommerce-netshop-003/
この辺は参考になりそうです。
試しにもう一つ、THESHOPというテーマを入れてみます。
https://athemes.com/theme/theshop/#
さすがの良い感じ。
とりあえず、こうしておきます。
さらに、今回やりたいのは単一ショップではないので、複数ベンダー対応のプラグイン、「WC Marketplace」を入れます。
そして、ちょっと設定を初めてみましたが、これはなかなか骨が折れそうなので、また改めて。</description></item><item><title>DockerでMagento環境を構築する</title><link>https://jqinglong.github.io/programmers-office/docker%E3%81%A7magento%E7%92%B0%E5%A2%83%E3%82%92%E6%A7%8B%E7%AF%89%E3%81%99%E3%82%8B/</link><pubDate>Sun, 06 Jan 2019 09:52:07 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/docker%E3%81%A7magento%E7%92%B0%E5%A2%83%E3%82%92%E6%A7%8B%E7%AF%89%E3%81%99%E3%82%8B/</guid><description>Dockerで、ビジュアルに、Magento環境を構築していきたいと思います。
参考情報 https://qiita.com/kzkiq2nd/items/29f69c156f6f6e2fb215
を入り口として、
https://qiita.com/kzkiq2nd/items/b8162cfc41d13616f861
https://principle-works.jp/blog/how2runm2ondocker-apache/
https://principle-works.jp/blog/how2runm2ondocker-compose/
も参照。
しつつ、いかにビジュアルに構築するかを考えます。
イメージ検索 まずは、Kitematic内で検索してみます。
最初は、一つしかヒットしなかった気がしたのですが、気のせい？？
まあまあ、結構な数がヒットします。
Googleで「magento docker」で検索した場合は、bitnami/magentoが先頭でヒットします。
さらに、DevBoxなるものもあるといいます。
どれを使うべきか。
DevBoxが正攻法のようではあります。
https://magento.com/blog/technical/set-your-magento-2-development-environment-faster
が、最初の参考情報によると、ちょっとフルスペックすぎる感じが無きにしも非ず。
かつ、2.3には未対応っぽい。
次は、Pulls 1M+ となっていて、利用者の多そうなこちら。
https://hub.docker.com/r/alexcheng/magento2
解説も丁寧にされているのが好印象。2.3.xとも書いてあるので安心。
こちらにさらに情報あり。
https://microbadger.com/images/alexcheng/magento2
bitnami版も確認。
https://hub.docker.com/r/bitnami/magento
利点として書かれているのは、最新版追跡の速さですね。
こちらにも、いくつかのパターンが置かれています。
https://bitnami.com/stack/magento/containers
ちょと悩むところではあるのですが、ブランド名を信じて、bitnamiにしてみます。
bitnami版magento2のインストール 改めて、Kitematicで「bitnami/magento」で検索し、CREATEボタンを押します。
しばらくダウンロード画面が表示され、追加されたかと思いきや、エラーメッセージ。
Welcome to the Bitnami magento container
Subscribe to project updates by watching https://github.com/bitnami/bitnami-docker-magento
Submit issues and feature requests at https://github.com/bitnami/bitnami-docker-magento/issues
ERROR == The MAGENTO_DATABASE_PASSWORD environment variable is empty or not set. This environment variable is required for Magento to be properly installed.</description></item><item><title>MacにDocker環境をビジュアルに構築する</title><link>https://jqinglong.github.io/programmers-office/mac%E3%81%ABdocker%E7%92%B0%E5%A2%83%E3%82%92%E3%83%93%E3%82%B8%E3%83%A5%E3%82%A2%E3%83%AB%E3%81%AB%E6%A7%8B%E7%AF%89%E3%81%99%E3%82%8B/</link><pubDate>Sat, 05 Jan 2019 22:17:45 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/mac%E3%81%ABdocker%E7%92%B0%E5%A2%83%E3%82%92%E3%83%93%E3%82%B8%E3%83%A5%E3%82%A2%E3%83%AB%E3%81%AB%E6%A7%8B%E7%AF%89%E3%81%99%E3%82%8B/</guid><description>目的 2018年11月にMagentoが2.3にバージョンアップしたため、その環境を作りたい。
しかし、現在AWSに構築している環境をバージョンアップするのは、素人には難しそう。そもそも、現状が綺麗にできていない気がするので、クリーンインストールすることにする。
そして、今後も複数バージョンをどう取り扱うか問題は出てくると思うので、このWordpressサイト構築にあたって興味を持ったDockerをもう少し突き詰めてみる。
考えること Dockerもコマンド打つだけじゃないでしょ、もっとビジュアルに行こうぜ！と思ったら、思いの外深い。
参考
https://yoshinorin.net/2017/08/30/try-docker-rancher/
まず、Docker for Macにするのか、Docker Toolboxにするのかを考えなければなりません。
一般的には、VirtualBoxが不要であるDocker for Macの方が、早い、ということのようです。
そして、実際のビジュアルツールとして、やはり本命はDocker社純正のKitematicと言うことになるかと思います。
ただ、上記参考サイトにあるように、これは「Docker for WindowsとDocker for Mac」用となるので、AWS等のLinux環境では同一環境にはならないと言うことになります。
もっとも、それは「外側」が異なるという話であり、Dockerで構築される「中身」については同じでしょうから、それは別の話として良いのかなと考え、Kitematicで構築することにしてみます。
なお、第二の選択肢として、Portainer、Rancherも興味深いです。
Kitematicのインストール 手順としては、Docker for Macをインストールし、そうすると、Dockerアイコンが表示されるようになるので、そこからKitematicをインストールするということのようです。
この辺が比較的新し目の情報かと思います。
https://yatteq.com/localdev-docker
で、Docker for Macをダウンロードしに行くわけですが、そこの名前はDocker Desktop (Mac)。分かりにくくないですか？？
Dockerのアカウント登録をして、ダウンロードします。518MB、なかなかですね・・・
インストール方法は特筆すべきことはないですが、本家docsでも眺めておけば良いでしょう。
https://docs.docker.com/docker-for-mac/install/#install-and-run-docker-for-mac
丁寧な手順はこちらとか。
https://qiita.com/seijimomoto/items/357ac7aa84f98b96021f
最初、Docker アイコンからKitematicをクリックしても反応なく焦りましたが、再度アプリケーションフォルダからDockerをダブルクリックしたら反応してくれました。
ということで、インストールまでは、簡単に行きます。</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ ついに完了！</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E3%81%A4%E3%81%84%E3%81%AB%E5%AE%8C%E4%BA%86%EF%BC%81/</link><pubDate>Sat, 05 Jan 2019 02:23:12 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E3%81%A4%E3%81%84%E3%81%AB%E5%AE%8C%E4%BA%86%EF%BC%81/</guid><description>[ ][1] Code4Startup
Task26では、ドライバー側マップでドライバーの移動ロケーションを追加し、カスタマー側マップにも追加します。
そして、シミュレータを二つ立ち上げて、動きを見ることができますよと言うテクニック。
最後にTask27でdanielgindiのチャートコントロールを使ってグラフを表示します。
https://github.com/danielgindi/Charts
と言うわけで完了！長かった・・・
ただ、完成まではしないのですね・・・
例えば、ドライバーが配達完了すると、ステータスが変わる、と言うところは作りますが、その時のドライバー画面は白いままとか。
ともあれ、この画像でおめでとうと言われました！
https://www.google.com/search?q=congratulations!+gif&amp;amp;tbm=isch&amp;amp;tbs=rimg:Cf_126g8pSGmDIjj2cw58GhEDRb1Tm-QQfezqphKGfD1O0NL-e3qT_1YKO7LZvVAYaur8hA3bBucnHSIqfOWhf0o2EKyoSCfZzDnwaEQNFEaLGpRKdOq-YKhIJvVOb5BB97OoROM0rrFOchCUqEgmmEoZ8PU7Q0hGkQsPwogAEjSoSCf57epP9go7sEcYO1TRi5KJ5KhIJtm9UBhq6vyERQUG6cqDuGNMqEgkDdsG5ycdIihE6TOBfMSUADCoSCZ85aF_1SjYQrEe5Ue_1GH1SA_1&amp;amp;tbo=u&amp;amp;sa=X&amp;amp;ved=2ahUKEwiOhtjjxdXfAhXXAIgKHaCBBUsQ9C96BAgBEBs&amp;amp;biw=1765&amp;amp;bih=1034&amp;amp;dpr=2#imgrc=__bqDylIaYNUMM:</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ ドライバーサイドアプリ</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E3%83%89%E3%83%A9%E3%82%A4%E3%83%90%E3%83%BC%E3%82%B5%E3%82%A4%E3%83%89%E3%82%A2%E3%83%97%E3%83%AA/</link><pubDate>Fri, 04 Jan 2019 23:09:11 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E3%83%89%E3%83%A9%E3%82%A4%E3%83%90%E3%83%BC%E3%82%B5%E3%82%A4%E3%83%89%E3%82%A2%E3%83%97%E3%83%AA/</guid><description>[][1] Code4Startup ここまでは、カスタマーサイドのアプリ。
Task24は、ドライバーサイドのアプリ。
このスピード感で画面を追加していける、というのがSwiftの強みだと思う。
そして、この段階で初めてCusotmerとDriverでディレクトリを分けていけるのもよい。
ということで、Task24がViewControllerで画面遷移のあたり。
Task25で、API部分で、注文のピックアップのあたり。
悩みながら、進めます。</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ 地図上の経路描画</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E5%9C%B0%E5%9B%B3%E4%B8%8A%E3%81%AE%E7%B5%8C%E8%B7%AF%E6%8F%8F%E7%94%BB/</link><pubDate>Tue, 01 Jan 2019 22:14:20 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E5%9C%B0%E5%9B%B3%E4%B8%8A%E3%81%AE%E7%B5%8C%E8%B7%AF%E6%8F%8F%E7%94%BB/</guid><description>Code4Startup
Task23は、決済部分から、お店から配達先までの経路描画など、ある意味、講座のクライマックス。
経路は、import Mapkit しなければならないとすると、他の方式で開発する場合は、またちょっと苦労するということでしょうか。
画面作成の観点で、Swift最強だな、というのはひしひしと感じるわけですが、Android版も開発するとなった場合に、まるっきり別物の開発になってしまう、というのはやはり辛いなとも感じています。</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ 地図</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E5%9C%B0%E5%9B%B3/</link><pubDate>Mon, 31 Dec 2018 02:45:55 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E5%9C%B0%E5%9B%B3/</guid><description>Code4Startup
年末なので、頑張ります。Task22まで来ました。
トレイ（ショッピングカート）画面で、注文者の住所を入力するところで、地図と連携。
とりあえず、キーワドとしては、
MKMapView
CoreLocation.Framework
info.plistの
Privacy – Location When In Use
Privacy – Location Always
CLLocationManager
というあたり。
次のTask23は決済部分で、Task24がお待ちかねドライバー機能、全27タスクの終わりが近づいてきました。</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ 詳細画面からショッピングカート</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E8%A9%B3%E7%B4%B0%E7%94%BB%E9%9D%A2%E3%81%8B%E3%82%89%E3%82%B7%E3%83%A7%E3%83%83%E3%83%94%E3%83%B3%E3%82%B0%E3%82%AB/</link><pubDate>Mon, 31 Dec 2018 00:24:58 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E8%A9%B3%E7%B4%B0%E7%94%BB%E9%9D%A2%E3%81%8B%E3%82%89%E3%82%B7%E3%83%A7%E3%83%83%E3%83%94%E3%83%B3%E3%82%B0%E3%82%AB/</guid><description>Code4Startup
リスト画面から詳細画面呼び出し、そこからショッピングカート（この講座ではTrayという言葉）への追加。
途中のミニ講座は、「pyramid if」。
pyramid ifで調べても何も出てこないので、この講座独特の言葉でしょうか。しかし、「Pyramid of doom」という言葉はあるようです。
https://en.wikipedia.org/wiki/Pyramid_of_doom_(programming)
簡単に言えば、過剰な入れ子（ネスト）構造でしょうか。そこでなぜ「doom」なのかはやはり不明。
そして、ifの多重入れ子回避の対応として、Swiftでは「guard」があるよ、というお話です。
そして、この「ガード節による入れ子条件記述の置き換え」という方法は、ファウラー「リファクタリング プログラミングの体質改善テクニック」からきているのですか・・・。大昔に読んだ・・・
  リファクタリング―プログラムの体質改善テクニック (Object Technology Series)posted with カエレバ マーチン ファウラー ピアソンエデュケーション 2000-05 Amazon 楽天市場 7net</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ リストの実装</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E3%83%AA%E3%82%B9%E3%83%88%E3%81%AE%E5%AE%9F%E8%A3%85/</link><pubDate>Sun, 23 Dec 2018 00:26:31 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E3%83%AA%E3%82%B9%E3%83%88%E3%81%AE%E5%AE%9F%E8%A3%85/</guid><description>Code4Startup Task19はレストランリストの実装。
最初は、仮実装でリスト表示の枠組みを作っておいて、ここで、API連携により実際のデータを表示させます。
合わせて、サーチバーの実装でデータのフィルタリングを行い、Activity Indivatorという、Windowsで言えば砂時計を表示させます。
とりあえず、この辺は淡々と進めます。</description></item><item><title>サイト引っ越し、そして、再引っ越し（Part2）</title><link>https://jqinglong.github.io/programmers-office/%E3%82%B5%E3%82%A4%E3%83%88%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97%E3%80%81%E3%81%9D%E3%81%97%E3%81%A6%E3%80%81%E5%86%8D%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97%EF%BC%88part2%EF%BC%89/</link><pubDate>Sat, 22 Dec 2018 09:09:33 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%82%B5%E3%82%A4%E3%83%88%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97%E3%80%81%E3%81%9D%E3%81%97%E3%81%A6%E3%80%81%E5%86%8D%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97%EF%BC%88part2%EF%BC%89/</guid><description>WordPressサイトを引っ越したものの、なかなか苦労しましたという話の後編。
前編は
サイト引っ越し、そして、再引っ越し（Part1）
WordPressサイトの引っ越し方法 色々あると思いますが、毎回検討するのは、こちらのプラグイン。
All-in-One WP Migration – WordPress
そして、毎回容量オーバーに引っかかっている気が・・・
あまり、検索で引っかからないのですが、その後の作業の中で、以下のような方法もあるのではないか、と思っています。試してませんが、これをまとめておくと次回に役立ちそうな気はしますね。
Jetpack、UpdraftPlus、あと忘れた・・・
phpmyadminのイメージ追加 今回は結局、力業で、DBもダンプ取ってリストア、ファイルは丸ごとwp-content/uploadsを持ってくる。
そのために、是非新サイトのDBもphpmyadminで参照したいということで、イメージを追加します。
これ自体は比較的すんなりいきました。下記を参考にさせていただきました。
https://qiita.com/furu8ma/items/50718efebee20fd24517
/home/wordpress/mariadb/docker-compose.yml
に下記を追加します。
phpmyadmin:
image: phpmyadmin/phpmyadmin
environment:
– PMA_ARBITRARY=1
– PMA_HOST=db-data
– MYSQL_USER=●●●
– MYSQL_PASSWORD=●●●
– MYSQL_ROOT_PASSWORD=●●●
links:
– mariadb
ports:
– 8080:80
volumes:
– /sessions
networks:
– common_link
PMA_HOSTのdb-dataは、この直前で定義しているデータベースデータのコンテナ名です。
また、8080で公開されるので、ファイアウォールのルールで8080を解放する必要があります。
ファイルの移行 DB移行後、最初はそのままデータをINSERTしてしまったら、最初のページから旧サイトに飛ばされるという事態になり、文字列を変換してからINSERTするように修正。
次にファイルの移行ですが、こちらについては、まずファイル20MB制限があったので（何の話か忘れてしまいましたが）、分割してzipでアップしました。
そして、GCE初期状態ではzipが入っていなかったためインストール。
sudo apt install unzip
なぜだか、ずいぶん画像リンク切れが多発していますが、とりあえずは良しとします。
サーバ停止 とりあえず良しとして、アナリティクスの設定をしていたら、数日後、サイトの検索が利いていないことに気づきました。
おかしいと思い、Dockerのダウン・アップをすると利くようになるので、はて？と思っていたら、しばらくするとまた同じ現象。そして、だんだん間隔が短くなっていき、最後は、SSHが接続できなくなってしまいました。
Webコンソールだからかなと、ここでgloudコマンドツールをインストールすることにします。
しかし、gloudコマンドツールは使えるようになっても、そのSSHはやはり使えません。
Google公式トラブルシューティングということで、
https://cloud.google.com/compute/docs/troubleshooting/troubleshooting-ssh?hl=ja
を試していきます。
「インスタンスをシャットダウンせずに検査する」あたりは、今回の件とは関係なくためになる、GCEの色々な機能の勉強になる手順でしたが、結局デバッグインスタンスにも接続できません。</description></item><item><title>サイト引っ越し、そして、再引っ越し（Part1）</title><link>https://jqinglong.github.io/programmers-office/%E3%82%B5%E3%82%A4%E3%83%88%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97%E3%80%81%E3%81%9D%E3%81%97%E3%81%A6%E3%80%81%E5%86%8D%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97%EF%BC%88part1%EF%BC%89/</link><pubDate>Sat, 22 Dec 2018 02:30:46 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%82%B5%E3%82%A4%E3%83%88%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97%E3%80%81%E3%81%9D%E3%81%97%E3%81%A6%E3%80%81%E5%86%8D%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97%EF%BC%88part1%EF%BC%89/</guid><description>サイト引っ越しの目的 Lighthouseを知って調査してみると、そういえばこのご時世にHTTPS対応されていない。
また、体感としてページの読み込みが遅い。
サイト構成も、イマイチに感じられてきた。
ということで、引っ越しをすることにしました。
さくらのレンタルサーバは使っているので、それでも良いと思いましたが、新しいことにも挑戦しようということで、引っ越し先を検討したところ、こちらのサイトが面白かったので、これに従いました。
GCPの無料枠でdev.toなみの爆速WordPress環境を構築する 引っ越し手順でのトラブル色々 上記サイトの手順は、非常に良くできているので、基本的には、そのまま従えば大丈夫なのですが、私の環境の問題等で、若干はまったところがありました。
freenom 大した話ではないですが、最初登録した際にエラーになりました。
そういう場合は、Service &amp;gt; My Domainsから確認できる。
プロキシサーバーコンテナを起動（nginx-proxy） 今回の方法では、Docker-composeで、いくつかのDockerコンテナを起動して、それらを連携して動作させます。
大きな手順としては、Dockerインストール、Docker-composeインストール、Dockerネットワーク作成、プロキシサーバーコンテナを起動（nginx-proxy）、と進めていくのですが、最初のコンテナであるnginx-proxyの起動でエラーとなりました。
Creating nginx-proxy … error
・・・
ERROR: for nginx-proxy Cannot start service nginx-proxy: b’driver failed programming external connectivity on endp
oint nginx-proxy (・・・): Error starting userland proxy:
listen tcp 0.0.0.0:80: bind: address already in use’
という感じです。よく読めば、ポート80番がバッティングしているとわかります。
元々、勉強用に色々立ち上げていたGCE環境のため発生した問題で、綺麗な環境であればこれは発生しないと思われます。
これに対して、最初は、/home/wordpress/nginx-proxy/docker-compose.yml　を編集して、80:80　→　8088:8088　と変更しました。
これにより、起動するようにはなりました。ただ、その後結局他のエラーが発生し、そもそも新しいサイトを8088で公開するのもありえないので、
sudo service apache2 stop
sudo update-rc.d -f apache2 remove</description></item><item><title>Meet Magento 2018 – Google講演</title><link>https://jqinglong.github.io/programmers-office/meet-magento-2018-google%E8%AC%9B%E6%BC%94/</link><pubDate>Sat, 17 Nov 2018 07:39:32 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/meet-magento-2018-google%E8%AC%9B%E6%BC%94/</guid><description>先日参加した Meet Magento 2018 得られたものを書きたいと思いつつ、多すぎてどうしようという状態。 とりあえず、書きなぐっていきますが、息切れの可能性しかなし。 The path to purchase with Google 最後はGPayの宣伝！と思いつつ、色々なサービスの紹介が面白かったです。 https://httparchive.org/ 資料を作る際の統計情報的な根拠として、使い勝手がよさそうですね。 revenue impact calculator 検索すると、https://www.thinkwithgoogle.com/feature/mobile/　に行けと言われるます。で、このサイトを調べようとすると、Domain not found！弱小すぎてダメみたい。 Lighthouse https://developers.google.com/web/tools/lighthouse/?hl=ja
に情報がありますが、むしろ簡単なのは、F12デベロッパーツールのAudits。
さらに、セミナーと同日発表になっていますが、PageSpeed Insights　にLighthouseが組み込まれたとのこと。
で、このサイトを調べようとすると、Lighthouse was unable to reliably load the page you requested！
弱小すぎるにも程がある。 Lighthouseをもう少し使ってみる さて、せっかくなので、F12→Autditsをもう少し使ってみます。
まず、Performanceから試してみると、画像が大きいよ、と言われます。最近、ページ上部にスライダー画像を付けましたが、早速悪影響があるということで、画像を調整しました。最近アナウンスされた、Googleの
https://squoosh.app/
を使ってみました。既存のアップロード済み画像を一気に調整できたらうれしいです。
SEOについては、meta descriptionがないということだけだったので、さっと付けられるところだけ付けていきます。</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ API呼び出し</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-api%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%97/</link><pubDate>Sat, 17 Nov 2018 01:07:21 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-api%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%97/</guid><description>Code4Startup
先に作ったFacebook連携用APIの呼び出し。
ここでログイン・ログアウトの機構を一気に作るので、ここをやっておかないとドライバー用アプリが進められなくなる。
が、とりあえず、一旦は一通りビデオを見てみることにする。
この先は、その他API呼び出しの部分なので、ある意味飛ばしても良いはず。
一つへーと思ったのは、API呼び出しで、httpだと怒られる訳ですが、info.plistで、App Transport Security Settingsの設定を追加することで接続できるようになる。
例えば、この辺の情報ですね。
https://qiita.com/uhooi/items/68939999c2c31e5f5557
 </description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ Facebook接続</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-facebook%E6%8E%A5%E7%B6%9A/</link><pubDate>Tue, 13 Nov 2018 22:33:53 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-facebook%E6%8E%A5%E7%B6%9A/</guid><description>Code4Startup
Task17ではFacebookへの接続。
色々なものをインストールしますが、それによりこんなに簡単にできるのだ、ということが感じられます。
ただ、やればできそうなので、一旦ビデオだけ見てスルーしてます。
そして、Task18に入ると、Asynchronousの世界の講義が始まりました。そして、Closureの解説。
Appleのドキュメントも読みましょうと。
https://docs.swift.org/swift-book/LanguageGuide/Closures.html
 </description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ デザインなど</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E3%83%87%E3%82%B6%E3%82%A4%E3%83%B3%E3%81%AA%E3%81%A9/</link><pubDate>Sun, 11 Nov 2018 01:59:59 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E3%83%87%E3%82%B6%E3%82%A4%E3%83%B3%E3%81%AA%E3%81%A9/</guid><description>Code4Startup
Task 16終了。
最後は、デザインの統一等を行いますが。
UIApplication.shared.statusBarStyle = .lightContent
は、Setter for ‘statusBarStyle’ was deprecated in iOS 9.0: Use -[UIViewController preferredStatusBarStyle]
という警告が出ます。しかし、
UIApplication.shared.preferredStatusBarStyle = .lightContent
はダメです。これはこのままにしておきます。
また、
UINavigationBar.appearance().titleTextAttributes
= [NSForegroundColorAtrributeName: UIColor.white]
はエラーとなり、コメント欄では、[NSAttributedStringKey.foregroundColor: UIColor.white]
にしたら良いというコメントがあるのですが、正しくは、
[NSAttributedString.Key.foregroundColor: UIColor.white]でした。
また、色選択の支援Webサービスが紹介されています。
http://uicolor.xyz/#/hex-to-ui
Code4Startup</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ cocoapods</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-cocoapods/</link><pubDate>Sat, 10 Nov 2018 12:14:55 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-cocoapods/</guid><description>Code4Startup
さて、クレジットカード情報入力画面を作るにあたっては、cocoapodsなるものを導入するようです。
ターミナルで、sudo gem install cocoapodsを叩きます。
ビデオでは1 gem installedであっさり終わっていましたが、私の環境では結構な量のインストールログが流れて、28 gem installed。そもそも、ターミナルを立ち上げるのさえ初めてというまっさら環境ですから、そんな感じなのでしょうか。
次にpod initによって、Podfileというファイルができますが、それをVisual Studio Codeで開いて保存したらファイル名が「Pod file」になっていた。まあまあの驚き（何かの操作ミスかとは思いますが、そんなミスする？？）。
さらに、pod installすると、ビデオではすぐにStripeのインストールが始まっていますが、私の環境では、Analyzing dependenciesから始まって、結構な量の何かをインストールし始めて、ちょっと不安になりましたが、無事完了。
そして、これをインストールすることにより、Viewにクラスを指定するだけで、クレジットカード番号入力欄が勝手にでき上がるというのはセンス良い！
という訳で、この辺も飛ばさずにやっておくべきですね。
Code4Startup</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ Swift続行中</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-swift%E7%B6%9A%E8%A1%8C%E4%B8%AD/</link><pubDate>Sat, 10 Nov 2018 03:22:20 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-swift%E7%B6%9A%E8%A1%8C%E4%B8%AD/</guid><description>Code4Startup
さて、Swiftでの開発、ViewController、segue等の基本的な概念を、あまり理解せずに進めているので、これで一人で作れるのかと言ったら微妙ですが、それでも色々繰り返していくうちに何となくは解ってくるようには思われます。
で、一番興味があるのは、ドライバー用の地図と連携する部分なので、途中で一旦そちらに飛んでみたのですが、いつの間にかMVCのグループ分けがされていたり、ソースを流用したりするところがあるので、やはりそれは無理があるようです。
ですので、ちょっと書くのは飛ばしながらでも一通りは見ていかないとダメかなということで、続行していきます。
そして書きながら、Android版は全く作り直しだよな、と、やはり悩みは続きます・・・
Code4Startup</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ iMac購入して続行</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-imac%E8%B3%BC%E5%85%A5%E3%81%97%E3%81%A6%E7%B6%9A%E8%A1%8C/</link><pubDate>Sun, 28 Oct 2018 14:30:32 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-imac%E8%B3%BC%E5%85%A5%E3%81%97%E3%81%A6%E7%B6%9A%E8%A1%8C/</guid><description>Code4Startup
iMac購入 一旦Xamarinを始めたわけですが、そして第一印象はさほど悪くもなかったのですが、結局iOS版を作成するためにはXcodeの入ったMacが必要になるということで、熟慮した結果（1日ほど）iMacを購入しました。
iMac MK462J/A 一体型 PC 27型 Retina 5K Late 2015 Core i5 6500 3.2GHz 24GB HDD1TB High Sierra 10.13
中古ですが全く中古感なし。それでいてメモリが標準8GBのところ24GBに増設されており、値段は標準新品より7万円位安い。
12インチMacBookの整備品も魅力はありましたが、使用中のThinkPad T430sも全然現役で使えることと、値段も上記中古品ならあまり変わらなくなってしまうということで、ちょっとだけ贅沢品を買いました。
快適そのものです。
swift開始 ということで、すぐさまXcodeをインストールし、と思ったらOSアップデートが必要と言われたのでアップデートし、環境を整えました。
ちなみに、エディタどうしようかと思い、Macのエディタを検索したらいまだにCotEditorとか上位に出てきて、ムムとなりましたが（以前Mac使ってた時にはCotEditor派でしたけど）、素直にAtomとVSCodeで悩んでVSCodeにしました。
始めてみると、やはりこのデザインツールは素晴らしい。ここまでサポートしてくれると、やる気の出方が違います。
とりあえず4レッスンやってみてのハマりポイントは二つ。
一つは、FoodTaskerMobile-Bridging-Header.hのファイルの場所。レッスンの中ではこれをLibディレクトリに移動するのですが、参照できませんというエラーになります。
これを参照できる場所に戻しても良いのですが、やった対応は、プロジェクトのBuild SettingsのObjective-C Bridging Headerの記述を削除すること。これで、このエラーは解消しました。
（2018/11/04）
さすがにこれはダメ。後で、self.revealViewControllerというところの参照ができなくなります。
FoodTaskerMobile/Lib/FoodTaskerMobile-Bridging-Header.h
とすることで正常動作になります。
もう一つは、画面遷移しても目的のページが表示されず、白いままになってしまうこと。これは、実はView Controllerのページが表示されていたのですが、なぜそうなるか。結論は、このコントローラに対しては、クラスSWRevealViewControllerを指定しなければならないのですが、それが漏れていたため。ビデオではちゃんと設定することになっているので、その部分で居眠りしていたかもしれません。
ということで、基本的な画面の作り方と、遷移の仕方は完了。
ついでに言うと、レッスンで使用しているアイコンはどこかで手に入れられるのか？？謎。
Code4Startup</description></item><item><title>格納型XSS システムアーキテクト試験より</title><link>https://jqinglong.github.io/programmers-office/%E6%A0%BC%E7%B4%8D%E5%9E%8Bxss-%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%82%A2%E3%83%BC%E3%82%AD%E3%83%86%E3%82%AF%E3%83%88%E8%A9%A6%E9%A8%93%E3%82%88%E3%82%8A/</link><pubDate>Mon, 22 Oct 2018 21:53:16 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E6%A0%BC%E7%B4%8D%E5%9E%8Bxss-%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%82%A2%E3%83%BC%E3%82%AD%E3%83%86%E3%82%AF%E3%83%88%E8%A9%A6%E9%A8%93%E3%82%88%E3%82%8A/</guid><description>日曜日は、情報処理技術者試験。システムアーキテクト試験(SA)を受験してきました。
午前Ⅱの回答は即日公表され、80点でしたので、あとは午後次第。感触は良かったですが、さて、どうなることやら。
午前Ⅱの試験は勉強になるものが多いですが、今回受験中に知って気になったのが、「格納型XSS」という言葉。
IPAのサイトでも解説されていました。
https://www.ipa.go.jp/files/000024726.pdf
こちらのサイトだと、「反射型」は攻撃者が自分で出力結果を利用し、「格納型」は第三者に出力結果を利用させる、という違いのように思われ、それならこのように分類することも納得できますが、このページの元となっている共通脆弱性タイプ一覧CWEの説明では、格納型もあくまでも第三者攻撃の手段と捉えているようです。
https://jvndb.jvn.jp/ja/cwe/CWE-79.html
他の様々なサイトを見ても、CWEの説明を引用して説明しているようです（そりゃそうだ）。
けど、そこで例として挙げられるURLにスクリプトを埋め込む等は、スクリプトを格納しているのとあまり意味合いは変わらなくないかなと、いまいち腑に落ちません。
当初反射型しかなくて、格納型が出てきたというなら、より無意識に被害者になるパターンが増えてきたという警鐘を鳴らす意味があると思いますが、どちらかというと格納型のパターンの方が昔から言われてきている方法だと思いますし。
今回下記の本を使用しました。正直この試験は、午後は対策しにくい（どちらかというと国語の問題）ので、午前Ⅱ対策を頑張るのが良いのかなと思います。（趣味の読み物としては午後試験の内容は最高）
ALL IN ONE パーフェクトマスター システムアーキテクト 2018年度 (旧:合格テキスト・合格トレーニング) posted with カエレバ TAC情報処理講座 TAC出版 2018-03-25 Amazon 楽天市場 7net</description></item><item><title>XamarinのXAMLのデザイナー</title><link>https://jqinglong.github.io/programmers-office/xamarin%E3%81%AExaml%E3%81%AE%E3%83%87%E3%82%B6%E3%82%A4%E3%83%8A%E3%83%BC/</link><pubDate>Sat, 13 Oct 2018 14:11:23 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/xamarin%E3%81%AExaml%E3%81%AE%E3%83%87%E3%82%B6%E3%82%A4%E3%83%8A%E3%83%BC/</guid><description>Xamarinも楽ではないですなー
Xamarinのチュートリアル https://docs.microsoft.com/ja-jp/xamarin/xamarin-forms/get-started/hello-xamarin-forms/quickstart?tabs=vswin
で、最初のとっかかりは良かったのですが、構成がいまいちまとまりきっておらず、内容もビデオを見たりするのが多いのでちょっと進めにくい。
ということで、こちらをやってみようと思います。
かずきのXamarin.Forms入門 posted with カエレバ 大田　一希 2016-12-29 Amazon 楽天市場 7net （もうすこし画像何とかすればよいのにと思いますが。もったいない・・・）
16ページ
StackLayout.Children
省略可能となっているが、そもそも廃止されてないかな？？
デザイナが使えない 19ページ
グリッドの画面を作ってみるというところで、ここはデザイナを使ってみるか、と思ったわけですが。
Xamarin.formsのデザイナは提供されていない？
しかし、こんなページもあるので、ないことはないのでは？？
https://docs.microsoft.com/ja-jp/visualstudio/designers/creating-a-ui-by-using-xaml-designer-in-visual-studio?view=vs-2017
Blendならもしかしたら、と思いさらに頑張って10GB空けてインストールしたが、そもそもXamarinのテンプレートがない。
https://marketplace.visualstudio.com/items?itemName=mohamedalinouira.XamarinFormsTemplates
をインストールしてみるがダメ。
https://developercommunity.visualstudio.com/content/problem/272117/xamarin-designer-not-working.html
を見てアルファ版のフィックスも入れてみたがダメ。
よくよく見てみると、デザイナの説明は、Xamarinの説明ではない！
Windowsユニバーサルとか、デスクトップアプリケーションをxamlで作る場合はデザイナが使えるけど、xamarinのxamlではデザイナは使えないというお話でした。
プレビュー機能は提供されているので、こんな感じになります。
この画面でいうと、左側のxml記述に、一番左のツールボックスからドラッグアンドドロップはできます。
これで頑張るしかないのですね。
なお、Windowsユニバーサルの方で作成したXamlからコピペできるかなと思ったら、色々違うようでそれもできず。
厳しい！</description></item><item><title>とりあえずxamarinチュートリアル中（初心者の超入門編）</title><link>https://jqinglong.github.io/programmers-office/%E3%81%A8%E3%82%8A%E3%81%82%E3%81%88%E3%81%9Axamarin%E3%83%81%E3%83%A5%E3%83%BC%E3%83%88%E3%83%AA%E3%82%A2%E3%83%AB%E4%B8%AD%EF%BC%88%E5%88%9D%E5%BF%83%E8%80%85%E3%81%AE%E8%B6%85%E5%85%A5%E9%96%80/</link><pubDate>Sat, 13 Oct 2018 01:34:58 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%81%A8%E3%82%8A%E3%81%82%E3%81%88%E3%81%9Axamarin%E3%83%81%E3%83%A5%E3%83%BC%E3%83%88%E3%83%AA%E3%82%A2%E3%83%AB%E4%B8%AD%EF%BC%88%E5%88%9D%E5%BF%83%E8%80%85%E3%81%AE%E8%B6%85%E5%85%A5%E9%96%80/</guid><description>Code4Startup
xamarinの選択 Code4StartupはここからSwiftによるモバイルアプリ開発に入ります。
とっかかりの部分の講座を見てみましたが、やはり画面デザインから入りますよね。
さて、Windows上にswift環境は用意したつもりだったのですが、Ubuntu上でSwiftが動くというのは、言語自体が動く、コンパイルが動くというだけの話のようです。
しかし、Swiftを使う目的は基本的にはiOSアプリを作るためであり（勝手な想像）、画面を作れないのであれば10割がた意味がないのではないかと思うのです。
というわけで、改めてiOSアプリをどう作るか考えます。Monacaも経験したので当然それは考えるのですが、やはりまだ馴染めきれない。
今後メジャー化していくと思われるFlutterもまだ早いような気がする。
結局以前考えたxamarinに戻ってしまいました。
やはり、慣れ親しんだ.NET（と言っても私の主戦場はVB.NETであり、C#はほぼ素人ですが、それでも）なら、他よりも生産性も高く進められるのではないかと思うのが大きな理由です。
Visual Studio 2017 さて、そう思った段階でインストールされていたVisual Studioは2015でした。
ただ、xamarinはインストールされていなかったので、入れようとしたら20GBくらい必要と言われます。
きついぜ！と思いつつ、一生懸命不要ファイルの掃除をして、インストールしました。我が家のネットワークは不安定なのか、一晩たっても終わっておらず、その日帰って確認できたという、丸一日作業になってしまいました。
ところが、いざ始めようとしたときに目についたのが、2017ならCommunity版でiOS リモート シミュレーターが使えるようになったという情報。iOSアプリを作りたいがためにこんなに悩んでいるのに、これを使わない手はないでしょう。ということでインストールし直し。
2015を完全に削除するためには、膨大な手間がかかるということで、MS謹製の削除ツールを使用して削除しました。これも、朝起きたら1段階目が終わったような状態で、再度ツールを実行する必要があり、結局丸一日。
インストール自体は順調に終わりましたが、なかなか手ごわいです。
xamarinチュートリアル では、何はともあれチュートリアルということで、
https://docs.microsoft.com/ja-jp/xamarin/xamarin-forms/get-started/hello-xamarin-forms/quickstart?tabs=vswin
から始めてみます。
最初はエミュレータで画面表示するのが目的ということで、ソースはコピペ。
初回起動だけなのか、かなり時間がかかりましたが、Andoroid版画面はプレビューできました。
問題はiOSです。
結論としては、やはりMacOS機＝XCode機が必要ということです。
Xamarin.iOS 開発のために Mac とペアリングする
そうか、ということでちょっとがっかり。
ほぼほぼの開発はWindows機で行って、リリース時の手続き的なところだけMacがあればよいのかと勘違いしていました。
最近はMacを貸し出してくれるところもあるので、最後はそこを利用しようとしていたのですが、ちょっと方針が変わります。
けど、Mac買うならSwiftでいいじゃんとなりますしね・・・
（と言いつつMacBook欲しくなりつつある・・・
買うなら、0.92kgが魅力のこれ）
MacBook (12-inch/1.1GHz Dual Core Intel Core m3/256GB/8GB/802.11ac/USB-C/ローズゴールド) posted with カエレバ アップル 2016-04-20 Amazon 楽天市場 7net とりあえず、xamarin勉強を進めてみます。
  Essential Xamarin　ネイティブからクロスプラットフォームまで モバイル.</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ Stripeの使用</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-stripe%E3%81%AE%E4%BD%BF%E7%94%A8/</link><pubDate>Mon, 08 Oct 2018 02:45:59 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-stripe%E3%81%AE%E4%BD%BF%E7%94%A8/</guid><description>Code4Startup
自作サービスの決済手段として何を使うか、PayPalは開発者にやさしいなと思っていましたが、Stripeも十分良さそうです。
[][1]トップメニューに「開発者」があり、このサービスの向き先が伺える ちなみに、日本のサービスで、申込・審査を行わずに利用できるサービスはあるでしょうか？？
ちょっと違うんだよなーと思ってしまいます。
もちろん、そういうビジネスはそれでありなのですが、違うビジネスが展開されないのはなぜだろう、ということです。
そして、PayPal。
開発者向けサービスも充実しているし、無料でテストサイトでの決済を確認することもできるし、実際に運用する際の手数料も安いとは思いませんが（弱小サイトを前提とする場合）許容できるのではないかと思いますし、非常に使いやすいと思います。
[][2]PayPalも開発者にやさしい ただ、唯一最大の問題が、決済サービスをしようとするためにはpaypalの会員登録が必要ということ。
私のように一度登録してしまっている人としては、そういうものだと分かって使うのでよいのですが、paypalに縁のなかった人がいきなり支払いを行おうとしたらpaypal会員登録から始まってしまうというのは、ちょっとハードル高いのではないかと思われます。
それに対して、Stripe。
普通にクレジットカード情報を送信することにより（実際は端末にStripeのトークンが返されて、これをサービスに送信することで、サービスがそのトークンとサービスのAPIキーを紐づけて）決済されるので、違和感なしで決済完了できるということです。
なお、開発中のアプリでは、ユーザ認識にユーザトークンのやり取りをしているので、トークントークン言われて分からんわ、という感じになりそうですが（実際それを間違えて送信しているというコーディングミスをしたり）、冷静になれば特に問題はありません。
なお、開発者向けドキュメントの中でデモ機能が用意されていて、そこでダミーのカード情報を送信することによりStripeのトークンを取得できる（そして、それを使って開発サービスのテストができる）わけですが、講義の中で紹介されているURLは既に変わってしまっており、stripe docs→Payments→Stripe.js and Elements→Quickstart　（Card Element Quickstart）
https://stripe.com/docs/stripe-js/elements/quickstart
から利用できるようになっています。
これは、別件のWordpressからの決済でも使ってみたいと思います。</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ Chart APIなど</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-chart-api%E3%81%AA%E3%81%A9/</link><pubDate>Sun, 07 Oct 2018 08:25:00 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-chart-api%E3%81%AA%E3%81%A9/</guid><description>Code4Startup
Task14までdone。
途中結構長い時間はまったのが、
Order.objects.filter・・・
とすればよいところを
OrderSerializer(Order.objects.filter・・・
としてしまったために、発生したエラー。
他からのコピペで無意識についてしまったわけですが、これを探りながらの他のバグにも気づいたし、まあよいか。
Task14ではレポート画面と言ことで、グラフを出力するために、
Chart.js
を使います。
これはこれでよいなと思いますが、
Google Charts
もあるからね、とは思ってしまいます。
そして、いよいよTask15でPythonは終了となりますが、一つの山場と考えているStripe連携。
ここまで連休中に終わらわせておいて、Swiftに入りましょう。</description></item><item><title>AWS Loft vs YAHOO LODGE</title><link>https://jqinglong.github.io/programmers-office/aws-loft-vs-yahoo-lodge/</link><pubDate>Sat, 06 Oct 2018 03:29:59 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/aws-loft-vs-yahoo-lodge/</guid><description>AWSオープンということで、早速行ってきましたので、YAHOO LODGEとライバル比較！
AWS Loft https://aws.amazon.com/jp/start-ups/loft/tokyo/
目黒駅前（目黒セントラルスクエア）
平日のみ（平日（月〜金） 10:00 〜 18:00）
入館時に、AWSアカウント ID（12桁数字）記入が必要
 YAHOO LODGE https://lodge.yahoo.co.jp/
永田町、赤坂見附など（東京ガーデンテラス）
休日も入館可能（9:00-21:00　休館日：年末年始、毎月第一日曜日、不定休）
身分証で入館
所感 どちらも、館内のきれいさ、景色の美しさは申し分なし。
土日もやってくれてるという点で、LODGEのほうが助かりますが。
また、LODGEの下2階のファミマ!!が、素晴らしいので、ダブルで作業できるという点でも、強い。
しかも、成城石井もあるので、お弁当ラインナップは個人的には最強。
※2018/10時点の情報です。
AWS [][1]エレベーターから雰囲気を醸し出すのがさすが [][2]ガラス面積が大きく快適 [][3]カフェも格安で提供 [][4]段ボール感
LODGE [][14]これまであまり意識していませんでしたが、意識高い系書籍もいろいろ [][15]赤坂の景色も負けていません [][16]1g2円で好きに詰められる（詰め方のセンスはしかたないです） [][17]カフェというかレストラン おまけのファミマ!! [][18]ここの文具がまた侮れない（多分季節ごとに入れ替え）</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ Postmanのはまりポイント</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-postman%E3%81%AE%E3%81%AF%E3%81%BE%E3%82%8A%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88/</link><pubDate>Mon, 01 Oct 2018 13:04:47 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-postman%E3%81%AE%E3%81%AF%E3%81%BE%E3%82%8A%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88/</guid><description>Code4Startup
Task11で、27分の長丁場のレッスンがあります。
いったん全部見てから、書いてみたのですが、途中ではまりました。
「AccessToken matching query does not exist.」
これは、結構な人がはまっているようなのですが、なかなかまともな回答がついていないように思われます。
正しい回答はこちら。
https://uploads.disquscdn.com/images/bcf707b4c65186dcfcc293547fc57bbae63e2fa0fbddc89aa6b82dbdb7418f69.png
Postmanのパラメータ指定時に、Body→form-dataを指定する必要があります。
そうしないと、request.POST.get(“access_token”)がNoneになってしまうのでした。
改めて、ビデオを見返すと、ちゃんと説明してくれてますなぁ＞＜
そして、同じ質問が、teratailに上がっていたので、初めて回答してみました。
もう少し飛ばしていきたいのですが、必ずどこかではまりますね・・・</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ 久しぶり</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E4%B9%85%E3%81%97%E3%81%B6%E3%82%8A/</link><pubDate>Sat, 29 Sep 2018 13:59:15 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E4%B9%85%E3%81%97%E3%81%B6%E3%82%8A/</guid><description>Code4Startup
色々並行ででやっていると、再開方法を確立しておかないと忘れますね。
source myvirtualenv/foodtasker/bin/activate
cd foodtasker/
python manage.py runserver xxx.xxx.xxx.xxx:8000
これでhttp://xxx.xxx.xxx.xxx:8000/が動くようになる、という感じですね。
ということで、Task10まで終わらせました。
とありあえず、Task15まで一気に進めて、Tsk16からのSwiftによる顧客向けモバイルアプリ作成を早く試してみたい。
 ちなみに、Pythonやってるなら、こちらも面白そうですね。
Pythonで学ぶ『ブロックチェーンプログラミング入門』が良すぎた話
 関連記事 Code4StartUp ～ UberEatsを作ろう ～ Swift環境 Code4StartUp ～ UberEatsを作ろう ～ 淡々とページ追加 https://www.programmers-office.ml/?s=code4</description></item><item><title>Magentoのベースページの仕組み</title><link>https://jqinglong.github.io/programmers-office/magento%E3%81%AE%E3%83%99%E3%83%BC%E3%82%B9%E3%83%9A%E3%83%BC%E3%82%B8%E3%81%AE%E4%BB%95%E7%B5%84%E3%81%BF/</link><pubDate>Fri, 28 Sep 2018 06:31:15 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/magento%E3%81%AE%E3%83%99%E3%83%BC%E3%82%B9%E3%83%9A%E3%83%BC%E3%82%B8%E3%81%AE%E4%BB%95%E7%B5%84%E3%81%BF/</guid><description>自分で作成したウェブサイトにWhat’sNewを出そうと思いましたが、それを調べる過程で、ベースページの仕組みが分かってきたので先にそちらを確認。
1.自分で作成したウェブサイトのホームページをドキュメントルートにする 現在、元々のサンプルデータのウェブサイト　http://example.com/magento/　と　自分で作成したウェブサイトhttp://example.com/aaa/　がある想定で、自分で作成したウェブサイトを　http://example.com/aaa/　ではなく　http://example.com/　にしようという話です。
これは新しいウェブサイトを表示できるようにしたのとやり方は同じで、店舗＞設定＞設定　の画面で、左上の「ストアビュー」を、自分で作成したウェブサイト（ストアビューではなくウェブサイト）に変更し、その状態で、左メニュー「Web」の「ベース URLs」等をhttp://example.com/にします。さらに、サーバにて
cd /opt/bitnami/apache2/htdocs/magento
cp .htaccess ..
cp index.php ..
cd ..
ln -s /opt/bitnami/apache2/htdocs/magento/app/ app
ln -s /opt/bitnami/apache2/htdocs/magento/lib/ lib
ln -s /opt/bitnami/apache2/htdocs/magento/pub/ pub
ln -s /opt/bitnami/apache2/htdocs/magento/var/ var
mv index.html xindex.html
とやって、index.phpをを同じように修正するだけです。サンプルウェブサイトも生きています。
2.店舗ページの作り方 そして、この下に、各店舗のページを作ろうと思います。
すなわち、ドキュメントルートは自分が作成するサービスのトップページにして、その中で複数店舗の商品を使うこととし、各店舗のページも作成する、ということです。
これも、同じようにやろうとしたらうまくいきませんでした。
PARAM_RUN_TYPEの設定値は、ウェブサイトの場合は「website」でしたが、店舗の場合は「store」とのことです。
ところが、その方法で、要するに店舗用ウェブサイトを作るようなイメージですが、元々のサンプルサイトにリダイレクトされてしまいます。
そこで、またSQLを解析しようと思いますが、今回は、昨日教えてもらった技を使います。
bin/magento dev:query-log:enable
これにより、実行ログを出力してくれます。
いちいちmy.cnf編集しなくて良いし、/opt/bitnami/ctlscript.sh restart mysql しなくてよい。
ただ、そのクエリの呼び出し元情報も含めて大量のログになるので、ちょっと醜いのですが、対処としては、
（Magentoインストール先配下の）var/debug/db.log を「SQL: 」でgrepします。
で、見てみたのですが、今回は空振りで、たいしたログは出ていませんでした。
ここで、ちょっと軌道修正。
http://example.com/shop_a
を見ようとしていたのですが、普通にページを作って、それを見ることにします。
そうすると、http://example.com/shop_a/new_page　という形で表示される。</description></item><item><title>Magento ウェブサイトの切り替え</title><link>https://jqinglong.github.io/programmers-office/magento-%E3%82%A6%E3%82%A7%E3%83%96%E3%82%B5%E3%82%A4%E3%83%88%E3%81%AE%E5%88%87%E3%82%8A%E6%9B%BF%E3%81%88/</link><pubDate>Wed, 26 Sep 2018 02:27:56 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/magento-%E3%82%A6%E3%82%A7%E3%83%96%E3%82%B5%E3%82%A4%E3%83%88%E3%81%AE%E5%88%87%E3%82%8A%E6%9B%BF%E3%81%88/</guid><description>今やろうとしているのは、Magentoのサンプルのウェブサイトはアパレル業的なサンプルになっているので、これはこれで置いておいて、別の飲食業的なサイトを作ることです。
Magento ホームページカスタマイズへの道 まず、とっかかりの部分を作りました。 MagentoのSQL解析 商品の登録のされ方を分析し、商品属性、特に在庫状況が重要だと知りました。 続いて、ウェブサイトを分けてみたいと思います。
1.Magentoの商品のカテゴリ分け そもそもなぜ、このタイミングでウェブサイトを分けるかというと、商品登録の正しさが確認できないからです。
サンプルとして登録されているアパレル商品とは別に、ピザを登録し、それをピザ用のページに出したいと思います。が、これがまた難しい。
最初にやったように、ウェブサイト、店舗、ストアビューは作っておきます。
そして、店舗でルートカテゴリを選択するので、ルートカテゴリ（カタログ＞カテゴリ）を作ります。
で、例えば、この店舗用のWhat’sNewを作ります。そして、サンプルのWhat’sNewに表示される商品はどのようなものか見てみると、
SELECT `mg_url_rewrite`.* FROM `mg_url_rewrite` WHERE (`request_path` IN (‘what-is-new.html’, ‘what-is-new.html/’)) AND (`store_id` IN (‘1’))
というようなSQLが実行されていることが分かります。
そして、表示したいページをIN句を変えて見てみると表示されませんので、最後のAND条件を外してみてみると、store_idが1以外で登録されていることが分かります。
では、どのようにstore_idを変えるのだという話になります。
2.Magentoにおける複数店舗（というかウェブサイト）の登録方法 ところが、多くの情報ではウェブサイト、店舗、ストアビューを登録できる、という話で終わってしまって、なかなか複数店舗を実際にどのような設定で表示させるのか、という情報が見つかりません。
と言いつつ、割と初期の段階で、公式情報のドメインを分けるみたいな話は出てくるのですが、いや、そこまでやらなくてよいから引数透とかで分けられるんじゃないの？？みたいなところでもがきます。
例えば「___store」を使うみたいな話です。
しかし、結論でいえば、それは無理で、おそらく簡単なのは、ディレクトリ自体を分ける方法です。
例えば、サンプルのウェブサイトをhttp://example.com/magento/　で作っていたら、http://example.com/aaa/　のようにするということです。
参考はこちらとこちら。
https://docs.nexcess.net/article/how-to-configure-magento-2-storefronts.html https://magento.dekirumonn.com/forums/topic/multi-store-%E3%83%89%E3%83%A1%E3%82%A4%E3%83%B3%E8%A8%AD%E5%AE%9A%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/ apache素人なのでちょっとビビっていたのですが、これについて言えばそんなに難しくはなく、index.phpと.htaccessをコピーして、index.phpを一部書き換えましょう、ということ（書き換えサンプルは実はindex.phpの一番先頭に書いてあります）。
そして、app、lib、pub、varへのシンボリックリンクを、元インストールしたディレクトリの方に張っておきましょう、ということです。
bitnami環境だと、
ln -s /opt/bitnami/apache2/htdocs/xxx/app/ app
ln -s /opt/bitnami/apache2/htdocs/xxx/lib/ lib
ln -s /opt/bitnami/apache2/htdocs/xxx/pub/ pub
ln -s /opt/bitnami/apache2/htdocs/xxx/var/ var</description></item><item><title>MagentoのSQL解析</title><link>https://jqinglong.github.io/programmers-office/magento%E3%81%AEsql%E8%A7%A3%E6%9E%90/</link><pubDate>Sat, 22 Sep 2018 07:30:48 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/magento%E3%81%AEsql%E8%A7%A3%E6%9E%90/</guid><description>自分で作成したページ・ウィジェット・ブロックに思うように商品が表示されない。
ならば、どのようなSQLが流れていて、何が引っかかって表示されないのか調べてみよう、という活動です。
1.環境整備 (1)SSH接続用ターミナルソフト Tera TermでもPuttyでも、お好きなものをどうぞ。
ではあるのですが、AWS内bitnamiで構築した環境のMy SQLに接続する、という観点で。
Puttyでは、Host Nameにユーザ名@xxxを記載しますが、bitnamiで構築した場合は、
ubuntu@xx.us-east-2.compute.amazonaws.com
というようになります。
そして、Connection＞SSH＞Auth　でPrivate keyにppkファイルを登録します。
この接続状態をそのまま保存しておいて、次回からはSaved Sessionから呼び出すだけなので、現在は基本的にはPuttyを使用しています。
Tera Termでは、ホスト欄にxx.us-east-2.compute.amazonaws.comを入力しOK、ユーザ名にubuntu、「RSA/DSA/ECDSA/ED25519鍵を使う」で、ppkファイルではなくpemファイルを指定する、という形になり、ホスト名以外は次回に覚えてくれていないので、ちょっと面倒だなと思っています。ターミナル上での見た目はTeraの方がきれいなので好きなのですが。
(2)WinSCP ファイルのアップ・ダウンロード用にはこちら。
SFTPで、ホスト名はxx.us-east-2.compute.amazonaws.com、ユーザ名はubuntu、設定＞SSH＞認証の秘密鍵にppkファイルを指定します。
これも、保存しておけば、次回以降の接続はリストから選択するだけなので、よいです。
(3)A5 : SQL Mk-2 これが本日のポイント。
https://a5m2.mmatsubara.com/
DB接続ツールは色々ありますけど、個人的にはこれが最強だと思っています。
特に、最強なのがSQL整形機能。今回のように、ログからSQLを取り出して解析しようと思う時に、Ctrl-Q一発でSQLを見やすくしてくれるのは、非常に助かるので、普段の会社の仕事でも使っております。
これの接続は、ちょっとばかり難しいです。トンネリングでの接続になります。
A5 : SQL の接続を作成する際にはMySQL/MariaDBを選択できます。その中の設定で、SSH2トンネルの指定ができます。
「SSH2トンネル」タブのSSH2ホスト名をxx.us-east-2.compute.amazonaws.com、ユーザーIDをubuntuにして、秘密鍵ファイルにpemファイルを指定します。
その上で、「基本」タブのサーバー名にはSSH2サーバーから見たサーバー名を指定するので、初期の状態ならlocalhostを指定します。Magento用に作成したユーザーID、パスワードを指定しますが、
grant select on *.* to home;
が必要だったように思います（記録し忘れている）。
ということで、この3点セットがそろうと、割と自由にDBもいじれるかと思います。
2.MySQLのクエリトレース 普段はSQL Serverが主戦場なので、トレース取得はProfilerを便利に使用させていただいています。
ではMySQLはどうかということで、こちらを参考にさせていただきました。
http://blog.szmake.net/archives/496
my.cnfはどこにあるかというと、これはbitnami特有で、/opt/bitnami/mysql/　にあります。
また、my.confを編集した後、MySQLをリスタートするのですが、これもbitnami特有で
sudo /opt/bitnami/ctlscript.sh restart mysql
となります。
bitnamiでは、/opt/bitnami　配下に色々なものが存在する、ということを認識しておくだけでもいろいろはかどるかと思います。
3.Magentoで実行されるSQL で、トレースを取ってみた結果です。
例えば、
SELECT `mg_store_website`.* FROM `mg_store_website`
↓
website_id code name sort_order default_group_id is_default</description></item><item><title>Magento ホームページカスタマイズへの道</title><link>https://jqinglong.github.io/programmers-office/magento-%E3%83%9B%E3%83%BC%E3%83%A0%E3%83%9A%E3%83%BC%E3%82%B8%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%B8%E3%81%AE%E9%81%93/</link><pubDate>Fri, 21 Sep 2018 15:17:07 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/magento-%E3%83%9B%E3%83%BC%E3%83%A0%E3%83%9A%E3%83%BC%E3%82%B8%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%B8%E3%81%AE%E9%81%93/</guid><description>Magentoのサンプルのホームページはアパレル業的なサンプルになっていますが、これを飲食業的なサンプルにしたいと思っています。しかし、なかなか思うようにいきません・・・
1.やろうとしていること サンプルのトップページにあたる
http://example.com/magento/　（magentoはインストール時に指定）
これが、通常ベースURLになります。そして、ここに表示されているのは、アパレル業的なサンプルデータです。
今後の勉強用にこれはこれで残しておきたいのですが、できれば、アパレルサンプルはベースURLではなく別のURLにして、ベースURLで表示される内容を飲食業向けにしたいと思っています。
ただ、このベースURLで表示される内容のカスタマイズすら、どこから行うか分かりませんので、それは置いておき、まずは、とにかく飲食業向けホームページを作ることを目標とします。
2.ウェブサイト、店舗、ストアビューを作る 最初の基本は、ウェブサイト＞店舗＞ストアビュー　の構成です。
https://docs.magento.com/m2/ce/user_guide/stores/websites-stores-views.html
https://www.programmers-office.ml/magento-open-source-user-guide/getting-started/configuration_configuration-basic/stores_websites-stores-views/
今イメージしているのは、この飲食業向けに、標準のウェブサイトとは別のウェブサイトを作ります。
その下に、店舗を複数作ります。ストアビューは、通常複数言語対応用に使用されるようですので、これは各店舗1ストアビューとします。
https://docs.magento.com/m2/ce/user_guide/configuration/scope.html
https://www.programmers-office.ml/magento-open-source-user-guide/getting-started/configuration_configuration-basic/stores_websites-stores-views/configuration_scope/
3.商品を作る 次に商品を作ろうとしますが、いくつか、前提知識が必要です。
まず、最初に選択する必要がある、属性セットというものがあります。
これを選択することにより、商品として登録する属性の内容が切り替わります。
例えば、服にはサイズという属性があるが、カバンにはサイズという属性はない、というような形です。
そして、サンプルとして登録されている属性セットはアパレル用のものなので、料理用の属性セットを作成します。
例えば、ピザという属性セットを作成します。
しかし、実は、それよりも前に把握しておくべき内容があります。それは、商品には商品タイプというものがある、ということです。
https://docs.magento.com/m2/ce/user_guide/catalog/product-types.html
https://www.programmers-office.ml/magento-open-source-user-guide/catalog/catalog_product-create/catalog_product-types/
例えば、ピザの場合は、一種類のメニューに対して、サイズという考え方があると思います。
そのような複数バリエーションを持つ場合は、Configurable Productを指定して、新規商品の追加を行います。
商品タイプは見えるようになっておらず、そのまま新規商品画面に遷移できるので、最初は分かりませんでした。
4.ページを作る では、いよいよ、コンテンツ＞ページ　から、この飲食業ウェブサイト用のページを作ります。
ページのタイトル等を入力して、デザインを決めて、コンテンツを作成します。
で、ここが今日の本題なのですが、なかなか思うように表示がされないのです。
コンテンツのエディタとしては、ビジュアルに色々できます。
一番基本は、ウィジェットの追加という方式かと思います。
例えば、静的ブロックの挿入ということができ、そこで、サンプルとして用意されているブロックを挿入することは簡単です。
しかし、それではアパレルの商品が表示されてしまうので、ピザを表示させようと思います。
例えば、商品一覧というウィジェットタイプがあるので、それを選び、商品の条件として、属性セットがピザと等しいもの、という指定をします。
しかし、表示されません。
何が悪いのやら、となります。
5.SQL解析を始める ここで、ユーザガイドを丁寧に読み始めるというのが王道かと思い、だからこそユーザガイドの和訳を始めたわけですが、そう簡単に把握はできなそうです。
むしろ、実行されるSQLを解析した方が、原因にたどり着くのは早いのではないかと思い、そちらからのアプローチに切り替えました。
その話は明日に続けたいと思います。
関連記事 Magento(マジェント)始めました</description></item><item><title>グループでのタスク管理</title><link>https://jqinglong.github.io/programmers-office/%E3%82%B0%E3%83%AB%E3%83%BC%E3%83%97%E3%81%A7%E3%81%AE%E3%82%BF%E3%82%B9%E3%82%AF%E7%AE%A1%E7%90%86/</link><pubDate>Tue, 18 Sep 2018 11:47:05 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%82%B0%E3%83%AB%E3%83%BC%E3%83%97%E3%81%A7%E3%81%AE%E3%82%BF%E3%82%B9%E3%82%AF%E7%AE%A1%E7%90%86/</guid><description>さてMagentoを調査しているのは、あるプロジェクトで使おうとしているからです。これはいつもの一人プロジェクトではなくて、グループで行おうとしています。
そのプロジェクトで、タスク管理ツールを使いたいなと思い、ちょっと調べてみました。
1.有名そうなウェブ上のサービス 世界的に、となると、AsanaとWrikeが強そうに思われました。
asana
Wrike
どちらも日本語対応もされていますし、見た目もきれいです。確かに、スケジュールの概念も欲しいとは思ったので、ガントチャート機能も魅力的です。
日本だと、Backlogでしょうか。
Backlog
ヌーラボさん、あちこちのイベントに通っていたころは接点もあったので、懐かしいなという気持ちで、応援もしたい気持ちはあります。
シンガポールのNuSpaceにも期待していたのですが、私が行くタイミングには間に合いませんでした。しかし、準備は進んでいるようですので、もしもまたシンガポールに行くようなことがあれば、是非訪問してみたいと思っています。
NuSpace
そして、みんな大好きソフトウェアかんばん（って最近言わないのかな・・・）に特化した、Trelloは人気のように思われます。
Trello
2.インストールするなら 上記のウェブサービス利用型と異なり、自分でサーバ立ててインストールするなら、Redmineはかなり強いのではないかと思っています。
Redmine
この辺見ていると、ガントチャートもカレンダーもWikiも、何でもあるよね、という感じでうっとりするレベルです。
3.考察 で、どうしようか考えたのですが、やはり無償で済むなら済ませたい。ウェブサービス系は、皆さん無料トライアルはあるけど、無料プランはないのですね（Wrikeはあるように見せかけてすでに終了している模様）。
Redmineはサーバ準備して、インストールして、というハードルの高さと、インストールにはまったりしてまた時間かかるんじゃないのという恐怖感。
タスク管理ツールを紹介しているサイトはたくさんありますが、なかなかこれ以上の情報がないように思われます。
4.GitLab一択では しかし、見つけました。無料のウェブサービス。
このページの画像を見てもらえば、一目瞭然かと思います。
Issue Boards
イシュー（課題）を、とりあえず登録したものはOpen、具体的に始める段階になったらToDo、着手したらDoing、完了したらClosedという分類でタスクの状況が見えるようになりますし、イシューをドラッグアンドドロップで移動したりすることもでき、操作性も悪くないです。
大きな声では言ってはいけないのかもしれませんが、Trelloよりよいのでは？？
ということで、今はこれを使ってタスク管理しています。
まだコーディングには入っていませんが、ソースもドキュメントもまとめて管理できて、言うことないのではと思っています。
なお、余談ですが日本語化しても、この画面はBoardとなっています。中国語だと看板です。日本語でなぜ「かんばん」にしないのだろう。時代が変わったのですか？？
（私の頭はこの辺かな）
  GitLab実践ガイド (impress top gear) posted with カエレバ 北山 晋吾 インプレス 2018-02-01 Amazon 楽天市場 7net  関連記事 Agilo ソフトウェアかんばん　初日の感想 平準化</description></item><item><title>Magento(マジェント)始めました</title><link>https://jqinglong.github.io/programmers-office/magento%E3%83%9E%E3%82%B8%E3%82%A7%E3%83%B3%E3%83%88%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F/</link><pubDate>Mon, 17 Sep 2018 12:51:55 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/magento%E3%83%9E%E3%82%B8%E3%82%A7%E3%83%B3%E3%83%88%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F/</guid><description>現在作ろうとしているサービスの基盤として、Magento(マジェント)がよいのでは、と思い、Magento(マジェント)を使い始めました。
いろいろ苦労していますが、やったことを片っ端から忘れてしまうので、ちょっとずつ記録を残していきたいと思います。
1.インストール先、方法について (1)AWS Lightsail 一番小規模の構成だと1か月無料で使用できます。
簡単に起動できるのは感動です。ただ、これだとパワー不足です。サンプルデータを入れようとすると途中で失敗するので、いったんメモリを増やしたりする必要があります。
今改めて試してみたらまた感じ方も違うかもしれませんが、。
(2)AWS Bitnami こちらはEC2のインスタンス作成に、AWS Marketplaceで提供されているBitnamiのAMI（Amazon マシンイメージ）を使用するという方法です。
こちらもサンプルデータを入れようとするとエラーになるのですが、その理由はシステム構成をバージョンアップしなければならないということでしたが、どうやってもPHPを7.1に上げられず、断念しました。BitnamiがMagento2.2環境を提供してくれるようになると、これはかなり有望な選択肢になると思います。
(3)GCP Bitnami では、ということで、いったんAWSではなく、GCPの方に立てようとしてみたのですが、AWS Bitnamiとほぼ同じ結果でした。
Bitnamiのイメージではなく、通常構成でインストールしようともしてみましたが、それも失敗（理由はもう忘れてしまいました）。
(4)AWS クイックスタート もういちど、AWSに戻り、やはり手順書見ながらやらないとね、ということで、こちらを参照。
AWS クラウドでの Magento: クイックスタートリファレンスデプロイ
サンプルデータ付きでインストール完了。
しかし、翌日、請求警告メール。改めて見てみると、これはものすごいリッチな構成で環境ができています。
（転載）
慌てて環境削除しました。
(5)AWS LAMP with PHP 7.1 Certified by Bitnami 最終的に現在使用している環境はこれ。Magento入りのAMIではなく、LAMP環境まで入っているAMIにMagento2.2.5をインストールしました。
こんな素人状態で大丈夫かなと思いつつ、AWSの勉強もしながらMagentoも勉強していきます。
2.現状の問題 問題もいろいろあるのですが、ありすぎて、とりあえず役立ちそうなところから勉強していく感じです。
(1)bin/magento setup:upgrade等をすると500エラーになる この問題のために、当初はサンプルデータを入れられず悩んでいました。
ところが、サンプルデータはインストール後にsetup:upgradeしなくてもちゃんと入っていましたので、それでしばらく動かしていました。
ただ、管理画面を日本語化しようとして、
composer require mageplaza/magento-2-japanese-language-pack:dev-master
php bin/magento setup:static-content:deploy -f ja_JP
php bin/magento cache:flush
とやったら、また500エラーになってしまいました。
そうなった場合、
bin/magento deploy:mode:set developer
とすると一応は動きます。しかしなぁ・・・
(2)Cronを動かせていない もしかしたら、これが(3)の原因だと悲しいのですが、これもなかなか手順が分からず・・・
(3)ホームページのカスタマイズができない サンプルのホームページは一応残しておいて、特定のストアビューのホームページを作って、ウィジェット等を配置したいのですが、うまくいっていません。</description></item><item><title>世界のチャイナタウン</title><link>https://jqinglong.github.io/programmers-office/%E4%B8%96%E7%95%8C%E3%81%AE%E3%83%81%E3%83%A3%E3%82%A4%E3%83%8A%E3%82%BF%E3%82%A6%E3%83%B3/</link><pubDate>Mon, 17 Sep 2018 01:39:39 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E4%B8%96%E7%95%8C%E3%81%AE%E3%83%81%E3%83%A3%E3%82%A4%E3%83%8A%E3%82%BF%E3%82%A6%E3%83%B3/</guid><description>各国チャイナタウン比較をしてみたいですが、そもそも最近横浜も行ってないし、不十分ながら羅列。
シンガポール シンガポールというと洗練されたイメージがあり、チャイナタウンも横浜的な整備されたチャイナタウンかな、と何となく思っていたのですが、想像以上に良い意味でごちゃごちゃでした。これぞチャイナタウンと言ってもよいかもしれません。
駅前（北側？）に大きなショッピングビル
南側？が商店街
ちょっと離れたところにあるマックスウェルフードセンターが、一番コスパ高かったと思います。
ニューヨーク ある意味、チャイナタウンという英語はニューヨークのチャイナタウンを指すのでは、と思うくらい有名かと思われる、ニューヨークチャイナタウン。
孔子像の前にもシティバイクがずらり
こんな感じでひたすらお店が並んでいます。ただ、何となく生活感はないというか。そういう意味だと横浜に近いかもしれませんが、お土産屋さんがあるわけでもなく・・・
一軒入ってみました。麻婆豆腐はあまり辛さのない、ザーサイ味的な麻婆豆腐でした。
アメリカにあったって、中華街では麦当劳です。
ワシントンDC ワシントンDCにもチャイナタウンはあります。しかし、ここは逆に、普通の生活しかない、けど、チャイナだけでもない、という、こんな門を作らなくてもよかったんじゃない、とうい感じです。
薄っぺらい門があるだけで、チャイナ以外も入り混じっている
こんな感じで、漢字は見られますけどね。ていうか、ここのHOOTERSの店員は中国人だったのだろうか。入ってみればよかった？
 西川口 オチのような扱いですみません。普通の街がチャイナタウン化していくという現在進行中の面白さがあります。
駅ビル内の総菜屋さんから始まってます
夜は映えますね
最近多いと思ったのが、この大鍋料理。
ヨーカドーの中だってこうなっちゃいます
芝園団地 生活の場としての中華街最前線（完成形？）と言えば芝園団地。
共存のように見せているけど、多分本当は1か国語で十分。</description></item><item><title>Hooters初入店</title><link>https://jqinglong.github.io/programmers-office/hooters%E5%88%9D%E5%85%A5%E5%BA%97/</link><pubDate>Thu, 13 Sep 2018 11:46:08 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/hooters%E5%88%9D%E5%85%A5%E5%BA%97/</guid><description>いえ、そうではありません。それは誤解です。
https://prtimes.jp/main/html/rd/p/000000008.000028394.html
ワークスペースとして利用できるのです。
「フーターズでテレワーク」とか検索してみてください。皆さん、下心全開で仕事してますよ。
そんな中から一番役に立つと思われるページは、こちら。
https://de-gucci.com/blog/29475
ちゃんと入店の準備をしてから行きましょうというお話です。
で、私も準備して行ってきました。で、ちょっとマイナス気味の所感。
・顔認証は時間がかかる。ネットワークのせいか、顔のせいか・・・
帰りはあまりに時間がかかるので、QRコード認証にしたら、あっという間でした。
・そもそもネットワークはあまり早くなかったような（測定したりしないので感覚です）
・電源席は満員ということで普通の席でした。ソフトドリンクはたっぷり入って200円で安いから、その辺のカフェよりは良いかもしれませんが、電源使えないとあまり意味ないのですよね・・・</description></item><item><title>ワシントンDC見学</title><link>https://jqinglong.github.io/programmers-office/%E3%83%AF%E3%82%B7%E3%83%B3%E3%83%88%E3%83%B3dc%E8%A6%8B%E5%AD%A6/</link><pubDate>Thu, 13 Sep 2018 04:58:58 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%83%AF%E3%82%B7%E3%83%B3%E3%83%88%E3%83%B3dc%E8%A6%8B%E5%AD%A6/</guid><description>旅程は、8/11（土）8:30羽田出発エアチャイナ北京経由便、同日14:35ワシントンダレス空港到着。途中、8/14（火）6:00発の国内便でニューヨークへ行き、8/15（水）10:35ニューヨーク発のAmtrak（列車）でDCに帰還。8/17（金）16:35発便で北京に8/18（土）18:25到着。北京に一泊して、8/19（日）17:10発、羽田21:30着。月曜日から仕事しましたよ。いや、出勤はしましたよ（つらかった）。
1.そもそもワシントンDCって言っても 「ワシントンDC　地図」でGoogle検索すると、この画像が表示されます。
よく、ワシントンDCには空港が3つあると言われ、今回利用した国際便で利用したのはダレス空港、国内便で利用したのはロナルドレーガン空港ですが、ダレス空港は、この画像の左端、切れかかっているところにありますし、ロナルドレーガンもDCとして囲まれている枠線よりは外にあります。有名なアーリントン墓地も外です。ですから、東京と言っても、成田も東京国際空港だし、ディズニーランドも東京ディズニーランドだし、みたいな捉え方が良いのかなと思います。
ちなみに、川を渡って西側がバージニア州で、実は今回ほとんどバージニア州で過ごしました。
2.政治の中心と言うよりは観光地では ワシントンDCというと、ニューヨークが経済の中心であるのに対して、政治の中心というイメージでしたが、霞が関、永田町のような雰囲気ではなく、やはり観光地なのでは、と思いました。
ベストスポットの一つと思われる連邦議事堂、入るときにガイドさんがちょっと警察官と交渉的なことをしていましたが、とは言え、このノリで入って行けてしまうのは、日本ではちょっと考えられないのではないでしょうか。
その他の建造物も美しさというか荘厳さが感じられ、見てて惚れ惚れしました。
DCの鉄道駅、ユニオン駅
ジョージワシントン大学
議事堂の美しさは格別だと思いました。
3.セグウェイ そして、その街を移動する手段として、セグウェイはベストではないかと思いました。
今回の初体験の中でもかなり興奮度の高い体験でした。
ワシントンDCで面白いのは、道路の真ん中が自転車等のレーンになっているということ。セグウェイもそこを堂々と走る形になります。
乗りこなしもすぐになれますし、何も疲れることなくそれなりのスピードも出ますし、今更ながらこれは面白い乗り物を発明したものだと感動してしまいました。
4.今後のIT集積地としての役割 AWSでもGCPでも、サービスを使用しようと思いリージョンを選択しようとすると、バージニア北部というリージョンがあることに気づきます。
それはどこかというと、まさに今回訪問した場所になります。
ダレス空港にほど近い、レストンという場所に、IT企業が集まってきています。
街はまだそんなに大きいとは言えませんが、きれいに整備されてきています。
恐らく高給取りの皆さんがこの中心部に住んで、車で10分ほど行ったところにあるデータセンターで働く、みたいな図式が想像されます。
5.ペンタゴン このエリアに行くのであれば見たいと思っていたものの一つがペンタゴンでした。
しかし、付近では写真撮影禁止、車で移動するとちょっと離れたところからは写真取れますが、五角形を感じられるわけではなく、建物もくすんだ色で、こんなにインスタ映えしないものか、と愕然としました。繰り返します。ペンタゴンはインスタ映えしない。
ところで、地下鉄駅としては、ペンタゴン駅とペンタゴンシティ駅があります。
ペンタゴン駅は駅のホーム内から撮影禁止。外に出ても、インスタ映えしないペンタゴンとバス停があるのみです。
それに対して、ペンタゴンシティ駅は、駅前に大きなショッピングモールがあり、その他、このエリアの商業の中心と思われる風情です。
この駅前のショッピングモール、入り口に中国語の看板があって驚きました。
実は中国資本なのかと思いきや、そういうわけでもなさそうです。しかし、このSimon Property Group（西盟地产集团）のやっているアウトレットモールでも、中国語が目立っていましたので、何かはあると思うのですが・・・
6.買い物、食事 ワシントンDCだけというわけではなく、事情はニューヨークもそんなに変わりませんが、とにかくいわゆるお土産がない！
今回なんとか勝ったのは、スミソニアン航空宇宙博物館で、宇宙食。
また、ホワイトハウス近くにはお土産屋さんがありましたが、日本人が好みそうな、特に会社バラマキに適したようなものはなく、買ったのは屈辱のワシントンDCチョコレート（単にそう書いてあるだけの普通のチョコレート）。
どうせなら、トランプ大統領チョコレートとかにしてくれれば、多少はウケも取れると思うのですが・・・
食事で気になったのは、地球の歩き方に書いてあったクラブケーキ。
ちょっと高級店に入って、アメリカ式接客の圧をたっぷり浴びてしまいましたが、それも含めて楽しくおいしい店でした。
6.まとめ DCだけで1週間も観光する所ではないように思いますが（今回ほとんど行けなかった博物館系が好きな方は良いかもしれませんが）、セグウェイで半日で一回りして、翌日から気になったところを回っていく、なんていうのは良い観光の仕方かもしれません。</description></item><item><title>シェアサイクル、シェアXXX</title><link>https://jqinglong.github.io/programmers-office/%E3%82%B7%E3%82%A7%E3%82%A2%E3%82%B5%E3%82%A4%E3%82%AF%E3%83%AB%E3%80%81%E3%82%B7%E3%82%A7%E3%82%A2xxx/</link><pubDate>Tue, 11 Sep 2018 11:45:31 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%82%B7%E3%82%A7%E3%82%A2%E3%82%B5%E3%82%A4%E3%82%AF%E3%83%AB%E3%80%81%E3%82%B7%E3%82%A7%E3%82%A2xxx/</guid><description>自転車についてはやはり書いておかざるを得ない。
1.日本 最近の日本の状況はどうなんでしょうか。
東京では一応順調に増えているように感じます。
個人的には渋谷区が入ったのが嬉しい。
あとは、中野区、豊島区も頑張れ！
ドコモ・バイクシェア
https://www.d-bikeshare.com/
ソフトバンクとセブンイレブンが組んだHELLO CYCLINGは、アナウンスされてから大分時間がたっているように思いつつ、あまり見かけないような気がしますが、マップを見るとまあまあ展開されているのですね。今度乗ってみます。
https://www.hellocycling.jp/
メルカリのメルチャリも話題になったと思ったらその後音沙汰なく、部分的に始まりつつある、という感じでしょうか。
https://merchari.bike/
個人的には、シェアサイクルに興味を持つきっかけとなり、わざわざ乗りに行った金沢のまちのりにも引き続き頑張ってほしいと思っています。
2.ニューヨーク 今回、ニューヨークでcitybykeに乗ってきました。
一つの特徴として、手続き的に借りやすいです。クレジットカードのみで手続きが完了します。
かなり広まっていると言ってよく、マップを見ても万遍なさが分かると思います。
日本も増えてきていますが、自転車用レーンが整備されているのも強いです。
最初に乗った自転車は無段変速というのでしょうか、よくあるタイプと同じで右手側のグリップを回すのですが、3段階とかではなく、回した分だけギアが変わるような動きが面白かったです。
（この写真では分からない・・・）
ところが2台目以降は普通の3段変速で、自転車もバラバラなんだというのも新鮮でした。
ちなみに、私は身長181cmですが、1台たりともサドルを下げずに乗れた自転車はなかったというのはちょっと悔しかったです・・・
（栄光のプラザホテルの前にも山ほど・・・）
また、他のレンタル業者もいっぱいいました。
3.ワシントンDC ワシントンDCでは乗りませんでしたが、一応ありました。感覚的には東京と同程度という感じでしょうか。
4. 北京 中国式は何と言っても乗り捨て式。現在は三国時代のようで、オレンジ、黄色、青の自転車が街中にあふれています。
自転車用レーンもかなり整備されています。
今回オレンジのモバイクは北京在住の友人に支払ってもらって乗り、黄色のofoには自分のお金で乗りました。ただ、これは準備不測のためにちょっと苦労しました。
ofoはクレジットカード決済ができるのですが、手続き完了のためにはSMS認証が必要です。しかし、今回通信専用SIMしか持っていかなかったので、SMSが受けられませんでした。事前に国内で認証通しておけばよかっただけなのですが、やっちまったなと諦めかけましたが、先ほどの友人が裏技的なサービスを押してくれました。WeChat上で色々なサービスが展開されているのですが、その中にSMSを代行で受けてくれるサービスがあるのです。おかげで手続き完了して、自転車を満喫できました。
5.自転車以外のシェア もう一つ書いておきたいのは、このような形でシェアされているのは自転車だけではないということです。
6月に行ったシンガポールでもありましたが、ワシントンDCでは、LimeBikeとBIRDの電動キックボードが目立ってました。
https://www.li.me/
https://www.bird.co/
この辺も知っていればアプリダウンロードしておく等準備ができたのですが、とっさに手続きができずに残念ながら乗ることはできませんでした。
しかし、6月に行ったシンガポールでもこれはありましたし、より手軽ということで広がる可能性はあるのではないかという気がします。
さらに、中国ではオートバイ的なものもシェアされていました。
mebikeなんていう、冗談で所みたいな名前ですが、意外と置いてありましたし、乗っている人もいました。これはコストに見合わないのでは、という気がしますが、そう考えると日本の自転車が電動自転車なのは、なかなかすごいですね。高くても仕方ないか。ただ、東京では、あまりに坂だらけなので、電動は必須だなと思います。
7.まとめ 中国ではこの業界は経営危機だという話も出ているようですが、ここまでのインフラを作り上げた経験は強いなと思います。少なくとも道路を変えてしまいましたから、もう少し収益の良いモデルもどんどん出てくるのではないかと思いますし、キックボードの次の乗り物も見てみたいです。
関連記事 シンガポール ダイジェスト3 2018年6月 スタートアップハブ 日経プラス10のシンガポール特集</description></item><item><title>Viber初体験</title><link>https://jqinglong.github.io/programmers-office/viber%E5%88%9D%E4%BD%93%E9%A8%93/</link><pubDate>Mon, 10 Sep 2018 12:08:30 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/viber%E5%88%9D%E4%BD%93%E9%A8%93/</guid><description>書きたいことは山ほどたまっているのですが、次に進みたい気持ちも抑えられず・・・
前回まで書いていたMonacaアプリwithWPは、形にすることができました。
諸事情により非公開アプリですが、一つ形をつかむと、それを基礎として発展させるアイデアが出てきますね。
それがきっかけでありがたいお話をいただいたりして、そういう意味でも作ってよかったなと思っています。
その後、アメリカ・中国に行ってきたので、その話もまとめておきたいのですが、全体をまとめようとすると膨大なボリュームになってしまうので、その話も挟みつつ、今やっていることも挟みつつ、小さくテーマ分けしていこうと思います。
今回は小さいネタで、Viber。
今どきは、国内だろうが海外だろうが、知人との通話なんていくらでも手段はあると思います。
一番多用しているのはFBのMessenger。LINEもたまに。
今回、アメリカに行くにあたり、FB以外の経路も用意しておこうということで、WhatsAppとViberをインストールすることにしました。
WhatsAppは知っていました。WhatsAppが世界一のユーザ数という話も聞いたことがありますが、現在もそうでしょうか？
それに対して、Viber、まったく知りませんでした。
楽天が買収してたのですね。最近は割とヘビー楽天ユーザですが、それでも気付いていませんでした。
今回、一度、Viberに助けられました（と言いつつ助けられ未遂ですが）。
ニューヨークで、現地夜景ツアーを頼んでいたのですが、時間になってもお迎えが現れません。
今回は通信専用SIMで行っていたので、電話もできません。
しかし、Viberは電話回線への電話もできるのですね。それは有償なのですが、GooglePayと連携してくれて、難しい手続きを経ずに利用することができました。
（ただ、未遂に終わったのは、連絡先の事務所が電話に出てくれなかったということで・・・けど、その後あれこれあって素晴らしい夜景を楽しめたというのはまた別の話）
さらにそれよりも衝撃を受けたのが、電子マネー機能を持っているということです。
ちょっと、ここからは現在確認できる情報とは齟齬があるので、勘違いか、別の話と混じっていますが、大筋は下記のとおりです。
今回、中国でWeChatPayを使いたかったので、羽田空港でポケットチェンジで入金をしました。
これは、お金を別の通貨の電子マネーとして入金することができるというものです。
すなわち、日本円を投入して、変換したい通貨を指定して、どの電子マネーに入金するかを指定できるのです。
そこで、中国元を指定して、WeChatPayをしていしたのですが、WeChatPay以外にViberも指定できたのです。
（現在下記情報を見ると、ViberはUSDとEURとなっていますが・・・
https://www.pocket-change.jp/ja/voucher-list/
）
で、要はViberは中国でも広く使われているのか、と思ったのです。
その後中国でViberが使われているような気配はなかったので、本当のところはどうか分かりません。
しかし、少なくともWhatsAppにはそんな機能はないと思いますので、実はMessengerアプリの今後の覇権争いは、まだまだこれからなのでは、と感じました。
（しかし、ネタを寝かしても忘れるばかりでよいことありませんね）
関連記事 MonacaアプリwithWP</description></item><item><title>CORSを乗り越えて</title><link>https://jqinglong.github.io/programmers-office/cors%E3%82%92%E4%B9%97%E3%82%8A%E8%B6%8A%E3%81%88%E3%81%A6/</link><pubDate>Sat, 21 Jul 2018 12:31:40 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/cors%E3%82%92%E4%B9%97%E3%82%8A%E8%B6%8A%E3%81%88%E3%81%A6/</guid><description>さくらレンタルサーバの共有SSL（続き） さくらにテストサイトを立てて、データもコピーします。
あまり作りこんでいない段階でしたら、普通に、DB新規作成→WordPressをインストール→データエクスポート・インポートでやっても大した手間ではありません。
そして、共有SSLの設定は簡単です。
https://help.sakura.ad.jp/hc/ja/articles/206054862&amp;amp;#8211;%E5%85%B1%E6%9C%89SSL-%E8%A8%AD%E5%AE%9A%E6%96%B9%E6%B3%95
これにより、「the content must be served over HTTPS.」のエラーは解消します。
MonacaアプリがさくらサーバからJSON取得する場合のCORS対応 次は、予想通りではありますが、「No ‘Access-Control-Allow-Origin’ header is present on the requested resource.」エラーになります。
※ちなみに、この辺のエラーは、Chromeデベロッパーツール（F12キー）で確認します。
個人的には、これの対応についての情報も分かりにくかったです。
これは、ブラウザ側の制約だ、ということで、それを回避するのは、クライアント側アプリだと考えました。
しかし、config.xmlには既にの記述があるので、これで回避できていないとおかしいのでは、とかなり悩みました。
結論としては、データを提供する側で回避用のヘッダを付けます。自分が提供するデータを勝手に取られるのはまずいが、データ提供側で許可しているならブラウザも安心して取得する、という感じでしょうか。
ですので、サーバアプリ側でヘッダを追加します。
PHP・WordPress記述なので、こんな感じです。（$wpdb-&amp;gt;get_results　が好き）
$rows = $wpdb-&amp;gt;get_results($sql);
if ($rows) {
$json_data = json_encode($rows);
}
header(‘Access-Control-Allow-Origin: *’);
header( ‘Content-Type: application/json; charset=utf-8’ );
echo $json_data;
これにより、CORS制約も回避されました。
Monaca（Vue）でのJSON取得処理 これで、データが取得されましたので、あとは画面で使うように加工します。
ここも、まあまあ苦労しましたが、
var data = [];
・・・
axios.get(‘[https://xxx’)][1]
.then(function (response) {
for(var i = 0; i &amp;lt; response.</description></item><item><title>GCEの開発環境にSSL証明書を入れようと思ったが</title><link>https://jqinglong.github.io/programmers-office/gce%E3%81%AE%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83%E3%81%ABssl%E8%A8%BC%E6%98%8E%E6%9B%B8%E3%82%92%E5%85%A5%E3%82%8C%E3%82%88%E3%81%86%E3%81%A8%E6%80%9D%E3%81%A3%E3%81%9F%E3%81%8C/</link><pubDate>Fri, 13 Jul 2018 23:27:14 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/gce%E3%81%AE%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83%E3%81%ABssl%E8%A8%BC%E6%98%8E%E6%9B%B8%E3%82%92%E5%85%A5%E3%82%8C%E3%82%88%E3%81%86%E3%81%A8%E6%80%9D%E3%81%A3%E3%81%9F%E3%81%8C/</guid><description>＜環境の復習＞
サーバサイドの開発をAWS Cloud9で行います。
なるべく無料範囲で、ということで、EC2を使用せず、GCP上のGCEに接続します。
ですので、サーバ側開発環境はGCEに立っています。
クライアント側開発は、クロスプラットフォーム開発を行うためにMonacaを使用しています。
ですので、開発中は、MonacaからGCEに接続して、JSONを取得しよう、と考えています。
本番環境は、さくらレンタルサーバにサーバアプリを構築し、Monacaでビルドしたモバイルアプリから接続します。
ここまで、GCE上でWordPressを動作させており、Monacaでデザインの概要を作成しました。
次は、MonacaからJSON取得をしようとしています。
Let’s Encrypt さて、MonacaからGCEに接続してJSONを取得しようとしたところ、
The page at ‘https://ide.monaca.mobi/’ was loaded over HTTPS, but requested an insecure XMLHttpRequest endpoint ‘http://xxx/’. This request has been blocked; the content must be served over HTTPS.
というエラーになりました。
これは、ここまでの調査の中で予期されたエラーなので、では、SSL証明書を導入しましょう、ということになります。
こちら
https://nozomi-hiragi.com/gcd_wp_ssl_support/
を参考に、Let’s Encryptを入れようと思いました。
SSL証明書も無料の時代、すごいなと思います。
ところが。やはり、ところが。
ConfigurationError: Requested name xxx.xxx.xxx.xxx is an IP address. The Let’s Encrypt certificate authority will not issue certificates for a bare IP address.</description></item><item><title>Monaca Onsen UI V2 Vueで外部JSON取得</title><link>https://jqinglong.github.io/programmers-office/monaca-onsen-ui-v2-vue%E3%81%A7%E5%A4%96%E9%83%A8json%E5%8F%96%E5%BE%97/</link><pubDate>Thu, 12 Jul 2018 09:11:26 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/monaca-onsen-ui-v2-vue%E3%81%A7%E5%A4%96%E9%83%A8json%E5%8F%96%E5%BE%97/</guid><description>フロント側画面デザイン作成
↓
サーバ側WordPress構築
↓
ということで、再度フロント側に戻り、WordPressのデータを参照します。
いやー、あきらめそうになりましたが、かろうじて持ちこたえました。
$http.getの使用 サンプルを探し始めてすぐに見つかったのが、こちら。
Monaca Onsen UI V2 Vue Navigation 上でサーバサイドから取得したjsonが画面に反映されない
この中で使用されているthis.$http.getを使用したいのですが、そのままこの記述を使わせていただくと、
Cannot read property ‘get’ of undefined
となります。このエラーメッセージも分かりにくいですが、ただ、比較的すぐに、this.$httpが参照できていないということが分かります。
では$httpは何なのかというと、これもvue-resoureぽいな、ということが分かり、Axiosにとって代わられそうだということも分かります。
が、これらをどう参照したらよいのかが分からず、苦労しました。
先に結論を書くと、monacaのターミナルで、npm install axiosを叩きます。
Vue.js 単一ファイルコンポーネント 結論にたどり着くまでに時間がかかった一つの理由が、多くのサンプルが、単一ファイルコンポーネントの構成を前提にしていないことです。
未だに理解しきっていませんが、単一ファイルコンポーネントの場合は、srcの中で.vueファイルに記述をしていき、Monacaの場合は、保存すると、Webpackが動いてwwwにファイルが作成される、ということのようです。
ですから、src側に外部ライブラリをセットしなければいけないのでは、と考え、しかし、Monacaで用意されている「JS/CSS コンポーネントの追加と削除」では反映されているように見えないし、と悩みました。
CDNで参照したらどうだろう、なども試しましたがダメでした。
（逆に、CDNで参照する方法は取れないの？という疑問は残ります・・・）
また、Monacaのターミナル機能は最近の追加機能だと思いますが、それまではどうしていたの？？という疑問も・・・
とりあえずは先に進めるようにはなりましたが、axoss.getでの参照はSSLでの接続が要求されているので、それをどうするか（接続先のWordPressはGCE上に構築しており、無償範囲での利用にトライしているため）、またアプリがMonacaでJSON取得先がGCEの場合に、クロスドメイン制約に引っかかるだろう、など乗り越えるべき壁はまだまだありそうです・・・
浮気 もうダメだと思って、ちょっと浮気も考えました。クロスプラットフォーム開発の基盤として、まずUnity。
ゲーム以外にでも使えるだろうとは思うのですが、はてさて。。。
次に考えたのはXamarin。iOS用のビルドにMac端末が必要とのことで、もうしばらく様子見。
浮気せずにすんだのは、良かったのかな・・・
  速習webpack 速習シリーズ posted with カエレバ 山田祥寛 WINGSプロジェクト 2018-04-27 関連記事 VSUG DAY 2013 Summer とりあえずxamarinチュートリアル中（初心者の超入門編）</description></item><item><title>GCE（Google Compute Engine）上のMariaDBに外部から接続</title><link>https://jqinglong.github.io/programmers-office/gce%EF%BC%88google-compute-engine%EF%BC%89%E4%B8%8A%E3%81%AEmariadb%E3%81%AB%E5%A4%96%E9%83%A8%E3%81%8B%E3%82%89%E6%8E%A5%E7%B6%9A/</link><pubDate>Fri, 06 Jul 2018 09:16:43 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/gce%EF%BC%88google-compute-engine%EF%BC%89%E4%B8%8A%E3%81%AEmariadb%E3%81%AB%E5%A4%96%E9%83%A8%E3%81%8B%E3%82%89%E6%8E%A5%E7%B6%9A/</guid><description>GCPのファイアウォール GCEにインストールしたMariaDBに、その中のWordPressから接続できていますが、ここにプラグイン用のテーブルを追加したり、データをいじったりしたい。
その際に、全てコマンドベースでやるのもつらいし、さらにphpMyAdminをインストールするのもはまりそうな匂いがプンプン。
ということで、ローカルのツールから接続することにします。
まずは、GCPのファイアウォールルール追加です。
場所は、VPCネットワークの中にあります。
設定するのは、上りで、tcp:3306を許可します。
しかし、これだけではつながりません。
リスナー追加 netstat -tlpn
を叩くと、
Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name
tcp 0 0 127.0.0.1:3306 0.0.0.0:* LISTEN –
と表示されます。
これだと、ローカルからしか接続できないわけです。
これを変更するためには、bind-addressの記述をコメントアウトする、という情報が見つかります。
問題は、この記述がどこにあるかです。
結論としては、
/etc/mysql/mariadb.conf.d/50-server.cnf
にありました。
これを修正して、sudo /etc/init.d/mysql restart　すると、
tcp6 0 0 :::3306 :::* LISTEN –
となってくれました。
しかし、実はこれでもつながりませんでした。
select user, host from mysql.user;すると
+—————+———–+
| user | host |
+—————+———–+
| hoge | localhost |
| xxxxxxxxxxxxx | localhost |</description></item><item><title>GCE（Google Compute Engine）へのWordPressインストール（2）</title><link>https://jqinglong.github.io/programmers-office/gce%EF%BC%88google-compute-engine%EF%BC%89%E3%81%B8%E3%81%AEwordpress%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%EF%BC%882%EF%BC%89/</link><pubDate>Tue, 03 Jul 2018 20:50:34 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/gce%EF%BC%88google-compute-engine%EF%BC%89%E3%81%B8%E3%81%AEwordpress%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%EF%BC%882%EF%BC%89/</guid><description>今回でWordPressインストールまでたどり着こう。
参考は、こちら。
https://qiita.com/yuichiyuichi447/items/4bb3b9dbb69ee5a693cf
GCEへのApacheインストール これは
sudo apt install apache2
だけ。
ただ、この時点でちゃんと動作を確認すべき・・・
GCEへのPHP7インストール sudo apt install -y php php-mysql libapache2-mod-php
ここでも、動作確認すべき。
GCEへのWordpressインストール さらに、こちらを参考。
https://qiita.com/seijikohara/items/f34753b2a783e03d7db4
/etc/apache2/apache2.conf
へのWPインストール先追記は、あえて自分のHOME配下に変更。
そして、そのディレクトリを作成しておく。
curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
こちらでは、curlを使用。wgetとはあまり差はないのですかね。趣味の範囲？
wp core download –locale=ja –path=/var/www/html/wordpress –allow-root
を叩くときに、apache2.confで指定したパスに変更。
また、wp-config.phpの修正で、AUTH_KEY等はコピペが必要です。
この際、AWS Cloud9でviに張り付ける場合は、右クリックコピーではダメで、必ずCtrl-C Ctrl-Vです。
また、いつも忘れますが、viで複数行削除は、
削除範囲の開始行で「ms」 削除範囲の終了行で「me」 「:’s,’ed」と入力し、Enter です。
さて、これで動くと思いきや、そうは問屋が卸さないのがいつものこと。
まず、手順を二つ参照したために、そもそもWP用のDBを作る作業が抜けていました。
これは
CREATE DATABASE xxx DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci;
GRANT ALL ON xxx.* TO ‘xxx’@’localhost’;
だけしておけばOK。
しかし、wp option get homeを叩くと</description></item><item><title>GCE（Google Compute Engine）へのWordPressインストール（1）</title><link>https://jqinglong.github.io/programmers-office/gce%EF%BC%88google-compute-engine%EF%BC%89%E3%81%B8%E3%81%AEwordpress%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</link><pubDate>Fri, 29 Jun 2018 09:15:47 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/gce%EF%BC%88google-compute-engine%EF%BC%89%E3%81%B8%E3%81%AEwordpress%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</guid><description>さて、環境を定めたら、WordPressをインストールします。
Cloud Launcherではない GCP・WordPressで検索すると、コンソールのCloud Launcherからインストールする方法が多数ヒットすると思います。
確かに、メニューから選択して簡単にインストールできそうです。
この流れは魅力的。
しかし、これは、WordPress用にインスタンスを立ち上げるサービスになります。
そうすると、結局二つ目のインスタンスになってしまい、Always Freeから外れてしまいます。
今回やりたいのは、既存のGCEインスタンスにWPをインストールするということです。
（完全に言葉が間違っていたので追記）
GCP（Google Cloud Platform）はGoogleのクラウドの状のサービス諸々ですね。
ですから、GCP・WordPressで検索すれば当然GCP上にWordPressのサービスを立ち上げる方法がヒットするでしょう。
GCE（Google Compute Engine）は、GCPのサービスの中の一つで、IaaS環境を提供してくれているというものです。今やろうとしているのは、そのGCE環境の中にWordPressをインストールする、ということなので、GCE・WordPressで検索すべきです。そうすると、もう少し違う情報も出てきます。
GCEへのMySQLインストール さて、WordPressをインストールするとなると、必要なのがMySQLです。
方法としては、外部に接続する方法も「あり」かとは思います。
元々さくらレンタルサーバに環境作ろうとしたくらいですので、さくらのDBに繋ぎに行ってもよいわけです。
しかし、ここは、怖いもの見たさで、GCE内にMySQLもインストールします。
そして、ここでも、GCPコンソールから「SQL」という魅力的なアイコンが見えます。
これをクリックすると、簡単にMySQLがインストールできそうです。
しかし、これも、データベース用のインスタンス立ち上げサービスです。
あくまでも、既存のインスタンス内にインストールしたいので、これは使用しません。
MariaDB そこで、一番参考になりそうなのがこちら。
https://qiita.com/mekabuko/items/d0ef4492f60e40f84f84
そして、MariaDBという名前が気になりつつ、MySQL入っていないかなと思って、mysqlを叩いてみました。
$ mysql
The program ‘mysql’ can be found in the following packages:
mysql-client-core-5.7 mariadb-client-core-10.0
Ask your administrator to install one of them 出た、mariadb。MariaDBって何？
基本情報はググれば分かるとして、最近は利用が伸びていて、PL/SQLに対応し始めた、というのが趣深いですね。
ということで、Mariaをインストールすることにします。
上記では、yumでインストールしていますが、こちらの環境はUbuntuなので、sudo apt-get install mariadb-server。
インストール成功しましたが、こちらと同じ状態になっています。
https://jyn.jp/ubuntu-16-04-mariadb-password-bug/
書いていただいている対応により、接続できるようになりました。
 いったん休憩にします。</description></item><item><title>AWS Cloud9からさくらレンタルサーバはあきらめた</title><link>https://jqinglong.github.io/programmers-office/aws-cloud9%E3%81%8B%E3%82%89%E3%81%95%E3%81%8F%E3%82%89%E3%83%AC%E3%83%B3%E3%82%BF%E3%83%AB%E3%82%B5%E3%83%BC%E3%83%90%E3%81%AF%E3%81%82%E3%81%8D%E3%82%89%E3%82%81%E3%81%9F/</link><pubDate>Thu, 28 Jun 2018 12:49:42 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/aws-cloud9%E3%81%8B%E3%82%89%E3%81%95%E3%81%8F%E3%82%89%E3%83%AC%E3%83%B3%E3%82%BF%E3%83%AB%E3%82%B5%E3%83%BC%E3%83%90%E3%81%AF%E3%81%82%E3%81%8D%E3%82%89%E3%82%81%E3%81%9F/</guid><description>画面デザインはそれっぽくなってきたので、いったんバックエンドに入ろうと思います。
そして、最初の宣言（Monacaでハイブリッドモバイルアプリ開発）通り、AWS Cloud9＋さくらレンタルサーバで作ろうと思いました。
が、結論としては、諦めました。以下、できる方法をお探しの方には、あまりお役に立てません。
さくらレンタルサーバへのSSH公開鍵接続 これに関しては、割と情報はそろっていると思います。肝は、各フォルダへのパーミッション設定のようです。
今回、これに成功したかは不明です。
この画面で「AWS Cloud9 couldn’t connect to SSH server」エラーが出続けました。
このメッセージからはSSHでの接続に失敗しているのではと思い、ずっと調べていました。
こちらの情報は良いと思いました。
https://qiita.com/fukusuke/items/6eb9f8593a296a95798c
しかし、これはさくらレンタルサーバでは、root権限がなく、自分のHOME配下外のファイルの参照も厳しいです。
で、ふと思いました。Cloud9はNode.jsが必須だったと。それが原因でこのメッセージなのではないか。
さくらレンタルサーバへのNode.jsインストールは不可 ということで、Node.jsインストールを試みますが、これまた、いろいろ情報がありつつも、難しいという結果。
gmakeで失敗したのは、
logging.cc:(.text._ZN2v84base13DumpBacktraceEv+0x24): undefined reference to `backtrace’
logging.cc:(.text._ZN2v84base13DumpBacktraceEv+0x31): undefined reference to `backtrace_symbols’
というものですが、最終的には、そもそもインストール禁止だということで納得しました。
そもそも、レンタルサーバは複数のユーザが同じサーバーを共有するのであり、他の利用者に迷惑をかけるような利用は不可です。
正直、レンタルサーバというものを、ちゃんとイメージできていなかったのですが、今回 ls /homeをしてそういうことか、と理解しました。
そうであれば、下記のような禁止事項も納得です。
https://www.sakura.ne.jp/terms.html
・・・daemonとしてサーバーに常駐するプログラムの実行
ということで、さくらへの接続は止めて、今回もGCPで開発環境を構築することにしました。
AWS Cloud9からGCE（Google Compute Engine）への二つ目の接続 さて、すでに開発環境を作ってあるGCP（Google Cloud Platform）のGCE（Google Compute Engine）ですが、せっかくなので、別の環境を作ろうと思いました。
バイブルは、こちら。
https://qiita.com/j-un/items/f5d72d21f67d384d3c84
プロジェクトとして今回用のプロジェクトを作り、インスタンスを作ろうとします。
で、設定を選んでいくと、料金表示がされます。・・・料金。
無料で利用できるということでGCPを選んでいるので、無料の条件を再確認すると、
https://cloud.google.com/free/
1 f1-micro インスタンス（1 か月あたり、米国リージョンのみ）です。
ということで、既存のインスタンスに接続することにします。
初回作成時に失敗したと思いましたが、Cloud9環境を作るディレクトリは指定できます。
前回は自分のHOMEを指定する形になってしまいましたが、今回は、その下にディレクトリを作って、そちらを指定しました。
ということで、ようやく、バックエンド側開発に入ります。</description></item><item><title>MonacaでのOnsen UI V2 Vue Tabbar</title><link>https://jqinglong.github.io/programmers-office/monaca%E3%81%A7%E3%81%AEonsen-ui-v2-vue-tabbar/</link><pubDate>Sun, 24 Jun 2018 06:58:31 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/monaca%E3%81%A7%E3%81%AEonsen-ui-v2-vue-tabbar/</guid><description>まず、Monacaで画面デザインを作っています。
新規プロジェクトでは、「Onsen UI V2 Vue Tabbar」を選択します。
しかし、各種サンプルを見ながらなんとかなるかなと思いいつつ、なかなかしんどいですね。
この構成の場合、何かを調べようと思ったら、Monacaという基盤の話なのか、Onsen UIというデザインフレームワークの話なのか、Vueという画面制御フレームワークの話なのか、を切り分けながらそれぞれのマニュアルなり、情報なりを調べる必要があるわけです。
で、いきなり、はまったのが、画面上部のツールバーに画像を表示したいな、と。
そこで考えるべきは、画像をどこに置くのか、どういうパスを書けば参照してくれるのか、普通にimgタグを使うべきなのか、他に作法があるのか、等ですが、それぞれの守備範囲がいまいち理解できずに、調べようがないなと思うわけです。
結論としては、サンプルとして公開されているポケモンアプリ（https://docs.monaca.io/ja/sampleapp/samples/）で、画像の置き場はsrc/publicか、と理解し、あとはimgタグでやってみて、うまくいっているからよいか、みたいな感じです。
もう一つの例としては、画面を黒系統にしたいなと思い、Onsen UIのテーマローラー（https://onsen.io/theme-roller/）というのでDark themeといのがあるのが分かったのですが、それの適用方法が分からない。見てるとテーマローラーで生成したファイル群をダウンロードして、配置して、という方法が出てきますが、細かくカスタマイズしたいならそうかもしれませんが、単にテーマを適用したいだけなんだよ、ということでもう少し調べると、onsen-css-components.cssをonsen-css-components-dark-theme.cssに書き換えればよい、という情報が見つかります。
これはどこに書いてあるのだ、というところから始まりますが、それは検索して、今回の構成の場合はmain.jsに書いてあることが分かります。cssの読み込みをjsでやる、というところで既に古い頭にはつらいのですが、そういうものです。
ところが、このように書き換えてみても反映されない。むむ、と思い、もう少し調べると、dark-onsen-css-components.cssだよ、という情報が見つかり、これでOK。
しかし、なかなか辿り着かないよ、と思いつつ、やっていくうちに馴染むだろうと思い込んで、先に進みます。
React、Angular、Vue.js、React Nativeを使って学ぶ はじめてのフロントエンド開発 原 一浩,taisa,小松 大輔,永井 孝,池内 孝啓,新井 正貴,橋本 安司,日野 洋一郎 技術評論社 2018-05-09 &amp;lt;div class=&amp;quot;kaerebalink-salesranking&amp;quot; style=&amp;quot;margin-bottom: 5px;&amp;quot;&amp;gt; 売り上げランキング : 8419 &amp;lt;/div&amp;gt; &amp;lt;table style=&amp;quot;border: currentcolor; margin-top: 10px;&amp;quot;&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td style=&amp;quot;border: currentcolor; text-align: left;&amp;quot;&amp;gt; &amp;lt;/td&amp;gt; &amp;lt;td style=&amp;quot;border: currentcolor; padding-left: 10px; font-size: x-small; vertical-align: bottom;&amp;quot;&amp;gt; by &amp;lt;a href=&amp;quot;https://kaereba.</description></item><item><title>Monacaでハイブリッドモバイルアプリ開発</title><link>https://jqinglong.github.io/programmers-office/monaca%E3%81%A7%E3%83%8F%E3%82%A4%E3%83%96%E3%83%AA%E3%83%83%E3%83%89%E3%83%A2%E3%83%90%E3%82%A4%E3%83%AB%E3%82%A2%E3%83%97%E3%83%AA%E9%96%8B%E7%99%BA/</link><pubDate>Sat, 23 Jun 2018 11:21:52 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/monaca%E3%81%A7%E3%83%8F%E3%82%A4%E3%83%96%E3%83%AA%E3%83%83%E3%83%89%E3%83%A2%E3%83%90%E3%82%A4%E3%83%AB%E3%82%A2%E3%83%97%E3%83%AA%E9%96%8B%E7%99%BA/</guid><description>Monaca再開 今回、とあるアプリを作ろうと思い立ち、以前ちょっと遊んでいたMonacaを改めて使ってみたいと思います。
その間色々進歩していると思うので、割と一から勉強の部分も多々ありますが、地道に。
作ろうとしているものの構成は下記の通り。
システム構成 フロントエンド Monaca
Onsen UI V2 Vue Navigation
https://press.monaca.io/atsushi/2533
Vueを使ってみたいと思ってはいたのですが、この記事に後押しされました。
あまり複雑な画面にはならないと思いますが、その分遊べるところは遊ぼうという感じ。
バックエンド WordPress（REST API）
依然作ったWebアプリは、WordPressの豊富なテンプレートを生かしたこ洒落たUIにしたいという目的で、WordPressのプラグインという形でアプリを作りました。
ところが、WordPressプラグインをゴリゴリ書いていると、UI側のメリットよりも、開発フレームワークとして使いやすいと思うようになりました。
その意味で、WordPressを使い、ユーザ管理、コンテンツ管理、データIOを行って、フロントエンドにはREST APIで返す、という方法をとってみたいと思います。
プラグインの作成 – WordPress Codex 日本語版
開発環境 Cloud9＋さくらレンタルサーバ
並行して行っている、Code4Startupの開発環境は、Cloud9＋GCE（Google Compute Engine）ですが、ちょっと環境構築がしんどかった
https://www.programmers-office.ml/2018/05/03/code4startup-%ef%bd%9e-ubereats%e3%82%92%e4%bd%9c%e3%82%8d%e3%81%86-%ef%bd%9e-python-django%e7%92%b0%e5%a2%83/
ので、今回は、せっかく契約していることもあり、さくらレンタルサーバを使いたいと思います。
バックエンドのWordPressもさくらに立てるので、開発ソースと運用環境が両方さくらにあることのメリットが何かあるかも、探ってみたいと思います。
というわけで、今後に乞うご期待！</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ 淡々とページ追加</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E6%B7%A1%E3%80%85%E3%81%A8%E3%83%9A%E3%83%BC%E3%82%B8%E8%BF%BD%E5%8A%A0/</link><pubDate>Sun, 17 Jun 2018 00:01:38 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E6%B7%A1%E3%80%85%E3%81%A8%E3%83%9A%E3%83%BC%E3%82%B8%E8%BF%BD%E5%8A%A0/</guid><description>Code4Startup
Task 8、9の辺りは、ひたすらページ作成のコーディングをしていきます。
こういうドリル的なこと：写経も必要。
すんなりいかないところとして、
modelの作成で
restaurant = models.ForeignKey(Restaurant, on_delete=models.CASCADE)
講義の中では、on_deleteは記載していませんが、必要と怒られます。
offsetの書き方は注意
https://www.programmers-office.ml/2018/04/03/code4startup-%ef%bd%9e-landing-page%e3%82%92%e4%bd%9c%e3%82%8d%e3%81%86/
Code4Startup
シェアリング・エコノミー　―Uber、Airbnbが変えた世界 宮崎 康二 日本経済新聞出版社 2015-07-23 売り上げランキング : 88013 by カエレバ</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ Bootstrapの適用</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-bootstrap%E3%81%AE%E9%81%A9%E7%94%A8-2/</link><pubDate>Fri, 15 Jun 2018 23:52:18 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-bootstrap%E3%81%AE%E9%81%A9%E7%94%A8-2/</guid><description>以前もstaticの読み込みがうまくいっていなかったのですが、settings.pyを終始して戻して保存したら、style.cssを読んでくれたようです。まだ、完全に同じ見た目にはなっていませんが。もやもや・・・
Bootstrap4 講義はBootstrap3ベースになっていますが、最新のBootstrap4を使おうとすると、色々調べながら進める必要があります。
まず、jquery等の読み込みですが、講義で参照しているbasic templateは使用できないので、Introductionを見ると、そこにStarter templateがあります。
必要なJS読み込みは
となっています。
さらに、django-bootstrap3をインストールしていますが、ここはpip install django-bootstrap4にします。
シェアリング・エコノミー　―Uber、Airbnbが変えた世界 宮崎 康二 日本経済新聞出版社 2015-07-23 売り上げランキング : 28003 by カエレバ</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ Bootstrapの適用</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-bootstrap%E3%81%AE%E9%81%A9%E7%94%A8/</link><pubDate>Fri, 15 Jun 2018 23:48:08 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-bootstrap%E3%81%AE%E9%81%A9%E7%94%A8/</guid><description>Code4Startup
以前もstaticの読み込みがうまくいっていなかったのですが、settings.pyを終始して戻して保存したら、style.cssを読んでくれたようです。まだ、完全に同じ見た目にはなっていませんが。もやもや・・・
Bootstrap4 講義はBootstrap3ベースになっていますが、最新のBootstrap4を使おうとすると、色々調べながら進める必要があります。
まず、jquery等の読み込みですが、講義で参照しているbasic templateは使用できないので、Introductionを見ると、そこにStarter templateがあります。
必要なJS読み込みは
となっています。
さらに、django-bootstrap3をインストールしていますが、ここはpip install django-bootstrap4にします。
スタイルの読み込みがちゃんとできていないので見た目はもやもやしますが、とりあえず進めます。
Code4Startup
シェアリング・エコノミー　―Uber、Airbnbが変えた世界 宮崎 康二 日本経済新聞出版社 2015-07-23 売り上げランキング : 28003 by カエレバ &amp;nbsp;</description></item><item><title>シンガポール ダイジェスト3 2018年6月 スタートアップハブ</title><link>https://jqinglong.github.io/programmers-office/%E3%82%B7%E3%83%B3%E3%82%AC%E3%83%9D%E3%83%BC%E3%83%AB-%E3%83%80%E3%82%A4%E3%82%B8%E3%82%A7%E3%82%B9%E3%83%883-2018%E5%B9%B46%E6%9C%88-%E3%82%B9%E3%82%BF%E3%83%BC%E3%83%88%E3%82%A2%E3%83%83%E3%83%97/</link><pubDate>Wed, 13 Jun 2018 12:09:41 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%82%B7%E3%83%B3%E3%82%AC%E3%83%9D%E3%83%BC%E3%83%AB-%E3%83%80%E3%82%A4%E3%82%B8%E3%82%A7%E3%82%B9%E3%83%883-2018%E5%B9%B46%E6%9C%88-%E3%82%B9%E3%82%BF%E3%83%BC%E3%83%88%E3%82%A2%E3%83%83%E3%83%97/</guid><description>シンガポールダイジェストは今回が最後です。
（シンガポール ダイジェストその1はこちら、その2はこちら）
BSジャパン 日経プラス10 イノベーションどう生み出す!?先進シンガポールの突破力 今回行く直前に、たまたまテレビ番組「BSジャパン 日経プラス10 イノベーションどう生み出す!?先進シンガポールの突破力」を観ました。
メモから抜粋すると
・スタートアップ支援企業（スタートアップハブ？）
・SPECTRUM
https://www.spectrum.global/
・thebridge
https://thebridge-asb.com/
・Plug-in@Blk71
NUSエンタープライズとの協業
※シンガポール国立大学（National University of Singapore／NUS）
https://www.worksight.jp/issues/538.html
・電動キックスクーターのシェアリングサービス「Telepod」
https://japan.cnet.com/article/35104102/
・セントーサケーブルカーからの景色
などが、印象に残りました。
全部見てみたかったのですが、やはり1日では限界があり、SPECTRUMはビルの外観だけ、thebridgeとTelepodは見送りました。
SPECTRUM Bugis駅という比較的街中、ラッフルズホテルからもほど近く、良い立地のところに巨大な、そして特徴的な、きれいなビルが建っており、この中に入っているということです。
このビルだと、それなりの設備が期待できると思いますが、固定デスク一つ借りるようなプランで、600Sドルから。5万円ですか。
https://www.spectrum.global/memberships/
ただし、場所借りだけでなく、コンサルティング的なものも含まれるようです（経済情勢レポートとか、イベント参加とか）。
シンガポールでも色々あるわけですが、ちなみに東京と比較してみましょう。
東京のスタートアップハブ まず、スタートアップハブという名前を掲げて、SPECTRUMとも同様のサービスを提供していると思われる、Startup Hub Tokyo。
https://startuphub.tokyo/
「Startup Hub Tokyoは東京都からの委託を受けて株式会社ツクリエが運営しています。」とあり、Webサイトも、東京都中小企業振興公社がやっているTOKYO創業ステーションのサイトに紐づけられています。TOKYO創業ステーションとしても、コンサルティング、セミナー開催、施設提供を行っていますが、その関係性は分かりにくい気がします。
それはさておき、内容としては、部屋貸しではなく作業スペース貸しのイメージでしょうか。会員制サービスですが、会費は基本無料という太っ腹。保育サービスもありますよ、とこの辺は何がStartup Hub Tokyoのサービスで、何がTOKYO創業ステーションのサービスなのかわかりにくい…
と見てると、むしろ、TOKYO創業ステーションの方がSPECTRUMに近いか。こちらは、施設提供という面では、現時点で5カ所のオフィスの情報を提供し、補助を行ったりもしています。現在入居者募集中の白鬚西R&amp;amp;Dセンターというところを見ると、貸付料：毎月支払総額27,090円～95,131円とありますので、金額的にはデスク一つ5万円よりは割安なのかもしれません。
あるいは、レンタルオフィス、コワーキングスペースという切り口で探してみても、同様のサービスが見つかるかもしれません。
例えば、ビジネスエアポート。
スペース貸し、部屋貸し、両タイプありますが、例えばスペース貸しだとこんな感じ。
https://business-airport.net/share_work_place/
さらに言えば、Yahoo!のLODGEなんかも、目的は同等で、無料キャンペーン継続中です。
最初に5万円という基準を持って各所見てみると、割と東京で受けられるサービスもリーズナブルなのでは、と思えてきます。
その他の地域のスタートアップハブ 日本の各地のサービス 探してみると、こういったサービスに力を入れている自治体も多いようです。
一例として、宮崎市。
http://www.miyazaki-cci.or.jp/support/
会員の種類によって期間が変わりますが、施設無償利用等できるとのこと。
http://www.miyazaki-cci.or.jp/support/news/2018/04/post-19.html
カナダ 今回帰りの飛行機用に買った雑誌「Inc.」。
https://www.inc.com/
Webサイトのタイトルが「Small Business Ideas and Resources for Entrepreneurs」となっている通り、スタートアップ向け情報満載です。
そして、その中の記事で取り上げられているのが、カナダ。ニューヨークやサンフランシスコより安いよと。</description></item><item><title>シンガポール ダイジェスト2 2018年6月　五月天（メイデイ）コンサート</title><link>https://jqinglong.github.io/programmers-office/%E3%82%B7%E3%83%B3%E3%82%AC%E3%83%9D%E3%83%BC%E3%83%AB2-2018%E5%B9%B46%E6%9C%88%E3%80%80%E4%BA%94%E6%9C%88%E5%A4%A9%EF%BC%88%E3%83%A1%E3%82%A4%E3%83%87%E3%82%A4%EF%BC%89/</link><pubDate>Sat, 09 Jun 2018 09:12:38 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%82%B7%E3%83%B3%E3%82%AC%E3%83%9D%E3%83%BC%E3%83%AB2-2018%E5%B9%B46%E6%9C%88%E3%80%80%E4%BA%94%E6%9C%88%E5%A4%A9%EF%BC%88%E3%83%A1%E3%82%A4%E3%83%87%E3%82%A4%EF%BC%89/</guid><description>今回の主目的、五月天（メイデイ）コンサートについて
（シンガポール ダイジェストその1はこちら）
（2020年1月26日）最近このページを見に来てくれる人がいるのは、きっと8月のシンガポール公演が発表されたからですね。なのに、写真がちゃんと貼られておらず、悲しいことになっていました・・・。写真を貼りなおします。
実は、去年の北京鳥の巣、正月の登桃園の最終日も行っているのですが、追って書きたいと思います。
改めて、五月天（メイデイ）について Mayday – アミューズ オフィシャル ウェブサイト
https://baike.baidu.com/item/%E4%BA%94%E6%9C%88%E5%A4%A9/17011（中国語説明）
日本語オフィシャルサイトでは「1999年のデビュー・タイミング」とありますが、1997年に前身のSo Bandから五月天という名前になっており、2017年には結成20周年イベントもやっています。
「2012年4月には、史上初となる北京国家体育場（鳥の巣）で2日連続公演を開催。20万枚のチケットを即日完売。」というあたりで、凄まじさを感じていただければ。
現在のワールドツアー「人生无限公司世界巡回演唱会」（英名：LIFE TOUR）は、今回のシンガポール回が89回目。2018年1月7日の回の時点で226万人が参加しているとのことです。
https://zh.wikipedia.org/wiki/%E4%BA%BA%E7%94%9F%E7%84%A1%E9%99%90%E5%85%AC%E5%8F%B8%E5%B7%A1%E8%BF%B4%E6%BC%94%E5%94%B1%E6%9C%83
シンガポール支社へ出勤！ ツアー名の「人生无限公司」は「人生無限会社」を意味します。
直近のアルバム「自伝」に「人生有限公司」という曲があり、それをさらにちょっとひねっています。
Mayday (五月天) – 人生有限会社 / 人生有限公司 – KKBOX
で、このコンサートが会社なので、コンサートに参加することを中国語で「上班」すなわち出勤と言います。アンコールの掛け声は「加班！」（残業！）です。
直近の5月19日、20日にも武道館でコンサートがありました。
http://www.mayday.jp/life2018/
こちらにも参加したわけですが、海外のバンドが日本で行うコンサートとしての武道館というのは十分ステータスがあると思うものの、本気を出した大規模のライブを見たいという気持ちが盛り上がり、シンガポールまで出張（遠征）することにしました。ちなみに、今回のシンガポール回には”无限放大版”（無限拡大版）という名前が付いており、最大規模のステージが見られるだろう、というのが決定打となりました。
会場は、シンガポールナショナルスタジアム。駅から気合が入っています。
川沿いで、マリーナベイサンズを望む、立地的にも美しい会場。
入場はバーコードスキャンで、長い行列ができるということもありませんでした。
中に入ると、「これが埋まるのか～」とこの時点で早くも感動を抑えられません。
4万人の観客だったそうです。
そして、巨大なスクリーン。これが見たくてシンガポールまで来たわけです。
オープニング前に前座さん（失礼！充分売り出し中の歌手です）が歌うのは、朝礼。朝礼に間に合わない人たちが結構いてびっくり。
コンサートは、ショートフィルムから始まり、随時そのストーリーをはさみながら進みます。
さらに、曲によって、映像演出が凝らされます。
一番見たかったのが、「成名在望」。
雰囲気はオフィシャルビデオでも見られます。
Mayday五月天 [ 成名在望 Almost Famous ] 現場無限Life版 Official Music Video
これを生で見る、この人の海の中に自分がいる、それを体験したかったのですが、想像以上の迫力でした。
このビデオの映像だと、競技場を縦長に使っていますが、今回は横長に使っているので全体の幅が長いと思いますし、スクリーンの高さも大分高いと思います。
途中ゲストは、李宗盛。「僕のこと知ってる？」なんてトークしますが、超大物、かつ、五月天の父的存在。
さて、五月天のコンサートではファンは歌い放題に歌っているので、毎回声の限りで歌い続けます。
声も枯れたところで、最後の曲は、ファンと一緒にLaLaLaで終わるという流れです。
まず、本編終了が「人生海海」。アンコール前のいったん終了の儀式的なところが個人的には好きではなく、武道館の時にも、「アンコールは予定されているけど、まあ、いったん終了ね」という感じを受けていたのですが、今回はいったんきっかり終わらせる感じを受けました（気のせい？）。武道館の時にはあまり意識していなかったですが、この曲のスクリーン映像でスタッフロールが流れているのですね。ちゃんとした終了感があると、LaLaLaにも力が入ります。
アンコールに入ってから、「转眼」という曲では、メインストーリーの映画とは別に、この曲用のアニメーションフィルムが流れます。
ここでは、映像がメインで、本人たちは片隅で歌っているような形になるのですが、これも恐らく映画をこんな巨大なスクリーンで見ることはないだろうなという圧倒感がありますし、日本で見て分かっているストーリーなのですが、やはりしんみりさせる名曲ならではの名映像でした。</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ Facebook認証</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-facebook%E8%AA%8D%E8%A8%BC/</link><pubDate>Sat, 09 Jun 2018 00:26:26 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-facebook%E8%AA%8D%E8%A8%BC/</guid><description>Code4Startup
続いて、oauthによるFacebook認証。
この辺の実践感がこの講座の良いところ。
https://developers.facebook.com/
スタートガイド→Facebook for Developersアカウントを作成するところから始めます。
画面構成は講義ビデオの時からは大分変っているようですが、何とか進められます。
で、django-rest-framework-social-oauth2==1.0.4をインストールすることになっているのですが、
ImportError: No module named ‘social_django’
となります。
↓
https://teratail.com/questions/115059
pip install social-auth-app-django
↓
ImportError: No module named ‘braces’
↓
pip install django-rest-framework-social-oauth2 -U
→django-rest-framework-social-oauth2==1.1.0
↓
OK
という感じで（分かりますか(^_^;;;)）、結局最新バージョンでないとライブラリ間の構成が合わないという話。
requirements.txt　の記述は
django-rest-framework-social-oauth2==1.0.4
のままだけど・・・
でうまくいったかと思いきや、アプリ画面を開くと
You may need to add ‘x.x.x.x’ to ALLOWED_HOSTS. のエラー。
settings.py
のALLOWED_HOSTS に追記すれば確かに起動するようになった。
https://www.deep-blog.jp/engineer/archives/4287
しかし、これまで書いていなかったのになぜ？ちょっと気持ち悪い。
Facebook認証の流れについては、
https://stackoverflow.com/questions/18995448/rails-api-authenticate-users-from-native-mobile-apps-using-username-password-or
と同じ内容の図がもう少しきれいに書かれていて、なるほど、と思いました。
そして、ブラウザ・サーバアプリ・Facebook間でのやり取りは、アプリを作る前に試しましょうということで、POSTMAN。
このJSON大流行のこのタイミングで、このツールをぶつけてくるところがなかなか（たまたま）。
python-social-auth のPipelineの説明は、ビデオ見てると行方不明になりますが、下記になります。
https://github.com/python-social-auth/social-docs/blob/master/docs/pipeline.rst
ちょっと、Facebook認証で情報を取り出せるようになるので、GDPRが気になるところ。
個人で試しているうちは気にしなくても良いかもしれませんが、早急に考えないといけないかと思っています。
Code4Startup
独学プログラマー Python言語の基本から仕事のやり方まで コーリー・アルソフ 日経BP社 2018-02-24 売り上げランキング : 204 by カエレバ</description></item><item><title>シンガポール　ダイジェスト　2018年6月</title><link>https://jqinglong.github.io/programmers-office/%E3%82%B7%E3%83%B3%E3%82%AC%E3%83%9D%E3%83%BC%E3%83%AB%E3%80%80%E3%83%80%E3%82%A4%E3%82%B8%E3%82%A7%E3%82%B9%E3%83%88%E3%80%802018%E5%B9%B46%E6%9C%88/</link><pubDate>Fri, 08 Jun 2018 08:38:17 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%82%B7%E3%83%B3%E3%82%AC%E3%83%9D%E3%83%BC%E3%83%AB%E3%80%80%E3%83%80%E3%82%A4%E3%82%B8%E3%82%A7%E3%82%B9%E3%83%88%E3%80%802018%E5%B9%B46%E6%9C%88/</guid><description>先週行ってきたシンガポールについての記録を残しておきます。
両替 両替は、事前に都内「アクセスチケット」でやっておきました。
https://www.access-ticket.com/shop/detail/64
その時点で、東京駅前店100Sドル8104円。
秋葉原店の方がレート良かったですが、在庫がなかったので。
全ての店舗で外貨取り扱いがあるわけではない（池袋店ではありませんでした）のでご注意。
また、「インターバンク」も事前連絡制なので安心、かつ、レートもそこそこ良いです。
http://www.interbank.co.jp/
そうは言っても、現地の方が良いのではと思ったのですが、チャンギ空港では円買取が1.213なので100Sドルあたり8244円、チャイナタウンの両替店では5000円で60Sドルなので、100Sドルあたり8333円でした。
他の通貨のレートもよさそうだっでしたが、両替のためだけにウロチョロするのももったいないので、個人的なおすすめは、アクセスチケット秋葉原店に行って、在庫がなければインターバンクに電話、という感じかなと思います。
空港設備 最近、深夜出発が多かったのですが、今回はちょっと早めの時間だったので、自動化ゲートの登録をしました。
法務省：自動化ゲートの運用について（お知らせ）
これとは別に、帰国側では、顔認証ゲートもスタートしています。
法務省：羽田空港における「顔認証ゲート」の導入について
下記ページによると、自動化ゲートの利用率が上がらないために導入されているよう。
http://business.nikkeibp.co.jp/atclh/NBO/mirakoto/design/2/t_vol22/
ちょっともやもやしますね。
また、出入国審査とは別に、その前に航空会社のパスポートチェックがあるため、事前にネットチェックインしていても、カウンターでの手続きが必要というのも、そこでちゃんとした搭乗券がもらえる安心感はあるのですが、若干すっきりしない感じはあります。
一方、シンガポール。出国時は、ネットチェックインしてあり、預け荷物がなければ、航空会社のカウンター手続きは不要でした。
また、出国審査も、人のいる方に並ぼうとすると、機械の方でどうぞと案内されました。で、パスポートスキャンして顔認証で終わり。
初めてだったので、あとはこの紙っぺらのバーコードで飛行機に乗るんだ、とちょっと不安でしたが、そういうものだと分かっていれば楽々ですね。
日本頑張れ。（というか、一部で始めているということは、安全面への配慮とかではなく、単純に遅れている、ということですよね。もやもや…）
食事（チキンライス） シンガポールと言えば、シンガポールチキンライス！思う存分、食べ比べてきました。
（1）空港フードコート
ローストタイプト、スチームタイプがありました。どちらも単品だと4.8Sドル。個人的には、色々なタレを楽しむスチームタイプがよりよかったです。卵トッピングは0.8Sドル。いずれも絶品と言ってよい美味しさでした。
到着直後と、帰国直前に食べたのですが、空港でこの値段で食べられるなら、街中では他の食べ物に集中する、という作戦も大いにありかと思います。
（2）大学食堂
いきなり、ライスではないのですがチキンライスとチキンヌードルを売っている大学の食堂。
空港から大学に直行して、すぐにチキンライスというのも芸がない、ということでヌードルにしてみました。レモンチキンヌードル。
3.5ドルです。お味は悪くないですが、安いと思って大学食堂を狙うならば、過度な期待はしない方が良いかな、という印象です。
（3）マックスウェルフードセンター
こちらは有名店。行列が絶えないようですが、並んでもそんなに時間がかからないそうです。
有名店の二つくらい隣のお店。
お値段は失念・・・4Sドルくらいだったかと思います。
写真からこの柔らかさ伝わりますでしょうか。今回のベストチキンライスでした！
食事（その他） カヤトースト
喜園珈琲店のカヤトーストはふわふわ。本当においしかったです。
これとちょっと甘いコーヒーで25Sドル。朝、あまり時間ない中で無理やり予定を詰め込んだ形でしたが、行ってよかったと思います。
米蒸系のお菓子
こちらは、空港のフードコート入り口に出店していた売店にて。
ういろうとかのねっとり系のお菓子が好きなので、全種類食べたいと思いながら二つ購入。
案の定美味しかったです。
ホッケンミー＆バクテー
こちらはセントーサ島ユニバーサルスタジオ前のマレーシアフードストリートにて。ホッケンミーって、2種類ありますかね。
写真からは伝わらないように思いますが、ホッケンミーは2人前ですか、というくらいの量。これにご飯はつらかったので、普段あまり残さないのですが、ごはん半分は、スタッフの方に美味しくいただいてもらいました…
かき氷
マレーシアフードストリートもう一品、かき氷。
行く前から気になっていた、チェンドルというものが乗っています。緑色の物体です。
で、チェンドルかき氷の場合は、ココナッツミルクがかかるのが、定番のようですが、これが美味しい。日本でもやればよいのにと思います。
ただ、氷は普通のタイプ（チャイナタウン駅近の有名店だとふわふわタイプのようですが）で、頭がキンキンになりながら食べていました。</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ heroku環境整備</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-heroku%E7%92%B0%E5%A2%83%E6%95%B4%E5%82%99/</link><pubDate>Fri, 08 Jun 2018 01:47:27 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-heroku%E7%92%B0%E5%A2%83%E6%95%B4%E5%82%99/</guid><description>Code4Startup
さて、herokuが動作するようになると、おもむろにGunicornをインストールします。
Gunicornとは何か http://gunicorn.org/
Gunicorn ‘Green Unicorn’ is a Python WSGI HTTP Server for UNIX.
Python製のWSGI サーバ
WSGI とは何か http://gihyo.jp/dev/feature/01/wsgi/0001
WSGIはJavaにおけるJava Servelet APIと同じように，WebサーバとWebアプリケーション間の汎用的なインターフェースを定義しています。
要するに、Djangoを動作させるための土台、と考えればよいでしょうか。
次にインストールするのが、WhiteNoise
WhiteNoiseとは何か https://pypi.org/project/whitenoise/
http://furodrive.com/2016/01/white_noisedjango/
WhiteNoiseとはWSGIアプリケーションのための静的ファイルを配信するのを簡単にしてくれるライブラリです。
少しの設定をするだけでAmazon S3やNginxに頼ることなく静的ファイルを配信できます。
本番サーバーで画像やcss等を参照できるようにするには色々と手順を踏まないといけなかったのですが、WhiteNoiseを使うとそのような手間が省けて大変便利です。
続いて、dj-database-url
dj-database-urlとは何か https://github.com/kennethreitz/dj-database-url
http://y0m0r.hateblo.jp/entry/20121130/1354290868
dj-database-urlを使うとdb接続文字列を環境変数DATABASE_URLから取得させることができます。
さらにpsycopg2 PythonのPostgreSQL用ドライバ
これで、herokuに乗せるわけですが、色々講義内で想定されているエラー以外に、想定外のエラーが。
could not determine PostgreSQL version from ‘10.4’
諸々のサイトを見るとpsycopg2のバージョンを上げろと。
http://initd.org/psycopg/docs/
こちらで表示されるのが、現時点で2.7.5なのでそうしてみます。
そうすると、こんな感じのエラー
Could not find a version that satisfies the requirement psycopg2==2.7.5 (from -r /tmp/build_f493d80720eb882b01a250f718f3b058/requirements.txt (line 6)) (from versions: 2.0.10, 2.0.11, 2.</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ herokuへの道は続く</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-heroku%E3%81%B8%E3%81%AE%E9%81%93%E3%81%AF%E7%B6%9A%E3%81%8F/</link><pubDate>Wed, 06 Jun 2018 13:57:30 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-heroku%E3%81%B8%E3%81%AE%E9%81%93%E3%81%AF%E7%B6%9A%E3%81%8F/</guid><description>Code4Startup
前回からの続き
インストールされたということで、heroku loginしてみると、
Error: login is not a heroku command.
再インストールしなさいという情報があるので、
curl https://cli-assets.heroku.com/install-ubuntu.sh | sh
しかし、エラー変わらず。
手当たり次第という感じですが、
wget -qO- https://toolbelt.heroku.com/install-ubuntu.sh | sh
変わらない。
https://teratail.com/questions/125977
に従ってみる。
npm uninstall -g heroku
これでもheroku –versionは出てくるが・・・
wget https://cli-assets.heroku.com/heroku-cli/channels/stable/heroku-cli-linux-x64.tar.gz -O heroku.tar.gz
tar -xvzf heroku.tar.gz
mkdir -p /usr/local/lib /usr/local/bin
sudo mv heroku-cli-v6.16.18-62346b1-linux-x64/ /usr/local/lib/heroku
↓実際に作成されたディレクトリ名に変更
sudo mv heroku-cli-v6.99.0-ec9edad-linux-x64/ /usr/local/lib/heroku
sudo ln -s /usr/local/lib/heroku/bin/heroku /usr/local/bin/heroku
失敗
ln: failed to create symbolic link ‘/usr/local/bin/heroku’: File exists
↓
sudo unlink /usr/local/bin/heroku</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ herokuへの道</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-heroku%E3%81%B8%E3%81%AE%E9%81%93/</link><pubDate>Fri, 01 Jun 2018 13:13:48 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-heroku%E3%81%B8%E3%81%AE%E9%81%93/</guid><description>Code4Startup
講義ビデオは突然heroku loginから始まった。
しかし、cloud9ではherokuコマンドは効かない。
よって、インストールから。
http://www.lib-arc.com/entry/2018/04/15/234355
こちらでは、nodeは入っている前提。しかし、少なくとも私の環境には入っていない。
そこから。となると、こちらを参考。
https://qiita.com/beplocks661/items/8d840b6efcdcd14009bf
と思ったらnvm: command not found。
https://qiita.com/seibe/items/36cef7df85fe2cefa3ea
ここから。
sudo apt-get install -y nodejs npm
sudo npm cache clean
sudo npm install n -g
sudo n stable
node -v
v10.2.1
ここからやっとherokuインストール
npm install -g heroku-cli
インストールは始まったけど、エラー
・・・
npm ERR! Please try running this command again as root/Administrator.
・・・
sudo npm install -g heroku-cli
でOK
heroku -v
heroku-cli/7.0.9 linux-x64 node-v10.2.1
という感じでよいのでしょうか。
開発環境構築の基礎を学べます。
ん？cloud9って、こういうものでしたっけ？？
Code4Startup</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ Djangoのデバッグ</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-django%E3%81%AE%E3%83%87%E3%83%90%E3%83%83%E3%82%B0/</link><pubDate>Fri, 01 Jun 2018 07:14:37 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-django%E3%81%AE%E3%83%87%E3%83%90%E3%83%83%E3%82%B0/</guid><description>Code4Startup
前回に続き、Registration機能の実装ですが、どうもデータが登録されません。
では、ということでデバッグ実行をしようと思ったのですが、これがまたうまく動きません。
そもそもサービス起動のために
python manage.py runserver xxx.xxx.xxx.xxx:8000
を叩かなければいけないということですから、普通にRunボタンを使って実行することができないわけです。
では、と思って、New Terminalでコマンド実行用のウインドウを開いて、その中で上記のコマンドを叩こうとしましたが、cdコマンドが効いてくれないようです。
ではでは、
python foodtasker/manage.py runserver xxx.xxx.xxx.xxx:8000
とすると、
Traceback (most recent call last):
File “foodtasker/manage.py”, line 17, in
“Couldn’t import Django. Are you sure it’s installed and “
ImportError: Couldn’t import Django. Are you sure it’s installed and available on your PYTHONPATH environment variable? Did you forget to activate a virtual environment?
となってしまいました。
なお、こちらのサイトでも、2017年12月3日現在、デバッグ実行ができないと判断されているようです。
むう。。。
とりあえずはやむを得ないので、こちらを参考に、コンソールに出力。いつの時代も安定のコンソール出力。
失敗の原因は色々で、objectsとobject（誤）とか、FalseとFALSE（誤）とか。
もう少しエディタの力で何とかならないものか・・・
Code4Startup
ゼロから作るDeep Learning ―Pythonで学ぶディープラーニングの理論と実装 posted with カエレバ 斎藤 康毅 オライリージャパン 2016-09-24 売り上げランキング : 228</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ Registration</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-registration/</link><pubDate>Mon, 28 May 2018 12:49:42 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-registration/</guid><description>Code4Startup
Djangoで持っているUser管理の機構を利用する部分。
それ以外に内容的に特筆すべきところはないですが、いったんエラーを発生させて、コンソールに表示されているエラーを確認して、対処するという流れ。
Cloud9だと、コンソールウインドウを見ながらソースを書いているような画面構成で、ソースを保存した時点でエラーがあればエラーを表示してくれる。
これは非常に便利。
Code4Startup
ゼロから作るDeep Learning ―Pythonで学ぶディープラーニングの理論と実装
posted with カエレバ
斎藤 康毅 オライリージャパン 2016-09-24
売り上げランキング : 231</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ Sign In &amp; Sign Out</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-sign-in-sign-out/</link><pubDate>Sat, 26 May 2018 00:19:17 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-sign-in-sign-out/</guid><description>Code4Startup
画面を横に並べて、動画見ながらコーディング、という形にすればよいのでしょうが、動画を見てから書こうとすると、しばしば間違いが。
ログインページのテンプレートファイルで
{% load staticfiles %}
を忘れずに。忘れるとinvalid block tag ‘static’というエラーが発生。
{% csrf_token %}
というお約束。こういうの見ると萌える。
で、一通り書いてみましたが、
http://（公開アドレス）:8000/restaurant/sign-in/
で何も表示されない。なんだろうと探ります。
あまりコーディング中の自動補完（clodu9のAce Editor）は正しくないのも、うーん（Visual Studioっ子なので）。
django.contrib.auth のauthが表示されなかったり、
auth_views.logoutは表示されるけど、auth_views.loginは表示されなかったり。
かなり手間取りましたが、実際は単なる記述ミス。
タグは自動補完が走り、例えば」を入力すると「」になってしまう罠。 ちなみに、url名は「sign-in」、テンプレート名は「sign_in.html」みたいなのは、一般ルールでしょうか？
これもsign-inと書くべきところをsign_inと書いていたりしました（そういう補完候補が出る、というのもあるし）。
なんとかかんとか、ログイン認証の仕組みができました。先は長いぞ。
Code4Startup
  ゼロから作るDeep Learning ―Pythonで学ぶディープラーニングの理論と実装 posted with カエレバ 斎藤 康毅 オライリージャパン 2016-09-24 売り上げランキング : 231</description></item><item><title>xperiaのなぜ</title><link>https://jqinglong.github.io/programmers-office/xperia%E3%81%AE%E3%81%AA%E3%81%9C/</link><pubDate>Thu, 24 May 2018 14:02:59 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/xperia%E3%81%AE%E3%81%AA%E3%81%9C/</guid><description>以前、Xperia Z Ultraを持っていましたが、寿命を迎えた際に結局これだと納得できる後継機を見つけることができず、いわゆるZUltra難民になりました。
当時調べたのが下記＜ファブレット比較＞ですが、今でもあまり状況は変わっていないように思われます。
個人的には、軽さと、画面サイズを求めています。
で、今、携帯はGalaxy Note8を使用しています。
https://www.programmers-office.ml/2017/10/21/%E6%90%BA%E5%B8%AF%E6%A9%9F%E7%A8%AE%E5%A4%89%E6%9B%B4/
ちょっと重たいですが、性能は申し分ありません。
もう少しあれこれ活用したいですが、若干引っかかるのが画面サイズ。
細長端末は、ちょっと最近進行中の老眼にはつらいのです。
そこでタブレットに興味を持っており、現在、一番気になるのは、HUAWEI MediaPad M3 Lite 8 です。
＜タブレット比較＞ ■HUAWEI MediaPad M3 Lite 8
幅　約123.3 mm
縦　約213.3 mm
厚さ　約7.5 mm
重さ　約310 g
8 inch (1920 x 1200) IPS
Android 7.0
重さ、薄さは、ここまでのものはなかなかないです。
ちょっとキワモノ気味の中華タブでも、ここまで行きません。
お値段気にしなければiPad miniは行けてますが・・・
■iPad mini 4
7.9型（2048×1536）
134.8×203.2×6.1mm
298.8g
■ZenPad 3 8.0
7.9型（2048×1536）
約136.4×205.4×7.57mm
約320g
Android 6.0
■Teclast T8
8.4インチ 2560 x 1600
218mm×126mm×7.8mm
368.7g
Android 7.</description></item><item><title>日経プラス10のシンガポール特集</title><link>https://jqinglong.github.io/programmers-office/%E6%97%A5%E7%B5%8C%E3%83%97%E3%83%A9%E3%82%B910%E3%81%AE%E3%82%B7%E3%83%B3%E3%82%AC%E3%83%9D%E3%83%BC%E3%83%AB%E7%89%B9%E9%9B%86/</link><pubDate>Wed, 23 May 2018 13:13:08 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E6%97%A5%E7%B5%8C%E3%83%97%E3%83%A9%E3%82%B910%E3%81%AE%E3%82%B7%E3%83%B3%E3%82%AC%E3%83%9D%E3%83%BC%E3%83%AB%E7%89%B9%E9%9B%86/</guid><description>昨晩の日経プラス10のシンガポール特集（うちのテレビの自動録画、いい仕事した！）。
見に行きたいところがわんさか。
https://jcc.jp/news/13510974/
SPECTRUM
スタートアップ企業等が集まるワークスペース
https://www.spectrum.global/
thebridge
同じく
https://thebridge-asb.com/
Plug-in@Blk71
NUSエンタープライズ
シンガポール国立大学（National University of Singapore／NUS）
同様
https://www.worksight.jp/issues/538.html
電動キックスクーターのシェアリングサービス「Telepod」
https://japan.cnet.com/article/35104102/
あと、基本中の基本だと思いますが、セントーサ島へ行くロープウェイからの景色も刺激的なようなので、見てみたい！</description></item><item><title>仙台旅行は週末パス？</title><link>https://jqinglong.github.io/programmers-office/%E4%BB%99%E5%8F%B0%E6%97%85%E8%A1%8C%E3%81%AF%E9%80%B1%E6%9C%AB%E3%83%91%E3%82%B9%EF%BC%9F/</link><pubDate>Sun, 20 May 2018 04:29:49 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E4%BB%99%E5%8F%B0%E6%97%85%E8%A1%8C%E3%81%AF%E9%80%B1%E6%9C%AB%E3%83%91%E3%82%B9%EF%BC%9F/</guid><description>先日、急遽所用で仙台に行ってきました。
これまでは、駅レンタカーを使用していましたが、もう少し安い方法があるのでは、と調べてみたところ、週末パスが最強ではないかと思っています。
週末パス
こちらは、大人8,730円で、エリアも、千葉県全域、伊豆急下田、新潟、酒田、くりこま高原、女川、という範囲をカバーしています。
通常料金で、東京－仙台間が片道乗車券5,940円ですから、往復で3,150円お得です。
普通は新幹線を使うと思いますので、これにプラス片道4,430円（やまびこ）、もしくは5,260円（はやぶさ）かかります。
はやぶさ往復で、19,250円です（通常は22,400円）。
これに現地でレンタカーを使用するとします。
この場合に候補となるのが、
レール＆レンタカーきっぷかと思います。
これは、「同乗者全員のJR線乗車券が２０％割引・特急料金やグリーン料金等が１０％割引でご利用いただけます」という制度です。
これで計算すると、乗車券往復9,504円、やまびこ特急券9,468円、計18,972円となります。
そうすると、こちらの方が週末パスよりちょっとお得のように思われます。
しかし、実は、これにプラスするレンタカー料金が問題です。
今回は24時間ベーシックタイプ（5人乗りのフィット、デミオ、ヴィッツ等のクラス）を使用しましたので、それを例とします。
https://www.ekiren.co.jp/annai/ryoukin/r_rkn_list1.html
こちらの表で、7,400円です。
これに対して、通常のレンタカーサービスを調べてみます。
例として、楽天を使います。
https://travel.rakuten.co.jp/cars/
当然各店舗で微妙に違うのですが、今回利用したオリックスレンタカーだと、6,170円というのがヒットします。
楽天ユーザならポイントが付きますが、これは61ポイントなので誤差とします。
これで比べると、
レール＆レンタカー：18,972＋7,400＝26,372円
週末パス＋格安レンタカー：19,250＋6,170＝25,420円
となるのです。
—
実は、これを書くまでは、もっと差があると思っていたのですが、さほどではありませんでした。
その時に調べたときは、くりこま高原より遠くないと利かない割引とか、駅レンタカーの値段がもっと高く見えていたのですが、ちょっとその情報が分からなくなってしまいました。
また、こんなキャンペーンもありました。
JRおトクなきっぷ＋駅レンタカープラン(2018年度)
https://www.jrerl.co.jp/campaign/detail?topics_no=351&amp;amp;sid=jrerl
この場合、週末パスを使い、同条件のレンタカー料金6,480円となりました。
少しだけオリックスが安いですが、実はオリックスは駅から7分ほど歩きます。
不慣れな街を歩く手間を考えると、310円の差で駅隣接の駅レンタカーを借りるというのもありかなと思います。
以上ご参考まで！</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ Django環境続き</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-django%E7%92%B0%E5%A2%83%E7%B6%9A%E3%81%8D/</link><pubDate>Fri, 04 May 2018 03:48:48 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-django%E7%92%B0%E5%A2%83%E7%B6%9A%E3%81%8D/</guid><description>Djangoが動作する環境ができたら、アプリを作成していきます。
「python manage.py startapp foodtaskerapp」により
foodtasker
foodtaskerapp
のディレクトリが並ぶ形になります。
ここから、行ったり来たりになりますが、
・まずは、foodtaskerのsettings.pyのINSTALLED_APPSに追加
・次に、foodtaskerappのviews.pyにhomeメソッド追加
・次に、foodtaskerのurls.pyのurlpatternsに追加
・次に、foodtaskerappにtemplateディレクトリを作成し、home.html作成
という形で作成していきます。
講義ビデオではatom＋emmetのスニペットが快適そうに見えますが、まあ、そんなに使うものでもないと思うので、Cloud9のAceエディタの機能で進めます。最低限のスニペットはありますので。
いったん実行すると、「TemplateDoesNotExist」エラーが発生しましたが、単純に、
テンプレートフォルダ名は「template」ではなく「templates」ということでした。失礼。そして、
python manage.py migrate
python manage.py createsuperuser
により、管理画面が表示されます。
bootstrapも組み込んで（Bootstrap 4ではグリフアイコンをサポートしないため、「fonts」フォルダは削除されましたとのことなので、最新版を取得するとここはちょっと違います）、次はTask3です。
ゼロから作るDeep Learning ―Pythonで学ぶディープラーニングの理論と実装 posted with カエレバ 斎藤 康毅 オライリージャパン 2016-09-24 売り上げランキング : 303</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ Python/Django環境</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-python-django%E7%92%B0%E5%A2%83/</link><pubDate>Thu, 03 May 2018 00:31:24 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-python-django%E7%92%B0%E5%A2%83/</guid><description>次は、Webアプリ側の環境で、Djangoです。
もう、これは、最初からCloud9で楽勝でしょう、と思っていたら甘かった・・・
AWS Cloud9とは 　元々Cloud9を使用しており、開発環境をワンクリックで簡単に構築できることが売りだったので、それでよいやと思っていたわけです。
ただ、昨年AWSに統合されたバージョンがリリースされました。最初は旧版とAWS版並列で行くていくのかなと思っていたのですが、どうやら移行を促されるようなので、この機会にAWS版を使用することにしました。
（旧版は新規プロジェクト作成時は、こんな感じでテンプレートを選択できます。ボタンを押すだけで、すぐに開発環境ができあがり、ソースを書き始めることができます。）
　いざ使おうとすると、色々分かってきます。
まず、AWS Cloud9は、IDEとしては無償なのですが、環境とセットにはなっていません。
分かりにくいですが、他のサーバを使用してSSHで接続するか、AWSのEC2に乗せる必要があります。すなわち、環境自体は無償とは限らないということです。
EC2も12か月間は無償利用できるというのがアピールされていますが、1年後にどうするか悩むことになるのであれば、そこには頼りたくないなという気持ちがわきました。
選択肢として、たまたま最近さくらレンタルサーバを契約したので、それでもよいかと思ったのですが、それだと世間の人にとっては無償でもなんでもなくなりますし、そちらは今あまり壊したくないというのもありました。
そこで他の選択肢を探し、見つけたのがGCE（Google Compute Engine）でした。
GCE（Google Compute Engine）を使用する 　GCEは、最初にOSやCPU等を選択して、まっさらのOS環境が提供される、という意味で、レンタルサーバとほぼ同様と考えてよいかと思います。
とはいえ最低限のものは入っていると予想して、設定を開始します。今回必要なのはPython3でDjangoを動かすことです。
ここで頭の中に持っておいた方が良いと思うことは、Cloud9（AWS）側の設定と、GCEの設定がある、ということです。そして、ほとんどの作業はGCE側の設定です。Cloud9の画面を見ていますが、それはGCEに接続して作業しているということです。
　話がいったんAWS Cloud9に戻りますが、新規プロジェクト作成時に、ワンクリックで環境設定してくれる、という機能はなくなってしまいました。繰り返しますが、あくまでもIDEです。ですから、SSHで接続した後は、必要なインストール作業を行う必要があります。IDEの中にターミナル機能が統合されている等は旧版と同じですので、そこで以下の作業を行います。
　まず、Cloud9側でPython3を選択します。けど、これは要はIDEの設定であり、環境の設定ではありません。
では、ということで、ここからCode4StartUpのビデオを見ながら環境を作っていこうと思います。
そしていきなり躓きます。「sudo apt-get install python3-venv」ができません。以下失敗なので、簡単に流しますが、python3.4-venvなら成功しますが、ビデオの後の方で3.5であることを確認されますので、やばい、3.5にあげないと、と思います。Cloud9の画面では「/usr/local/lib/python2.7/dist-packages:/usr/local/lib/python3.4/dist-packages:/usr/local/lib/python3.5/dist-packages」と書いてあるのに何でないのだ？と思っていたましたが、これはあくまでもIDEの設定です。環境は別です。
色々調べて、「sudo python -m pip install –upgrade pip」しようとしますが、ないと言われます。色々あって、3.5ではなく最新の3.6でよいやと思い「sudo add-apt-repository ppa:jonathonf/python-3.6」以下・・・（省略）でインストールします、しかし、「python3.6 –version」では3.6インストールが確認できますが、「python3 –version」ではまだ3.4を参照しています。
そこで、pyenvというものの存在に出会い、「curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash」でインストールしようとしますが、gitが入っていない、とのエラー。なんと！そこからですか！
gitインストールしてから再度pyenvインストールして、それでも「pyenv install –list」で表示されないので「sudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils」して、「pyenv install 3.</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ Swift環境</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-swift%E7%92%B0%E5%A2%83/</link><pubDate>Wed, 02 May 2018 02:15:27 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-swift%E7%92%B0%E5%A2%83/</guid><description>Code4Startup
こちらが本題の、UberEatsを作ろう（Create UberEats with Python/Django and Swift 3）。
まずは、環境構築から始まるのですが、Python、Heroku、Atomは使用するしないは良いとして、XcodeはWindows環境だとどうしようもない。
しかし、今の時代、色々な方法はあるようで、Swiftのためだけなら、Xcodeがなくても何とかなるっぽい。
ということで、環境作ってみました。
IBM Swift Sandboxはもう存在しない？ まず、最初に、「IBM Swift Sandbox」というものが気になりましたが、現在はリンク切れです。
ただ、もう少し粘ってみると、IBM Cloud App Service というものに誘導されます。
こちらを登録すると、開発環境も使えるようになるのですが、その言語がSwiftになっています。
（いろいろなタイプが選べますが、一番左上の「プロジェクトの作成」を選ぶとswiftになるのです。）
けど、より簡単なのは、Swift Kituraを選択することのようです。
しかし、いずれにせよ、Swift Sandboxで企図されていたようなものではないようです。その場でソースを書いて実行するのであればよかったのですが、あくまでもローカルでソースを書くのであれば、ちょっと必要性が薄いかなと。
こちらは、いったん中断しておきます。
ローカルにSwift環境を構築 ですので、ローカルに環境を構築することにします。
基本的には、
https://qiita.com/akira_/items/e5550dbb571a20deb3c1
を参考にさせていただきました。
Windows Subsystem for Linux、知りませんでした。
途中再起動等入るのと、これを有効にした後に、Linuxパッケージを導入する、というところに注意です。
Windowsでこんな選択画面を表示する、ということ自体驚きですが、いかがでしょうか。
その後は、インストールされたUbuntuバージョンに合わせて、記述を調整しながら進めれば、環境構築完了し、Hello worldまでは行けました。
なお、元々Git Bashが入っていた環境ですので、バッティング等も気にならないでもないですが、とりあえずどちらも動いています。
（2018年10月）結局MAC購入 Code4StartUp ～ UberEatsを作ろう ～ iMac購入して続行 結局、iOSアプリ作ろうと思ったら買わざるを得ませんでした・・・
 Code4Startup</description></item><item><title>スポンサー企業調査　Ruby X Elixir Conf Taiwan 2018</title><link>https://jqinglong.github.io/programmers-office/%E3%82%B9%E3%83%9D%E3%83%B3%E3%82%B5%E3%83%BC%E4%BC%81%E6%A5%AD%E8%AA%BF%E6%9F%BB%E3%80%80ruby-x-elixir-conf-taiwan-2018/</link><pubDate>Tue, 01 May 2018 05:43:34 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%82%B9%E3%83%9D%E3%83%B3%E3%82%B5%E3%83%BC%E4%BC%81%E6%A5%AD%E8%AA%BF%E6%9F%BB%E3%80%80ruby-x-elixir-conf-taiwan-2018/</guid><description>先日、Ruby X Elixir Conf Taiwan 2018というイベントがあったそうです。
知っていたらGWにかけて台湾行っていた？？かは、さておき、このページの下にあるスポンサー企業一覧に興味を持ちました。
一つ一つ見てみたいと思います。
honestbee https://www.honestbee.tw/
料理や食品の配達サービス。
日本でもサービス展開しています。
honestbee | 買物代行コンシェルジュ
Cyberbiz https://www.cyberbiz.co/
ショップ向け各種サービス提供という感じでしょうか。
このページのさらに下の各社サービスがまた気になりますね。
GANDI.net https://www.gandi.net/
ドメイン名サービス、およびホスティング等のインフラ系サービスですね。
ホスティング、台湾元表示だと思って高いと思ったら、円に変換してくれているとのこと。
https://www.gandi.net/en/simple-hosting
だと安いですね。先日米国サービス等も比較したうえでさくらを申し込みましたが、これは考えもしなかった…
SARA CARES https://www.saracares.com.tw/
オンライン保険。
SHOPLINE https://shopline.tw/
オンラインショップ開設サービス。
思ったより数が多いのでここまでにしておきます。
幅広いですね。全部Rubyで開発しているサービスなのでしょうか？</description></item><item><title>Code4StartUp ～ Landing Pageを作ろう</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-landing-page%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86/</link><pubDate>Tue, 03 Apr 2018 14:44:56 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-landing-page%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86/</guid><description>ちょっと、Noteを使ってみたりもしており、こちらはご無沙汰になりました。
Noteのような厳しい制約の中で書くのもそれはそれでありだと思うのですが、ちょっと厳しすぎる感もあり。
しかも、有償化はそんな簡単な話ではないなと。
ただ、ちゃんと構造化した文書、というものは意識したいなと思います。
Code4StartUpを始めてみる 　実は結構前に始まっているサービスですが、最近知り、今の私に非常にマッチした学習ができそうということで始めることにしました。
登録は無料なのですが、登録すると、時間限定で、プレミアムプロジェクトであるUBER EATSコースが、499ドルから99ドルになるとの表示。あざとい・・・と思いながらぽちりました。なぜならUBER EATSこそが、今回のきっかけだから。
Landing Page作成プロジェクト 　しかし、最初は無料コースから。
無料コースとはいえ、Bootstrapでランディングページを作って公開するところまでやってみよう、というのはなかなかセンスが良いのではと思います。
そして、色々知らないサービスも勉強させてもらえました。
Start Bootstrap
https://startbootstrap.com/
Bootstrapのデザインテンプレート。
日本人向けだとまたちょっと違うかなという気もしますが、今回は日本人向けではないので、そういう意味でも役に立ちます。
Font Awesome
https://fontawesome.com/
講義ビデオの中では、fontawesome.ioになっている。
そして、envelope-opeのページに記載されているリンクも、講義ビデオだとclass=”fa … だけど、現在のページだとclass”fas …
理由はFont Awesomeが4から5にアップグレードされているためでした。
”fa fa-map-marker fa-stack-1x fa-inverse”でアイコンは変更されます。
Chromeの右クリックInspectは日本語版だと検証（Ctrl+Shift+I）。
講義の中で使われている記述”col-md-offset-3”が反応しない。→offset-md-3が正解。
理由はBootstrapが3から4にアップグレードされているため。
MailChimp
https://mailchimp.com/
メール送信サービス
。昔DM送信で苦労した記憶が18年たっても忘れられない身としては、ありがたや。
Wufoo
https://www.wufoo.com/
フォーム作成サービス。今どきはこんな風に実装するんですね。
githubデスクトップ
なかなかgithubを導入しきれませんが、これはちょっと良いかも？後日導入記を書くことになりそう。
Bluehost
海外有料サーバはあまり調べたことがなかったですが、ここが主力っぽいですね。日本だとさくらの位置づけ。ただ、日本のサービスと違い、1ドメイン取得無料は大きいかも。
一通り見てみました。
後は、公開前のセキュリティチェック等があるとよいのではと思いました。
そして、UBER EATSコースに入っていきたいと思います。</description></item><item><title>201801台湾に行きたいわんpart4　追加情報</title><link>https://jqinglong.github.io/programmers-office/201801%E5%8F%B0%E6%B9%BE%E3%81%AB%E8%A1%8C%E3%81%8D%E3%81%9F%E3%81%84%E3%82%8F%E3%82%93part4%E3%80%80%E8%BF%BD%E5%8A%A0%E6%83%85%E5%A0%B1/</link><pubDate>Sat, 24 Feb 2018 13:03:24 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/201801%E5%8F%B0%E6%B9%BE%E3%81%AB%E8%A1%8C%E3%81%8D%E3%81%9F%E3%81%84%E3%82%8F%E3%82%93part4%E3%80%80%E8%BF%BD%E5%8A%A0%E6%83%85%E5%A0%B1/</guid><description>1月の台湾旅行情報のまとめができないまま、1か月以上経過。
レシートを見ながら簡単に振り返ってみると。
今回も、ATMで5000元引き出し。セブンイレブンじゃなくて、空港のATMでやりました。
後日のカード決済額は18,933円＋ATM手数料216円＝19,149円→レート3.8298。またちょっと円安になってますかね。
鼎泰豊のレシートは明細がなくて面白くない。
二人で1,549元は、ちょっと食べすぎですね。きくらげとかホウレンソウとか残しちゃったし。
今回、同行者には、悠遊カード(EASYCARD)ではなく、一卡通(iPASS)を買ってもらいました。単に、違うものを見て見たかったというだけで、他人を実験台に使うという・・・
ほとんど地下鉄でしか使わなかったので、違いも何もなかったのですが、最後に空港の一番奥まで行ったところの自動販売機で悠遊カードしか使えなくて、代わりに買ってあげたということがありました。惜しい！
なお、空港で変わったデザインの悠遊カードがあれば、それでもよかったのですが、ちょっと見当たりませんでした。
時間がたってしまうと、気持ちも平常に戻ってしまうので、あまり面白いことが書けません。
鉄は熱いうちに打てです。
買ってきてからこれを読んでます。軽く読めて、微妙にツボにはまる内容が多いので、個人的にはおすすめです。
台湾で日本を見っけ旅　ガイド本には載らない歴史さんぽ 台湾でさがす なつかしい日本
posted with カエレバ おがたちえ ぶんか社 2016-02-18 Amazon 7net</description></item><item><title>春分の日までにテキスト1冊仕上げよう 2018 に参加</title><link>https://jqinglong.github.io/programmers-office/%E6%98%A5%E5%88%86%E3%81%AE%E6%97%A5%E3%81%BE%E3%81%A7%E3%81%AB%E3%83%86%E3%82%AD%E3%82%B9%E3%83%881%E5%86%8A%E4%BB%95%E4%B8%8A%E3%81%92%E3%82%88%E3%81%86-2018-%E3%81%AB%E5%8F%82%E5%8A%A0/</link><pubDate>Fri, 09 Feb 2018 17:10:47 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E6%98%A5%E5%88%86%E3%81%AE%E6%97%A5%E3%81%BE%E3%81%A7%E3%81%AB%E3%83%86%E3%82%AD%E3%82%B9%E3%83%881%E5%86%8A%E4%BB%95%E4%B8%8A%E3%81%92%E3%82%88%E3%81%86-2018-%E3%81%AB%E5%8F%82%E5%8A%A0/</guid><description>いつもお世話になっております、Mandarin Note様。
こちらで、恒例の「春分の日」企画、「春分の日までにテキスト1冊仕上げよう 2018」が始まりました。
#shunbun2018
ちなみに、昨年はなかったのかな。2016の様子は#shunbun2016。
これまでは、「そうかー」と眺めている（ことすらしていない）だけでしたが、今年は参加してみようと思います。
では、何で参加するか。
本来やるべきは、先日入手した「データベーススペシャリスト合格教本」。
データベーススペシャリスト合格教本（平成30年度） CD-ROM付き [ 金子則彦 ]
posted with カエレバ 楽天市場 Amazon 7net 560ページ。35日で割ると16ページ/日。試験は4月15日（日）なのでそのペースでやらなければいけないのですが、つらい報告を続けることになりそうなので、もう少し軽い素材が良いなと。
インタラクティブ囲碁入門 良い素材を見つけました。
以前（10年前くらい？）から、囲碁に興味はありつつ、勉強することなくここまで来たのですが、今回企画に乗って、囲碁の勉強をしてみたいと思います。
目標は、女酒場放浪記で活躍中の万波奈穂三段に出会うこと！（何か違う・・・）
教材は、インタラクティブ囲碁入門。回数もちょうどよい35回。
これが、なぜ良い素材なのか。
メニューの上に「外国語版」の文字が見えます。そう、中国語版もあるのです。
交互式围棋教程
囲碁の勉強をしながら、中国語の勉強！
学習の進め方 日本語のページを見て、中国語のページを見て、見たページと気になる言葉をtweetする。
そんな感じで進めてみたいと思います。
ちなみに、演習問題がFlashプレーヤーなのが、ちょっと残念。それ用にブラウザ（Puffin）を入れてしまいました。
さあ、頑張っていきましょう～
なんじゃこりゃ
万波奈穂・女流棋士クリアファイル
posted with カエレバ 楽天市場 Amazon 7net</description></item><item><title>USB type-CアダプタでDeX</title><link>https://jqinglong.github.io/programmers-office/usb-type-c%E3%82%A2%E3%83%80%E3%83%97%E3%82%BF%E3%81%A7dex/</link><pubDate>Sun, 04 Feb 2018 12:09:42 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/usb-type-c%E3%82%A2%E3%83%80%E3%83%97%E3%82%BF%E3%81%A7dex/</guid><description>昨日はデータベーススペシャリストの本を買おうと思ったのですが、某森で2017年度版を見つけてしまい、それでいいかと思ってしまいました。色々すみません。
ではポイントで何か他の物を、と考えている中で、この記事が目に留まりました。
https://www.sunmattu.net/smartphone/10511
Note8の更なる活用を目指して、ちょっと投資してみます。
正規のDeX Stationも決して高いというわけでもないように思いますが、ちょっと遊んでみるという金額でもないのは事実。
Galaxy Dex Station 【Galaxy純正 国内正規品】 Galaxy Note8 / S8 S8+対応 EE-MG950TBEGJP
posted with カエレバ by Galaxy 2017-11-01 Amazon 楽天市場 というわけで、上記記事に紹介されている方法を試してみようということで、アダプタを申し込んでみました。
まだ来ていないので、何か面白いことがあったら書いてみようかと思います。
3-in-1 USB 3.1 Type-C →HDMIアダプター USB3.0ハブ Type Cメスチャージアダプター USB3.0 Type C-HDMIマルチ変換アダプタ typec変換アダプター 3ポート 変換アダプター アルミ 頑丈 Type-C 変換アダプター USB変換アダプター hdmi-type-c USBハブ【ゆう】 価格:2,680円
(2018/2/4 21:08時点)
感想(1件) 追記 上記のアダプタではDexモードになりませんでした。</description></item><item><title>データベーススペシャリスト試験</title><link>https://jqinglong.github.io/programmers-office/%E3%83%87%E3%83%BC%E3%82%BF%E3%83%99%E3%83%BC%E3%82%B9%E3%82%B9%E3%83%9A%E3%82%B7%E3%83%A3%E3%83%AA%E3%82%B9%E3%83%88%E8%A9%A6%E9%A8%93/</link><pubDate>Sat, 03 Feb 2018 03:56:42 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%83%87%E3%83%BC%E3%82%BF%E3%83%99%E3%83%BC%E3%82%B9%E3%82%B9%E3%83%9A%E3%82%B7%E3%83%A3%E3%83%AA%E3%82%B9%E3%83%88%E8%A9%A6%E9%A8%93/</guid><description>情報処理技術者試験、平成30年度春期試験は4月15日（日）に実施されます。
今回は、データベーススペシャリスト試験　（DB）を受験しようと思います。
前回PM合格しているので午前免除が使えないかと思ったら有効期間2年ということで、ギリギリアウトでした。
合格したのそんな前だっけ？？という感じですが、2015年でした。
早速本を購入。（どちらかというと期限付きポイントの使い道を考えていたら思いついたという感じ）
下記2冊が売れ筋でしょうか。
平成30年度 データベーススペシャリスト合格教本
posted with カエレバ 金子 則彦 技術評論社 2017-09-14 Amazon 楽天市場 7net 情報処理教科書 データベーススペシャリスト 2018年版
posted with カエレバ 三好 康之 翔泳社 2017-09-12 Amazon 楽天市場 7net 本当は相性もあるので、実物見て決めたいところですが、付録が充実してそうなので合格教本の方にしてみました。KOBOなのでCDはないですけど、ダウンロードとかできるのでしょう。
で、ポチろうと思ったところで、そういえばと、下記を思い出します。
ということで、購入は今晩ですね。</description></item><item><title>Eight続き</title><link>https://jqinglong.github.io/programmers-office/eight%E7%B6%9A%E3%81%8D/</link><pubDate>Thu, 01 Feb 2018 18:27:56 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/eight%E7%B6%9A%E3%81%8D/</guid><description>ルノアールでの登録を一旦断念したEight。
しかし、その時に登録済みの名刺を使って登録する機能の途中まで進んでいたので、会社アドレスに来ていた認証メールをクリックして登録してしまいました。
あぁこの人たちが私を登録してたんですねと、それはまぁ良いのですが、逆に全然関係ない世界中の人たちの名刺が検索できるんですね。
誰かに名刺を渡すと、自分の知らない内に世界中の人達がその名刺を見ることができるようになる。
Eightの個人情報保護法に関するページ
…矛盾してないのかな…
こちらも参考になるかも。
名刺管理の「Eight」、ひそかに進むSNS化と見直しておきたい公開設定</description></item><item><title>ルノアールで名刺アプリEight</title><link>https://jqinglong.github.io/programmers-office/%E3%83%AB%E3%83%8E%E3%82%A2%E3%83%BC%E3%83%AB%E3%81%A7%E5%90%8D%E5%88%BA%E3%82%A2%E3%83%97%E3%83%AAeight/</link><pubDate>Sun, 28 Jan 2018 12:41:13 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%83%AB%E3%83%8E%E3%82%A2%E3%83%BC%E3%83%AB%E3%81%A7%E5%90%8D%E5%88%BA%E3%82%A2%E3%83%97%E3%83%AAeight/</guid><description>ちょっと前にルノアールで名刺アプリEightを使えることを知り、今日試しに来てみました。
まずは、アプリダウンロード。
店先では、Eight scanをダウンロードするようにとのアナウンスがありますが、ダウンロードすると、Eightが必要と言われます。
言われるがままに、Eightをインストールすると、自分の名刺を登録するように言われます。
実は、会社では近々Sansanが使えるようになるようで、今回の目的は、仕事外の活動でいただいた名刺の管理でした。ですので、会社との紐づけはしたくなかったのですが、プライベート用の名刺は持っていないので、Eightにログインすることができず、本日の試みは終了となりました。
そうかー、そうなのかー
ということで他を探すことにします。
Wantedly Peopleなんかがちょっと面白そうですかね。
あとは、昔からEvernoteを名刺管理に使おう、という話はよくあるように思いますが、であれば、Google Keepでもよいのでは、と思ったら、まあ普通に撮影してラベル付ければよいという話ですね。
撮影が面倒なので、ルノアールのスキャナが使えるのが魅力的だったわけではありますが。</description></item><item><title>201801台湾に行きたいわんpart4</title><link>https://jqinglong.github.io/programmers-office/201801%E5%8F%B0%E6%B9%BE%E3%81%AB%E8%A1%8C%E3%81%8D%E3%81%9F%E3%81%84%E3%82%8F%E3%82%93part4/</link><pubDate>Sat, 27 Jan 2018 22:59:06 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/201801%E5%8F%B0%E6%B9%BE%E3%81%AB%E8%A1%8C%E3%81%8D%E3%81%9F%E3%81%84%E3%82%8F%E3%82%93part4/</guid><description>で、先週また台湾に行ってきたわけです。自分の中では4回目。
今回は初台湾の友人に台湾の魅力を感じてもらうべく、普通の観光も交えながら、美味しいものをたらふく食べる計画でした。
結果は・・・
ちょっとずつ書いていきたいと思います。</description></item><item><title>台湾でのwifi</title><link>https://jqinglong.github.io/programmers-office/%E5%8F%B0%E6%B9%BE%E3%81%A7%E3%81%AEwifi/</link><pubDate>Sat, 13 Jan 2018 04:09:00 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E5%8F%B0%E6%B9%BE%E3%81%A7%E3%81%AEwifi/</guid><description>タイガーエアの羽田5:00発、桃園23:50発が気に入り過ぎて、来週も。
先月は、土日の休みをフルに生かすぞ、という感じでしたが、今回は、仕事の後台湾に寄って帰ろう、という感じで金曜夜会社→台湾→日曜朝自宅帰還です。
ところで、これまでの台湾旅行は、一人旅だし、SIMフリーのスマホだし、いざという時は電話かけるのも勉強だし、ということでSIMカードを購入していました。
しかし、来週は二人旅、電話かけることもまずない、ということであれば、通信共有できるwifiルータの方が良いのでは、と思って調べてみました。
巷でよく見る、イモトのwifi。
500MB/日、速度：4Gで、通常価格だと1,280円/日。割引（例えば価格.com）が効いても620円。
まあ、日本で借りると他社でも大体これくらいでしょうか。
そもそも、弾丸ツアーの場合、現地には1日しかいないのに、0泊3日みたいな旅行になってしまうので、3日間借りることになってしまうわけですね。最初から不利です。
では、ということで、台湾の空港受取のサービス。
例えば、FUN WIFI。
http://www.funwifi.jp/order.html
こちらも1日680円。ただし、本当に1日でよいのでよりお得。
しかしながら、ここからが本題で、これらは結構値引き合戦が激しそうなイメージ。そんな中から、見つけたのが、灯台下暗しのタイガーエアの割引チケット。タイガーエアのページから「チケット」で見ると色々なチケットの予約ができるようになっています。
https://event.kkday.com/ja/campaign/tigerairticket
wifiルータはこちら。
https://www.kkday.com/ja/product/3598?cid=2016&amp;amp;ud1=ticketjp
4G通信無制限で、1日297円です。電話番号不要なら空港SIMの3日300NTDの1日当たり金額より安いですね。
そう思って見てみたら、Howto Taiwanでも紹介されていました。さすが。
http://howto-taiwan.com/2454/</description></item><item><title>台湾南部（粗い&amp;hellip;）</title><link>https://jqinglong.github.io/programmers-office/%E5%8F%B0%E6%B9%BE%E5%8D%97%E9%83%A8%EF%BC%88%E7%B2%97%E3%81%84%EF%BC%89/</link><pubDate>Fri, 12 Jan 2018 14:00:39 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E5%8F%B0%E6%B9%BE%E5%8D%97%E9%83%A8%EF%BC%88%E7%B2%97%E3%81%84%EF%BC%89/</guid><description>本投稿で、いったんシリーズ終了。また行くので…
今回の旅行は台湾3回目。前2回は台北に入って高雄から出る形でしたが、その間は（新竹はちょっと行きましたが）すっ飛ばしていました。
今回は、「例の写真」を撮りたい（and 台湾における過去の日本人の活躍をより身近に感じたい）ということで、乌山头を目的地に含めました。
乌山头は普通に調べると、台南から向かうルートが紹介されますが、色々調べていると、嘉義からのルートで行かれている人もいらっしゃいました。
数年前にKANOを観て以来、嘉義も行きたいリストに入っていましたので、欲張って嘉義と台南両方訪問することにします。
嘉義ではやはり噴水ロータリーを見て、鶏飯を食べないとね、ということで、そこからスタート。その鶏飯。元来、こういう感じの鳥は好きですし、こういう感じのご飯は好きですが、表現しようのない最高の美味さ！後で入ったもう一軒の店でも鶏飯を食べ比べましたが、噴水鶏肉飯は格別でした。その後、檜意森活村でKANO撮影の雰囲気を感じて、駅に戻ります。
が、なんと、そこから電車1時間半待ち。そんな都会の電車でもないのですから、ちゃんと電車の時間は把握してから回りましょうということですね。
※ちなみに、改めて電車の時間は確認する必要はあると思いますが、下記の行き方は大いに参考になりますね。
https://www.tripadvisor.jp/ShowUserReviews-g293912-d1633171…
乌山头へは、隆田からタクシーに乗ります。値段は、先に書いたように800元定額制。
運転手さんは、「はったさんが…」と日本語を混ぜながら、基本的には片言英語で説明してくれます。まずは八田与一銅像からスタート。去年破壊行為があった影響か、銅像の周りはテープが張られて近づけなくなっており、同じ格好をして写真を撮るという例の写真は撮れませんでしたが、その他ダムの壮大さを感じたり、解説ビデオで勉強させてもらったり、楽しむことができました。
そして、台南に向かいます。
嘉義、隆田から向かうと、超大都市です。バスの乗り方が分かりません。
最初の目的地は林百貨店。そちらに向かうかなと思われるバスが来たと思われるのですが、乗ってよいかどうか、どうもしっくりこない…
諦めて、タクシーに乗りました。で、これも先に書いた通り、カフェで楽しんで、お土産を買い、林百貨店もちょっと眺めて、食事に向かいます。
目的地は、安平老街。これもちょっと時間がないような気がしましたし、バスはまだ怖かったので、タクシー。しかし、これが遠い遠い。あれ、時間やばいのでは、とビクビクしながら到着。
老街でお目当てのエビ捲きと、以前さほどでもないかなと思った牡蠣卵（蚵仔煎）。これはどちらも美味しく、とりあえず来た甲斐はありました。
ただ、18時くらいですでに閉店モード。あまりゆっくりできず、さらに芋圆だけ食べて帰ります。帰りは、エビ捲き屋さんで聞いた通り、バスで。もしかして悠游卡も使えたかもしれなかったですが、現金で払おうとして、ちょっと手間取って、またビクビク。
さて、台南から、高鐵で桃園に戻ります。
これも目算でこれくらいの時間だったら大丈夫だろう、ということで向かったのですが、まず、指定席は商務席含めて最終便まで満員です。
時間も、思ったよりギリギリかな、と思いながらも、この時点ではまだ時刻表までは調べません。余裕があるふりしてお土産なんぞ買って、乗り込もうとすると、驚くべき超満員。1時間立ちっぱなしか、とがっかりしながら耐えます。
で、一息ついて、車内アナウンスを聞く。え、まずくない？？飛行機は23時50分発。タイガーエアは45分前の搭乗手続き必須。高鐵桃園から空港まで30分弱。この列車の南港到着は…そうだとすると桃園到着は…あまり余裕ないのでは？！
さらに、車内の電光掲示板を見ていると、台中○時、台北○時、南港○時…、え、まさか桃園止まらないやつ？？と、台中駅に到着。いったん降ります。駅の掲示板、遠くて見えない…。そういえば、台南で乗るのを見送っていたお姉さんもいた。次の電車にしよう！
で、時間を確かめると、次の電車は30分後。さらにその次の電車は40分後。えー、このタイミングだけ、この待ち時間？？間に合わないんじゃないの？？そもそも、台南から桃園1時間じゃ着かないじゃん。もし間に合わなかったらどうなるんだろう。明日は会社は半休か。半休で済むのか？もう、ビクビクを越えて、心臓バクバクでした。
結局、22時過ぎに高鐵桃園、22時45分くらいに空港到着で、ギリギリセーフでした。
ご利用は計画的にということで、締まりませんが終了です。
オモロイ台南-台湾の古都でしこたま食ってきました-
posted with カエレバ ヤマサキ タツヤ KADOKAWA / エンターブレイン 2014-07-31 Amazon 楽天市場 7net</description></item><item><title>習慣化リストに「竜馬がゆく」</title><link>https://jqinglong.github.io/programmers-office/%E7%BF%92%E6%85%A3%E5%8C%96%E3%83%AA%E3%82%B9%E3%83%88%E3%81%AB%E3%80%8C%E7%AB%9C%E9%A6%AC%E3%81%8C%E3%82%86%E3%81%8F%E3%80%8D/</link><pubDate>Sat, 06 Jan 2018 01:25:39 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E7%BF%92%E6%85%A3%E5%8C%96%E3%83%AA%E3%82%B9%E3%83%88%E3%81%AB%E3%80%8C%E7%AB%9C%E9%A6%AC%E3%81%8C%E3%82%86%E3%81%8F%E3%80%8D/</guid><description>この年になって、「竜馬がゆく」を読んでいます。
竜馬がゆく (新装版) 文庫 全8巻 完結セット (文春文庫)
posted with カエレバ 司馬 遼太郎 文藝春秋 2012-03-13 Amazon 楽天市場 7net 司馬遼太郎は「坂の上の雲」から入って感動し、「街道をゆく 40 台湾紀行」などは絶品だと思いますが、さらに世間的には評判申し分のない「竜馬がゆく」にやっとたどり着いたという感じです。
ただ、現在3巻目ですが、まだ、盛り上がりには欠けるかな、と思っています。2巻目でちょっと来たかなと思ったのですが、3巻目に至ってもまだあてもなくふらふらしている印象です。
で、こんな状態だと一気に読んでしまうのではなく、地道に読み進めていく形になるのですが、ちょっと油断するとしばらく放置ということにもなります。
そこで、以前書いた
https://www.programmers-office.ml/2017/12/03/%E6%9C%80%E4%BD%8E%E9%99%90%E3%81%AE%E3%83%90%E3%83%AC%E3%83%83%E3%83%88%E3%82%B8%E3%83%A3%E3%83%BC%E3%83%8A%E3%83%AB/
習慣化リストに、「竜馬がゆく」という習慣を登録しています。毎日のチェック時に今日読んだかどうかをチェックすることで、継続のきっかけとしています。
他に登録している習慣は、毎日の習慣として「単語コレクション」（中国語単語学習アプリを使ったか）、「明日の予定」（明日のタスクをバレットしたか（バレットする＝明日のタスクを書きだす（今考えた造語）））、毎週の習慣として「レシート整理」と「フォルダ整理」です。
地道に、地道に。
坂の上の雲 全8巻セット (新装版) (文春文庫)
posted with カエレバ 司馬 遼太郎 文藝春秋 2010-07-15 Amazon 楽天市場 7net 街道をゆく 40 台湾紀行 (朝日文庫)
posted with カエレバ 司馬 遼太郎 朝日新聞出版 2009-05-07 Amazon 楽天市場 7net</description></item><item><title>台湾の色々な値段</title><link>https://jqinglong.github.io/programmers-office/%E5%8F%B0%E6%B9%BE%E3%81%AE%E8%89%B2%E3%80%85%E3%81%AA%E5%80%A4%E6%AE%B5/</link><pubDate>Wed, 03 Jan 2018 04:59:32 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E5%8F%B0%E6%B9%BE%E3%81%AE%E8%89%B2%E3%80%85%E3%81%AA%E5%80%A4%E6%AE%B5/</guid><description>セブンイレブンでキャッシング（100NTDの手数料）
12/16　5000　18793円（3.758）
12/17　2000　7517円（3.758）
（参考）空港両替12/16掲示　0.259（3.861）手数料別？
※今回初めてキャッシングを試しましたが、直接カードで決済するより、キャッシングして現金払いの方が安いという結論？そうなんですね…
桃園空港から台北MRT
160
＜高铁＞
台北-嘉义　自由席
1045　カード：3992円（3.820）
台南-桃园　自由席
1150　カード：4392円（3.819）
乌山头タクシー
800
※日本語の案内の紙が用意されていて定額800元。ネット情報だと700元とかの情報もありましたが、うまいことやってますね。でも、おじいちゃんが中国語・英語・日本語交じりで頑張ってるので、良いと思います。
SIMカード
300
サントスホテル（三徳大飯店）
2100　カード：8242円（3.924）
※今回最高レート。ホテルはカード手数料を多くとっている？
星空（絵本）
499
※意外と高い本だったんですね。紀伊国屋でも2000円でしたっけ？ほとんど変わらないというのは紀伊国屋がすごい。
PC HOME（雑誌）
180
※これも週刊アスキーが360円だとすると若干割高感。
うどん屋最低消費
250
喷水鸡饭（嘉义）
45
カフェ鮭チャーハン
200
芋圆达人（台南）
40
※おしゃれカフェ風の店で書き氷＋芋圓。
台南の小さなお菓子屋のパイナップルケーキ10個×2
360×2
高鐵台南駅のパイナップルケーキ5個入り
270
※これはおしゃれタイプ。多いのは、8個とか10個で360元でしたかね。
その他、タクシーの領収書をもらっていなかったようで、記憶もなくなってしまいました。コンビニの領収書もないな…</description></item><item><title>空港での過ごし方</title><link>https://jqinglong.github.io/programmers-office/%E7%A9%BA%E6%B8%AF%E3%81%A7%E3%81%AE%E9%81%8E%E3%81%94%E3%81%97%E6%96%B9/</link><pubDate>Tue, 02 Jan 2018 01:39:22 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E7%A9%BA%E6%B8%AF%E3%81%A7%E3%81%AE%E9%81%8E%E3%81%94%E3%81%97%E6%96%B9/</guid><description>早朝便発深夜便着ということで、空港の過ごし方は色々考えてはいましたが、思ったよりも快適でした。
当然日によるのだとは思いますが、金曜日でしたが、ベンチも空きがないことはなかったです。そして、羽田空港は電源が豊富。Wi-Fiも飛んでいるので、ネット環境には不自由しませんでした。
ただ、多くのお店は、10:30くらいに閉まり始めるようです。何かお目当てがある場合は、要時間確認、要時間調整です。
ただ、24時間の店も当然あります。駅側から見て向かって右手奥の居酒屋もよさそうでしたし、左手奥のモスバーガーでグダグダするのも悪くないと思われます。並びの吉野家は、私としてはここまで来て牛丼食べなくても、という感じ。
今回選んだのは、さらに並びの、和カフェテリア　Dining 24　羽田食堂。
https://tabelog.com/tokyo/A1315/A131504/13172799/
電源数も多いですし、雰囲気が良いです。軽くジントニックを飲みながら、やる時間がなかったe-Learningをやってましたが（苦）、カレー等食べてもよいかなと思いました。メニューは時間帯により、色々切り替わるようです。結局、帰りの到着後始発までもこちらで過ごしたのですが、トーストのモーニングはドリンク付きで500円という、場所的には破格と言ってもよいのではないでしょうか、これで朝食を済ませて会社に向かいました。
後から入ってみればよかったと思っていますが、喫煙ルームの椅子がよさそうだった気がします。日中どれだけ混んでいるかは分かりませんが、普通にノマドスペースとしても使えそうだなと、そのうち再訪するかもしれません。
何かに使えたらと思ってキットカットを買っていったのですが（結局使わず、今も仏壇に上がっていますが（泣））、セブンイレブンもドン・キホーテも同じ値段でしたね。空港のドンキは割安ではない？？
セブンイレブンと言えば、今回、タイガーエアは旅程表を紙で印刷しておくこと、というのを行きがてら認識し、ネットプリントを初めて使ってみました。
これも便利ですね。世の中色々あるんだなー。
一つ予定外だったこと。行きは、出国エリアにあるトランジットホテルのリフレッシュルームを使用するつもりでした。
https://www.rph-the.co.jp/haneda/refresh/
1時間2000円なら良いかなと。
しかし、行ってみたら満員。みんな1時間で出ないんですかね。使用する場合は予約必須です。逆に、カードラウンジはみんな深夜は閉まっているのかと思いこんでいたのですが、入って正面のラウンジは24時間だったので、そこで寝てました。
帰りは、到着後、コインロッカーから荷物を出して、シャワールームに直行。
http://www.haneda-airport.jp/…/prem…/service/relaxation.html
こちらは30分なので、若干あわただしいのですが、シャワーを浴びたいというニーズに対しては設備的には十分です。ただ、歯ブラシ・髭剃りはないので、それだけ注意（シャンプーはある）。
ちなみに、桃園空港は、非常にあわただしく帰ってきたので、ほとんど滞在時間がないので、どんな過ごし方ができるか不明です。電源はほとんどなさそうでした。
こちらによると、食べるところはあるんですね。
https://www.travel.co.jp/guide/article/11234/
ちなみに、桃園から出発する際の文学之墙という展示は、もう少しじっくり見て見たかったです。
さらにちなみに、概念という単語は、微妙に日本語と違う使われ方をしているなと感じつつ、これまで調べもしなかったのですが、英訳のconceptでしっくりきました。</description></item><item><title>杨丞琳演唱会</title><link>https://jqinglong.github.io/programmers-office/%E6%9D%A8%E4%B8%9E%E7%90%B3%E6%BC%94%E5%94%B1%E4%BC%9A/</link><pubDate>Sat, 30 Dec 2017 12:07:19 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E6%9D%A8%E4%B8%9E%E7%90%B3%E6%BC%94%E5%94%B1%E4%BC%9A/</guid><description>レイニーは大人になったんだな。
そんな前から知っていたわけでもありませんが、自分史上最大のレイニーの魅力を感じるシーンは、下記ドラマの中で歌うワンシーン（特にこのビデオで行くと3分15秒の部分！）なのですが、この可愛さにはまったわけです。
https://youtu.be/e-eMWpFcl88
しかし、今回のコンサート全編を通じて、可愛さではなくて、大人としての魅力をずっと感じていました。もちろん、下に書くように茶目っ気もあるのですが、可愛らしさも持った女性になったのだな、そもそも、昔から影はあるなと思っていて、そこがまた魅力でもあり、杨丞琳がサンディーではなくレイニーになったのは妥当だなと思っていたのですが、それが良い方向で成就したな、というような印象を受けました。
途中のお色直し時間に、レイニー・ヤンが杨丞琳に（逆かも。要は一人二役）インタビューするビデオが流れました。今回のコンサートのテーマが青春なので、懐かし話を思い返す、というような内容ですが、途中「A片は見たことありますか」「まあ、４ in Loveの4人で見ましたよ」とか、「万引きしたことありますか」「ガムを・・・でも、怖くなって返しましたよ」とか、きわどい内容で盛り上げてました。
ただ、冗談的なトークはほとんど聞き取れず、周りが笑っているのに付いていけないのがちょっと残念でした。今後のモチベーションにつなげます。
ゲストは、林宥嘉。最初は分からず、イケメンだなと思ってみていましたが、これは何とかトークの中から認識できました。とりあえず全く知らない人でなくて良かったですが、けど二人はそんなに普段絡んでいるのかな？と思うと、もっと縁のある人が良かったなと思ったり。二人のトークの中で、林宥嘉が「要是能重来 我要选李白」と歌うやり取りがあって、あー李白は本当に流行しているんだなとは思ったのですが、後から調べるとレイニーと李荣浩は付き合っているという話があるんですね。それをステージでいじってしまう、日本ではないなという大胆さ。
曲は、現在千葉テレビでも放映中のドラマ「恋の始まり 夢の終わり（原題：荼蘼　Life Plan A and B）」の主題歌「年輪說」から始まりました。現時点では妥当ですが、もう少しノリが良いのがあればよかったなとも思いました。
曲名分かりませんでしたが、広東語の歌も歌うんだ、と思った曲も。
暧昧は、携帯ライトを照らしながら大合唱。しかし、数日前にライト付ける練習をしていたにもかかわらず、付け方を思い出せず、最後までライト探ししてしまいました。けど、探しながら合唱は完璧にこなしましたよ。
最高に決まったのは、
（レイニー）「次は皆さんも知っている曲…」
（客席）「带我走！」
（レイニー客席を指さして）「没错！」
この時のレイニー、カッコよかった～
今回、蛍光棒は売り切れていて、ダフ屋的な（なんていうんですか）兄ちゃん達から買うのも癪なので買わなかったのですが、客席に横長の紙が置いてあり、それは持って応援するという人たちもいたので、それで我慢しました。他では使えない蛍光棒なので、まあ良いかという感じ。
最後のお色直しで出てきたところが、靴擦れのような感じで足が痛くなったようで、「靴脱いで歌って良いですか？」みたいな。あいさつ回りのような感じで、舞台を小走りで一周するのですが、裸足で走る姿はお茶目でした。イヤリングも途中でメイクさんを呼んで直してもらったり、服も胸元がセクシーすぎて「ビデオの中でも話していましたが、わたしが体の中で一番満足してないのが胸部なので、ちょっと」みたいな話をしていたし、スカートが重すぎてずり落ちるんじゃないかという心配をしてしまうような感じだったし、衣装は香港に向けて見直した方が良いのではないでしょうかね。
最後に、事前募集されていた、みんなの写真を順々に映していくビデオが流れました。
これも、応募はしていたのですが、実は写真の中に名前を書いておかなければいけなかったのですが、名前を書かずに送ったため、映りませんでした。どれくらい応募あったのか分かりませんが、ちゃんと送り直しておけばよかったなぁと思ったり。
また、開演前や途中に、客席をアップで映すことがあり、青春のテーマに合わせて、カップルを狙っていたと思うのですが、映ったカップルが8割がたほっぺにチュッとするという、台湾ってそういうお国柄だったのね、とちょっと意外でした。
紙吹雪のように、この星形の紙（よく見たら発泡スチロール）を大量に降らせたところで、たまたま自分のところに飛び込んできたので持ち帰ったのですが、よく見たらこんな細かい細工が。何に使えるわけでもないですが、ちょっと嬉しかったです。
なんかもっと書いておきたいことが出てきそうですが、ここまで！</description></item><item><title>実践中国語 ○○○さん編</title><link>https://jqinglong.github.io/programmers-office/%E5%AE%9F%E8%B7%B5%E4%B8%AD%E5%9B%BD%E8%AA%9E-%E2%97%8B%E2%97%8B%E2%97%8B%E3%81%95%E3%82%93%E7%B7%A8/</link><pubDate>Sun, 24 Dec 2017 13:08:24 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E5%AE%9F%E8%B7%B5%E4%B8%AD%E5%9B%BD%E8%AA%9E-%E2%97%8B%E2%97%8B%E2%97%8B%E3%81%95%E3%82%93%E7%B7%A8/</guid><description>一人旅で中国語を喋る二つ目の方法は、暇そうなお土産屋さんで、一生懸命商品説明を受ける。
何か一つくらい買っても良いかなと思える店が良いですね。
で、買うものが決まっても色々教えてもらう。教えてもらいながら、世間話も放り込む。
かつてこれがハマったのが（その時は意図したわけではありませんが）、大連のホテルのお土産屋。
色々説明してもらいながら、買うものを決めたのですが、これから出かけるから明日買うね、東軟という会社を見に行こうと思うんだけど、知ってますか？と聞いたら「私その学校に通ってます！」という衝撃の展開。
これは非常に楽しく、またかわいい女子だったので、数年後に大連に行った時も当然そのホテルに行ったのですが、すでにお土産屋さんすらなくなっていたという悲しい結末でした。
くわしくはこちらなど。
これは、今回あまり実践できなかったが、本当は良い方法だと思います。
今回重点的に実践したのは3つ目の方法。
実は、前回訪台時も高雄で○○○カフェには行ったのですが、今回は、○○○うどん屋を訪問してみました。
入店早々に、コミュニケーションの非スムーズさから日本人だとばれましたが、幸い（？）日本語が得意な○○○さんはいないようで、中国語の実践には程よい感じでした。
そもそも○○○さんをやっている時点で、ある程度日本に興味を持ってくれているわけですから、ネタ的にも話しやすい話題になることが多いように思います。
レイニーのコンサートに来たことを話したら、ちょっと引かれたようにも思いましたが、「私はジャニーズが好きです」と展開してくれ、「ジャニーズの誰？」「ヘイセイジャンプ！」「（…分からん）」「あ、でもV6とかTOKIOとかも好きですよ」と、フォローも完璧。惚れそうでした。
さらに、台南でも、大分予定時間から遅れて到着したので、これは現地情報を迅速に収集数る必要があると判断し、タクシーで○○○カフェに直行。
店はなかなかのカオスでした。カウンダーの上を猫が歩き回り（日本ではありえないでしょうね(^_^;)）、カラオケで日本語のアニメソング（と思われるが、もう歌っている人の名前も曲名も聞いたことすらない）を歌う宅男たち。お茶飲み放題、パン食べ放題。
ここで、お菓子のようなお土産で何か良いところありますか？と聞いてみると、隣のバナナマン日村カットの日本語ペラペラ少年（青年？）が、「そこのセブンイレブンの隣のお店が良いと思いますよ。連れて行ってあげますよ」ということで、もう少し○○○さんとも話したかったなと思いつつ、店を後にしたのでした。
（彼は非常に好青年でした。大学で日本語を勉強し、ネットゲームで日本語の名前で色々活動しているようです。という話は、日本語でしました。あちこちで、つたない中国語で勉強させてもらっているので、青年相手にちょっと還元）
台北のうどん屋さんには、お嬢様も来店されていましたし、男子だけでなく、話し相手探しには良いのではと思う次第です。</description></item><item><title>実践中国語 タクシー編</title><link>https://jqinglong.github.io/programmers-office/%E5%AE%9F%E8%B7%B5%E4%B8%AD%E5%9B%BD%E8%AA%9E-%E3%82%BF%E3%82%AF%E3%82%B7%E3%83%BC%E7%B7%A8/</link><pubDate>Thu, 21 Dec 2017 18:39:07 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E5%AE%9F%E8%B7%B5%E4%B8%AD%E5%9B%BD%E8%AA%9E-%E3%82%BF%E3%82%AF%E3%82%B7%E3%83%BC%E7%B7%A8/</guid><description>私の旅行は、のんびりしに行くのではなく、少しでも多くの情報を取り込むための旅行のように思います。
ホテルから駅まで普通に小走りで移動したりします。ひたすら歩き続けます。
なので一人旅でないと、一緒に行く人が困るのではないかと、心配なのです。
しかし、中華圏に旅行する目的は、もう一つ、語学の実践ということもあります。観光自体は一人でも十分楽しめるのですが、向こうに知り合いもいない状態では話し相手がいません。
それでも中国語を喋ろうとしたら、方法は3つしかありません。
一つは、タクシーの運ちゃんと話す。
（ちなみに日本語の「運ちゃん」という言葉が海を渡って使われているそうです。今回本屋さんで眺めた本に書いてました。例えばこちらにも情報があります。
https://ameblo.jp/taiwanchinese/entry-11431235445.html
）
（ちなみに上記の例文にも出てきますが、台湾ではタクシーの表記は計程車で統一されているんですね。出租车より納得感がある感じ。）
以前高雄でタクシーに乗ったときに、二人素晴らしい運ちゃんに出会ったので、今回も嘉義でちょっとだけ話してみました。
しかし、いきなり向こうの問いかけが、さっぱりわからない。
「嘉义站」「ナパン？」「？？？」「ナペン？」「？？？」
もういいみたいな顔をされましたが、ちょっと粘って「ナペン？」「ナペン」を繰り返してると、「！」
「哪边？」「哪边？」
そういうことか（合っているかは分かりませんが）、ということで「我想吃喷水鸡肉饭」「ご飯が食べたいのか？」（箸で何かを食べるしぐさ）とやっと会話になりました。
しかしその後も、「その後は？」「檜意生活村」「？？？」という感じで通じません。と、やおら、運ちゃん、電話をかけ始めました。何やらしゃべってから電話を渡されます。「こちらは観光センターです。」と日本語のお姉さん。困り果てた運ちゃんは、日本語観光センターに電話して助けを求めたのでした。
めでたく行き先が伝わったら「ご飯食べ終わったら、そこを曲がったところにタクシー止まっていると思うから、これを渡せば連れて行ってくれるよ」と紙に行先の住所を書いてくれて渡してくれました。うれしいですね～。ご好意の通り、そこからタクシーに乗っていきました。
けどなぁ嘉義の発音が「ジャヨ」に聞こえるようなのは、訛りすぎでは（と他人のせいにする）。
台南では日本語ペラペラの運ちゃんで、中国語を話す機会なし。
ということで、結局今回は、タクシーの運ちゃんとはあまりしゃべれなかったのでした。
二つ目は、長くなってきたので、いつかに続く…
写真は噴水店の分店ですね。タクシーの中から撮った写真です。</description></item><item><title>台湾西門</title><link>https://jqinglong.github.io/programmers-office/%E5%8F%B0%E6%B9%BE%E8%A5%BF%E9%96%80/</link><pubDate>Wed, 20 Dec 2017 14:54:20 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E5%8F%B0%E6%B9%BE%E8%A5%BF%E9%96%80/</guid><description>海外でたまに「ここ渋谷っぽい」と思うことはないでしょうか。
以前ソウルの新村で そう感じたのですが 、 今回 西門でやはり、渋谷を感じました。
（そういえば、先日渋谷パルコが消えていて、びっくりしました。そんなニュースを知らなかった自分にもびっくり。余談はさておき）
目的地までの道は若者が溢れかえって、どの店もカラフルで、裏路地にも店が詰まっていて、丁寧に見て歩いたら面白いものが見つかるんだろうなと、わくわくする街でした。
その目的地は電脳ビルだったのですが、こちらは、二階は人気のない状態になってましたし、一階も活気まではなかったかなという印象でした。台北における電脳街は忠孝新生だと思いますが、そちらは２回行ったことがあるので、今回はこちらにしたのでしたが、まぁまぁという感じ。
ここでのめっけもの情報としては、htcオフィシャルショップがあり、店頭テレビで流れている宣伝映像に五月天（メイデイ）が出ていたこと。最新高級スマホu11+のキャンペーンボーイズになっているのでした。（代言人の和訳は何が良いのですかね）
されば、ということで、パンフレット探しをしたのですが、見つかりませんでした。
その後西門以外でも看板を見つけては店に入ってみたのですが、ついぞ見つからず。ネットで探してみても見当たらないので、そもそもパンフレットは出していないのか、みんな持っていっちゃうから目につく所に出してないのか？
ただ、忠孝新生には、htcカフェがあるのです。今回西門に行く前の予定に入れていたのですが、時間の都合でやめてしまい、直接西門に行ってしまったのですが、もしかしたらそっちにはあったのではないか、とちょっと後悔しています。
年末年始のメイデイのライブに行かれる皆さんは、ちょっと気にしてみても良いかも。お店自体も電脳好きなら楽しそうなので。
（ただ、看板には芸能人を使うけど、パンフレットにはあまり使わないものですかね？何となくそんな気もしないでもないですね。日本でも、富士通なら南野陽子とか、NECなら斉藤由貴とか、看板とか販促グッズにはガンガン使われてたと思いますけど、パンフレットにはあまり写真は使われてなかった気もしますね。っていつの時代だ）
だんだん西門に関係なくなってきたので、終了。</description></item><item><title>エクストリーム台湾</title><link>https://jqinglong.github.io/programmers-office/%E3%82%A8%E3%82%AF%E3%82%B9%E3%83%88%E3%83%AA%E3%83%BC%E3%83%A0%E5%8F%B0%E6%B9%BE/</link><pubDate>Mon, 18 Dec 2017 15:24:07 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%82%A8%E3%82%AF%E3%82%B9%E3%83%88%E3%83%AA%E3%83%BC%E3%83%A0%E5%8F%B0%E6%B9%BE/</guid><description>弾丸ツアーを超えて、エクストリーム旅行と呼んだりもするようですが、今回1泊4日旅行にチャレンジしてきました。
もともとは会社の同僚と台湾土曜日日帰り旅行にトライしようとしたのですが、そのタイミングで杨丞琳（レイニー・ヤン）のコンサートが発表され、土曜日にやってくれるなんてこんなチャンスめったにないと思ってしまい、予定変更して一人旅となりました。
もともとの日帰り旅も若干欲張り気味の予定を組んでいたのですが、一人ならさらに無理ができるかも、ということで、以前から興味があった乌山头にも行ってみよう、ということでルートを考えました。
弾丸ツアー・エクストリーム旅行のアドバイスとして、やりたいことを絞って、ということが良く言われているようですが、貧乏性の私としては、いかに詰め込むかの方に喜びを感じてしまいます。
今回も、これまでに貯めてきた台湾でやりたい・行きたいリストを見ながら、可能な限り盛り込んでみました。
最後は心臓飛び出るくらいドキドキしていたのですが、そんなこんなも次回に生かすために、ちょっとずつメモを残しておきたいと思います。</description></item><item><title>弾丸ツアーの準備</title><link>https://jqinglong.github.io/programmers-office/%E5%BC%BE%E4%B8%B8%E3%83%84%E3%82%A2%E3%83%BC%E3%81%AE%E6%BA%96%E5%82%99/</link><pubDate>Thu, 14 Dec 2017 13:31:46 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E5%BC%BE%E4%B8%B8%E3%83%84%E3%82%A2%E3%83%BC%E3%81%AE%E6%BA%96%E5%82%99/</guid><description>こんな記事はあちこちにありますが、一応私なりの集約ということで。
まず、月曜日用の袋を用意します。
これに、出勤用シャツ、シャツ、パンツ、靴下を入れておきます。
出発前にシャワーを浴びて着替えたら、この袋、社員証、スーツをコインロッカーに預けます。
もう一つの袋に、土日のシャツ、ズボン、下着類×2、タオル、歯磨きセット。
上着は、金曜月曜もジャケットにして、それをそのまま着てようかとも思ったのですが、今の時期だとコートがあるから、コートを着てようと思います。19度とかって、コートいらなそうだけど・・・いらないね。やはり、コートをロッカーに置いて、ジャケットにしよう。
雨の予報だ…悲しい。
あとは、パスポート、前回の残りのお金、カード類なども忘れないように。
これまでは、財布の中身の差し替えをしていましたが、財布をもう一つ持っていくことにしました。
さらに忘れてはならないのは、チケット等持っている場合はそれ。何のために行くんだとならないように。</description></item><item><title>中国語翻訳勉強会</title><link>https://jqinglong.github.io/programmers-office/%E4%B8%AD%E5%9B%BD%E8%AA%9E%E7%BF%BB%E8%A8%B3%E5%8B%89%E5%BC%B7%E4%BC%9A/</link><pubDate>Sun, 10 Dec 2017 07:39:09 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E4%B8%AD%E5%9B%BD%E8%AA%9E%E7%BF%BB%E8%A8%B3%E5%8B%89%E5%BC%B7%E4%BC%9A/</guid><description>個人的にお気に入りのサイト、Mandarin Noteで、中国語翻訳勉強会の企画が行われています。
第一回に続いて第二回も応募してみました。
文章は程よい長さで、難しすぎず、けど知らない言い回しがちょくちょく出てきて、非常に勉強になります。
いつまで続けるかが重要ですが、頑張ります～
「箇条書き手帳」でうまくいく はじめてのバレットジャーナル
posted with カエレバ Marie ディスカヴァー・トゥエンティワン 2017-10-13 Amazon 楽天市場 7net</description></item><item><title>レイニー・ヤン　コンサートは来週だ</title><link>https://jqinglong.github.io/programmers-office/%E3%83%AC%E3%82%A4%E3%83%8B%E3%83%BC%E3%83%BB%E3%83%A4%E3%83%B3%E3%80%80%E3%82%B3%E3%83%B3%E3%82%B5%E3%83%BC%E3%83%88%E3%81%AF%E6%9D%A5%E9%80%B1%E3%81%A0/</link><pubDate>Sat, 09 Dec 2017 07:22:46 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%83%AC%E3%82%A4%E3%83%8B%E3%83%BC%E3%83%BB%E3%83%A4%E3%83%B3%E3%80%80%E3%82%B3%E3%83%B3%E3%82%B5%E3%83%BC%E3%83%88%E3%81%AF%E6%9D%A5%E9%80%B1%E3%81%A0/</guid><description>バタバタしているうちに、来週となりました。
予定をおさらい
・髪を切る。当然シャンプーもしてもらいます。
・おしゃれ本屋：誠品敦南店
・HTCカフェに行くか、他を優先するかはもう少し悩んでみる
・メイドうどん屋：楓潾軒　今回のキーポイントになるはず
・コンサート
・台南日帰り
台南の予定はもう少し考えておいた方が良いかも</description></item><item><title>現在落語論</title><link>https://jqinglong.github.io/programmers-office/%E7%8F%BE%E5%9C%A8%E8%90%BD%E8%AA%9E%E8%AB%96/</link><pubDate>Tue, 05 Dec 2017 14:31:30 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E7%8F%BE%E5%9C%A8%E8%90%BD%E8%AA%9E%E8%AB%96/</guid><description>他の本も並行して読んでいるのですが、これは特に一気に読んでしまいました。
現在落語論
posted with カエレバ 立川 吉笑 毎日新聞出版 2015-12-17 Amazon 楽天市場 7net 吉笑さん、最初に見たのは現代舞台の新作で、そういう感じなのかなと思いつつ、この本を書いているということで気になっていて、先日も見に行ったら、入りは古典で実は違うという「舌打たず」。
そしてこの本を読むと、舌打たずもほぼ全面的に解説されていて、擬古典が主戦場だと知りました。
キーワードを挙げると
・落語ならではの表現、強み
・何を伝えたいのか
・シャブ浜改
・伏線回収
今たまたま録画でM-1を見ていましたが、吉笑さんのスタンスに一番近いのは和牛でしょうね。
1本目の伏線回収は美しいですし、メッセージも含んでいますね。
そうですよ。ただ笑わせるだけではなくて、伝えたいことを伝えるために笑わせるんじゃないでしょうかね。
先日私も試して、まあまあ成功しましたが、伏線回収パターンは笑えるし効くと思います。
一度志の輔さんも見に行きたいなぁ。
そして、自分でもやりたい病にもかかっています。</description></item><item><title>最低限のバレットジャーナル</title><link>https://jqinglong.github.io/programmers-office/%E6%9C%80%E4%BD%8E%E9%99%90%E3%81%AE%E3%83%90%E3%83%AC%E3%83%83%E3%83%88%E3%82%B8%E3%83%A3%E3%83%BC%E3%83%8A%E3%83%AB/</link><pubDate>Sun, 03 Dec 2017 06:06:07 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E6%9C%80%E4%BD%8E%E9%99%90%E3%81%AE%E3%83%90%E3%83%AC%E3%83%83%E3%83%88%E3%82%B8%E3%83%A3%E3%83%BC%E3%83%8A%E3%83%AB/</guid><description>もともと興味はあったわけで、さらに本に後押しされましたので、自分なりでやってみます。
「箇条書き手帳」でうまくいく はじめてのバレットジャーナル
posted with カエレバ Marie ディスカヴァー・トゥエンティワン 2017-10-13 Amazon 楽天市場 7net 私の場合、本当に面倒なことはできないので、本の内容からさらに色々省略したバージョンでやってます
まず、私は、マンスリー手帳と、ノートを、ノートカバーに挟んでいます。
毎月のカレンダーを手書きするのは面倒ですので、それくらいはきれいな手帳を買います。
ノートは、ルーズリーフバインダーを使っています。任意のタイミングで過去分を映して、新しい紙を追加していけるので、便利だねと思いながらかれこれ2年ちょっとやってるかなと思います。バインダーはリング部分だけの細いものを使っており、これでギリギリノートカバーに挟まる感じです。
こちらも参照。
で、本題。本当に最低限やらなければならない、というかこれをやりたいから興味を持ったわけですが、その日のタスクの整理を毎日行います。
まず、ノートの最初にキー一覧を書いておきます。これは、1回やれば一生使えるので、面倒がらずにやっておきます。
こちらの真似です。
http://mandarinnote.com/archives/5270
それを見ながら、その日のタスクを書きだします。これは毎朝が標準かもしれませんが、私は前の日の晩にしました。朝は何かと忙しくなることもあるためです。
そうしてタスクを洗い出すと、とても1日では収まりきらないタスクが出てきましたので、明日以降のタスクを保管しておく場所が必要です。
これは、マンスリー手帳のノート欄にToDoとして書いておきます。
そして、毎日のタスク整理時に、ToDoからその日のタスクを決めます。逆に、その日終わらなかったタスクは、翌日に回すか、ToDoに戻すかします。ToDoに戻すために、キーを一つ追加しました。
←：Return To ToDo
基本的には以上です。
ただ、本を読んで、「習慣化リスト」というものが気になりました。
調べてみるとスマホアプリもいろいろ出てますので、一つ入れてみました。
そして、その習慣化対象として、「明日の予定」を登録し、23時にアラームセットしました。
とりあえず、できないタスクは続出ですが、自分の行動ガイドとしての役割は果たしてくれているので、続けてみたいと思います。</description></item><item><title>我的少女时代</title><link>https://jqinglong.github.io/programmers-office/%E6%88%91%E7%9A%84%E5%B0%91%E5%A5%B3%E6%97%B6%E4%BB%A3/</link><pubDate>Sat, 25 Nov 2017 15:28:30 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E6%88%91%E7%9A%84%E5%B0%91%E5%A5%B3%E6%97%B6%E4%BB%A3/</guid><description>本日、我的少女时代の日本語字幕版「私の少女時代」を見てきました。
http://maru-movie.com/ourtimes.html
この映画、30代40代の中国語学習者は、必見だと思います。
まず、時代にのめりこめます。40くらいの女性の回想という設定ですが、
・ビーバップハイスクール的な不良少年
・内田有紀、酒井法子
・ポケベル世代
・卒業ノート（私の時代はサイン帳と言っていましたが）
・缶ペンにアイドル写真（缶ペンという言葉は今生きているのでしょうか？？）
といったシーンになごまされます。
（思い出したら追記していきます）
・ローラースケート
・MCハマー
・カセットテープ、ラジカセ
中国語も、私はまだまだですが、かなり聞き取れる言葉が多いように思います。
細かく聞いていると、「あー、こう言うんだ」という表現もいろいろあると思います。
例えば
・誕生日を聞かれて「四月十九」（号は付けないんだ）
・・・もっといろいろありましたが忘れました。
（思い出したら追記していきます）
・双木的林
そして、何より、ストーリーが素直に感動できる。
途中で主人公二人が共に変化を起こします。そして二人の関係に変化が生まれます。
分かりやすい流れと言えばそうですが、切なさを感じることができると思います。
最後の結末は、「えっ」という驚きがあります。
本当に、見た人みんなが大切に思える映画ではないかと思います。
—
だからこそ、ちょっと怒りを表したいと思います。
今日の観客数は5人でした。土曜日の夜に5人！
台湾映画は決してメジャー路線ではないと思いますし、頑張ってもどうしようもないこともあるとは思います。
しかし、努力のかけらもないのではないか。
この文章の先頭に張ったリンク先が公式サイト、見てみると、1年前の情報か？という古さです。
今吉祥寺で上映しているという情報はそう簡単にたどり着けません。
たどり着くページはこちらです。
https://www.cocomaru.net/
私が見に行った11月25日も、今これを書いている11月26日も、スケジュールが2か所に書いてあって、それぞれの時間が合っていません。11月26日なんか、片方は予定がないことになっているので、このページだけ見てたら怖くて行こうと思えません。
映画の仕組みはよくわかっていませんが、配給会社が一社に決まっていて、他の会社が勝手に上映できないのならば、配給会社が全力でサポートすべきではないでしょうか。わざわざ売れないようにするために放置しているような気すらします。
良い映画だけに、何とかしてほしいと切に願います。</description></item><item><title>アンキスナップ</title><link>https://jqinglong.github.io/programmers-office/%E3%82%A2%E3%83%B3%E3%82%AD%E3%82%B9%E3%83%8A%E3%83%83%E3%83%97/</link><pubDate>Thu, 23 Nov 2017 05:33:59 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%82%A2%E3%83%B3%E3%82%AD%E3%82%B9%E3%83%8A%E3%83%83%E3%83%97/</guid><description>http://ankibungu.jp/#anki-detail
手帳を買いに、久しぶりに文具売り場へ行って見つけたツール。
1本200円弱のペンをどれだけ売ればアプリ開発費が賄えるのか分かりませんが、面白い取り組みではありますね。
ちょっと使ってみましたが、カメラがスマホのカメラの性能ではなく、アプリの読み取り能力に依存するようで、あまり広い範囲はきれいに撮れません。
B5のノートに一杯に書いてしまうと、ちょっと写真がぼけます。
下記のように、幅を狭めに書くと、何とかという感じです。
線を引きましたが、もう一行少なかったら鮮明に撮れます。
専用ノートも買ってねということでしょうかね。
ぺんてる スマート単語帳 12行 ネイビー エナージェル3色ペン セット AMZ-SMS3-C
posted with カエレバ ぺんてる Amazon 楽天市場</description></item><item><title>2018年の手帳</title><link>https://jqinglong.github.io/programmers-office/2018%E5%B9%B4%E3%81%AE%E6%89%8B%E5%B8%B3/</link><pubDate>Thu, 23 Nov 2017 03:55:16 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/2018%E5%B9%B4%E3%81%AE%E6%89%8B%E5%B8%B3/</guid><description>以前は、毎年いろいろ変えながら楽しんでいましたが、最近は、手帳として買うのは、月間ダイアリーだけです。
ナカバヤシ ロジカルダイアリー 手帳 2018年 1月始まり 月間ノートタイプ B5 エアメール NS-B502-18AS2
posted with カエレバ ナカバヤシ Amazon 楽天市場 ちょっとブログ映えしそうな「エアメール」の画像を貼りましたが、無地物もあり、去年は黄色、2017年はオレンジを使っていました。2018年はチェック柄にしましたが、ちょっとかわいすぎたかも。で、エアメールの画像がB5しかなかったのでB5のリンクになっていますが、私が使っているのはA5のもう一回り小さいものです。
これを、ノートカバーに挟んでいます。
コクヨ カバーノート システミック リングノート対応 黒 B5 B罫 40枚 ノ-683B-D
posted with カエレバ コクヨ(KOKUYO) 2010-10-25 Amazon 楽天市場 この中に、ノートと月間ダイアリーを入れておくという形です。
単純に、毎年使わなかった週間ダイアリーとノート部分を捨てることになるという罪悪感が薄れる（月間ダイアリーにもノート部分はあるので、なくなりはしませんが）のと、逆にノートは使いたい放題ということで、正直、なんでみんなこれにしないのだろうと思うくらいです。まあ、1～2時間単位で予定を書く必要があるという人は週間ダイアリーが必要かもしれませんが、1日4つくらいのスケジュールでよいなら月間＋スマホで十分かなと思います。
そして、これにタスク管理機能を持たせればさらに最高だと思っています。飽きっぽいので、やっては辞めを繰り返していますが、一度ちゃんとやってみようかなとも思っています。
「箇条書き手帳」でうまくいく はじめてのバレットジャーナル
posted with カエレバ Marie ディスカヴァー・トゥエンティワン 2017-10-13 Amazon 楽天市場 7net なんか、いい感じに（逆）アフィリエイトブログっぽくなってきたので、ここまでにしておきます。</description></item><item><title>NFC怖くない？</title><link>https://jqinglong.github.io/programmers-office/nfc%E6%80%96%E3%81%8F%E3%81%AA%E3%81%84%EF%BC%9F/</link><pubDate>Tue, 21 Nov 2017 12:24:21 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/nfc%E6%80%96%E3%81%8F%E3%81%AA%E3%81%84%EF%BC%9F/</guid><description>Note8がNFC対応なので、何か面白いことができないかと思い、「全国の ICカード これひとつ」というアプリを入れてみました。
https://play.google.com/store/apps/details?id=jp.co.mirai_ii.nfc.allinone&amp;amp;hl=ja
これがすごくて、SUICAを近づけると、履歴を読み取って、どこで乗り降りしたとか、何円使ったとかが表示されます。
カードの登録等不要です。いきなり読み取られます。
私は独り者なので便利なだけですが、世のお父さんたち、いきなり奥様にSUICAを読み取られて、「なんでこんなに御徒町行っているの？」みたいなことが起きると思うと、ちょっと怖くないですか？？
Samsung サムスン Galaxy Note 8 SM-N950 (N950FD) Dual SIM 64GB 6.3&amp;#8243; 日本語対応 SIMフリー 並行輸入品 (Black ブラック )
posted with カエレバ Samsung Amazon 楽天市場 7net</description></item><item><title>聴力強化教材</title><link>https://jqinglong.github.io/programmers-office/%E8%81%B4%E5%8A%9B%E5%BC%B7%E5%8C%96%E6%95%99%E6%9D%90/</link><pubDate>Mon, 20 Nov 2017 12:45:14 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E8%81%B4%E5%8A%9B%E5%BC%B7%E5%8C%96%E6%95%99%E6%9D%90/</guid><description>こういうのが良いと思います。題材も興味のあるITビジネス系だし、苦手な数字もいっぱい入っているし。
双十一再创世界纪录
https://bitex-cn.com/?m=Material&amp;amp;a=newshearingdetail&amp;amp;newshearingid=1449
近辺で他に良さそうなもの
苹果为中国用户将操作系统内英文改成为中文
https://bitex-cn.com/?m=Material&amp;amp;a=newshearingdetail&amp;amp;newshearingid=1447
华为手机市场份额终超苹果
https://bitex-cn.com/?m=Material&amp;amp;a=newshearingdetail&amp;amp;newshearingid=1443
一只猫成腾讯员工
https://bitex-cn.com/?m=Material&amp;amp;a=newshearingdetail&amp;amp;newshearingid=1432
阿里巴巴2018年推出“日本版支付宝”
https://bitex-cn.com/?m=Material&amp;amp;a=newshearingdetail&amp;amp;newshearingid=1427
YUNOS已成为第三大手机系统
https://bitex-cn.com/?m=Material&amp;amp;a=newshearingdetail&amp;amp;newshearingid=1410
結構ありますね…
つたわる中国語文法 前置詞・副詞・接続詞を総復習
posted with カエレバ 林松濤 東方書店 2017-06-01 Amazon 楽天市場 7net</description></item><item><title>カラオケアプリと課金モデル</title><link>https://jqinglong.github.io/programmers-office/%E3%82%AB%E3%83%A9%E3%82%AA%E3%82%B1%E3%82%A2%E3%83%97%E3%83%AA%E3%81%A8%E8%AA%B2%E9%87%91%E3%83%A2%E3%83%87%E3%83%AB/</link><pubDate>Sat, 18 Nov 2017 12:25:36 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%82%AB%E3%83%A9%E3%82%AA%E3%82%B1%E3%82%A2%E3%83%97%E3%83%AA%E3%81%A8%E8%AA%B2%E9%87%91%E3%83%A2%E3%83%87%E3%83%AB/</guid><description>これまでは、カラオケアプリは「天籁K歌」を使ってきました。
これの良いところは、中国語の歌が豊富だったのと、アプリ内のカラオケ部屋でみんなでチャットしながら歌うことができる、というところで、それでほめてもらえたりするとまた歌いたいと思う、というようなものでした。
しかし、曲がちょっと減ってきているように感じられた（まあ、権利関係はグレーそのものですので）ので、ちょっと別を探してみて、現在、「Smule Sing!」を使ってみています。
私が感じた特徴は、
・日本の特に私の世代の曲も豊富
・中国語もみんなが知っていそうな曲はそろっている
・基本デュエット方式になりますが、相手が必ずしも完璧ではない反面、ほぼ確実にほめてもらえるという意味で楽しい
・というか、本来歌はみんなで歌うものではないか、という楽しさがある
という感じです。
そして、「天籁K歌」はほぼ課金要素がなかったわけですが、こちらはガンガン課金を進められ、しかも、ちょっと課金しようかなと思わせるものがあります。
その要因は何かと考えてみると
・この歌があるのに課金しないと歌えないという、もう少しで手が届きそうな感じを醸し出している
・自分が歌った曲がストックされているのに、課金しないと5曲しか公開されないという、ここでも醸し出されるもう少し感
・人の歌に乗りかかってばかりだとちょっと自由が縛られているという、もう少し公開したい感
という、うまくちょっとだけ制限しているというところかなと思います。
もうすこし悩んでみますが、うまいなと思いましたので、お知らせしておきます。</description></item><item><title>HSK6級に向けた聴力強化法</title><link>https://jqinglong.github.io/programmers-office/hsk6%E7%B4%9A%E3%81%AB%E5%90%91%E3%81%91%E3%81%9F%E8%81%B4%E5%8A%9B%E5%BC%B7%E5%8C%96%E6%B3%95/</link><pubDate>Sat, 18 Nov 2017 05:11:16 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/hsk6%E7%B4%9A%E3%81%AB%E5%90%91%E3%81%91%E3%81%9F%E8%81%B4%E5%8A%9B%E5%BC%B7%E5%8C%96%E6%B3%95/</guid><description>聴力強化に効果がある学習は、ディクテーションやシャドーイング等というのは何となく賛成できます。
また、中国語でいうと、教材として「聴読中国語」は有名だと思います。私も持っています。
以前カフェレッスンを受けてた時に教科書として使用していました。
（あの先生よかったな…）
しかし、これに限らずだと思うのですが、内容が無難すぎて、そこまで興味を惹かれないです。
勉強として読むのは割り切るしかないと思いつつ、やる気が出てこない、という悲しさがあります。
ということで、教材集めをしてみます。
興味の対象は、
・IT
・観光
・芸能
辺りかなということで、その辺を探してみたいと思います。
马云最新演讲；在你迷忙的时候，看完这7分钟
https://www.youtube.com/watch?v=tPbzPqOFwSI
さらっと聞いてみましたが、あまりIT的ではないようですが、逆に今どきの普通の講演と考えるとよいかなと。
20131004《开讲啦》五月天阿信：当我和世界不一样（完整版)
https://www.youtube.com/watch?v=7vtJBL-0fXk
テキストに書き出しながら途中まで聞きました。
五迷なら飽きないですよね。
楊丞琳Rainie Yang – 忘了 Forgotten ( HD互動式占卜MV)
https://youtu.be/4prGDD-iF30?t=240
ここからリンクしている各占い結果を聞いてみたいです。</description></item><item><title>HSK5級</title><link>https://jqinglong.github.io/programmers-office/hsk5%E7%B4%9A/</link><pubDate>Thu, 16 Nov 2017 13:52:19 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/hsk5%E7%B4%9A/</guid><description>2017年10月15日のHSKの試験結果が公開されています。
阅读はまずまずですね。
听力は正直、どうすればよいのかわかりません。
まずは、ちゃんとやる必要があるのは間違いないですが、ちゃんとやれば上達するのかが良く分からないです。
ずっと学習を継続してこの程度の成績が維持できれば、まあ、一人で行っても何とかなるくらいはキープできますかね。</description></item><item><title>杨丞琳 写真募集する</title><link>https://jqinglong.github.io/programmers-office/%E6%9D%A8%E4%B8%9E%E7%90%B3-%E5%86%99%E7%9C%9F%E5%8B%9F%E9%9B%86%E3%81%99%E3%82%8B/</link><pubDate>Sat, 11 Nov 2017 00:43:09 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E6%9D%A8%E4%B8%9E%E7%90%B3-%E5%86%99%E7%9C%9F%E5%8B%9F%E9%9B%86%E3%81%99%E3%82%8B/</guid><description>レイニーの日本語オフィシャルブログ
https://ameblo.jp/rainiesunnyday/
気付いたら2月から更新されていない。
再び日本でのファンミーティングなんて、もうないのかな…
まあ、こっちから行くからよいです。
Facebookページで、下記のように写真が募集されています。
誰かちゃんと訳す人いないかな…
小編：
想住進丞琳的青春嗎?
快把你/妳個人的簽名照email給小編吧~
照片規格如下：
1.清晰不要有套效果的照片
2.直式照片
3.記得在照片正面簽上你的名字（暱稱也可以喔）
4.電子檔畫素-1920*1080
5.檔案不要小於 1MB
有來『2017楊丞琳青春住了誰演唱會』的朋友也請在信件中告訴小編你搶到哪一天的票
快把簽名照Email到以下信箱吧：youthlieswithin2017@gmail.com
—
編集部：
レイニーの青春に住み込みたいですか？
すぐにあなた個人の名前を写真で編集部まで送ってくださいね。
写真の規格は以下の通りです：
1.明瞭で効果をかけたりしていない写真
2.縦長写真
3.写真正面に名前をサインしてください（ニックネームでもよいですよ）
4.画素数1920*1080
5.ファイルは1MBより小さくならないように
『2017楊丞琳青春住了誰演唱會』に来る皆さんはメールで編集部にどの日のチケットを買ったかも教えてください
さあ、以下のメールアドレスにサイン写真を送ってください：youthlieswithin2017@gmail.com
—
調べた単語
小编：媒体编辑
编辑：編集員
住进：住み込み
暱稱：昵秤
昵秤：ニックネーム
档案：文書、ファイル
于（於）：（書き言葉に用い，〔形容詞＋‘于…’〕または‘相当于…’‘等于…’‘区别于…’の形で比較の対象・基準を示し）…より，…に</description></item><item><title>互動式MV</title><link>https://jqinglong.github.io/programmers-office/%E4%BA%92%E5%8B%95%E5%BC%8Fmv/</link><pubDate>Wed, 08 Nov 2017 13:53:46 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E4%BA%92%E5%8B%95%E5%BC%8Fmv/</guid><description>杨丞琳祭りを続けます。
MVが美しくも強烈な「天使之翼」。
https://www.youtube.com/watch?v=aznNagothXs
そういえば、これも曲の後にレイニーのトークが入っていて、4つのシーンが紹介されています。
そして、やはり気づいていませんでしたが、タイトルに「HD互動式MV」の記述。
それぞれのシーンの部分をクリックすると続きの映像が見られます。
ではということで、「互動式」でYoutube検索してみると、それなりに出てきますし、Google検索すると、宇宙人などがヒットしますね。
中華系以外は？
日本語ではこの仕組みは「アノテーション」というようですね。けどその実例はあまり見つからない。
ないのかな…</description></item><item><title>楊丞琳Rainie Yang 忘了</title><link>https://jqinglong.github.io/programmers-office/%E6%A5%8A%E4%B8%9E%E7%90%B3rainie-yang-%E5%BF%98%E4%BA%86/</link><pubDate>Tue, 07 Nov 2017 12:37:50 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E6%A5%8A%E4%B8%9E%E7%90%B3rainie-yang-%E5%BF%98%E4%BA%86/</guid><description>コンサートに向けて、自分の中でもいろいろ盛り上がっていきたいと思います。
さて、「忘了」という曲。
https://www.youtube.com/watch?v=4prGDD-iF30
ビデオの世界観が面白いなと思うのですが、タイトルを見ると「互動式占卜MV」という記述が付いています。
今まで気にしていなかったのですが、最後の画像が長いなとは思っていました。
これが実は、それぞれをクリックすると占いビデオにリンクしているのですね。
Youtubeビデオでこんなことできるんですね。
是非、占ってみましょう～</description></item><item><title>杨丞琳コンサート《青春住了谁》</title><link>https://jqinglong.github.io/programmers-office/%E6%9D%A8%E4%B8%9E%E7%90%B3%E3%82%B3%E3%83%B3%E3%82%B5%E3%83%BC%E3%83%88%E3%80%8A%E9%9D%92%E6%98%A5%E4%BD%8F%E4%BA%86%E8%B0%81%E3%80%8B/</link><pubDate>Tue, 07 Nov 2017 12:15:39 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E6%9D%A8%E4%B8%9E%E7%90%B3%E3%82%B3%E3%83%B3%E3%82%B5%E3%83%BC%E3%83%88%E3%80%8A%E9%9D%92%E6%98%A5%E4%BD%8F%E4%BA%86%E8%B0%81%E3%80%8B/</guid><description>杨丞琳 Rainie Yang のコンサートが2017年12月16日、17日に台北で開催されます。
https://www.youtube.com/watch?v=9A3Ym8ersKI
このページもしばらく更新して、日本から参戦する人を集めてみようかと思います。
https://twitter.com/yohyohchan/status/911472910321070080
https://twitter.com/sytk_exbear/status/914058465584336897
（2018/5/25追加）
楊丞琳 青春住了誰 台北コンサート🎶 もちろん私も参戦ですよ。
 </description></item><item><title>チャイナフェスティバル２０１７</title><link>https://jqinglong.github.io/programmers-office/%E3%83%81%E3%83%A3%E3%82%A4%E3%83%8A%E3%83%95%E3%82%A7%E3%82%B9%E3%83%86%E3%82%A3%E3%83%90%E3%83%AB%EF%BC%92%EF%BC%90%EF%BC%91%EF%BC%97/</link><pubDate>Fri, 03 Nov 2017 23:06:58 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%83%81%E3%83%A3%E3%82%A4%E3%83%8A%E3%83%95%E3%82%A7%E3%82%B9%E3%83%86%E3%82%A3%E3%83%90%E3%83%AB%EF%BC%92%EF%BC%90%EF%BC%91%EF%BC%97/</guid><description>今更感ですが、チャイナフェスティバル２０１７は比較的面白かったと思います。
そんな中から二題。
ofo日本上陸？ あいにくの雨だったため、試乗はしなかったのですが、これはちょっと悔やまれます。
その日その場でアプリのダウンロードができたようです。
https://twitter.com/JapanOfo/status/920916089898377216
そして、いまダウンロードしようとしても、「このアプリはお使いのどの端末にも対応していません」と言われてしまいます。
江東区若洲海浜公園に配置はされているようですが、さて。
Alan3年ぶりの日本 もう日本での活動はなくなったと思っていたら、実はFacebookなどは地道に続けていたのですね。
https://www.facebook.com/Alan-1470117229870513/
気持ちが伝わるトークでしたし、応援し続けているファンもすごいと思いました。
https://youtu.be/BDSbTiap9go
https://youtu.be/qUiJRBPn-eI</description></item><item><title>楽天モバイル　ポイントゲットチュートリアル</title><link>https://jqinglong.github.io/programmers-office/%E6%A5%BD%E5%A4%A9%E3%83%A2%E3%83%90%E3%82%A4%E3%83%AB%E3%80%80%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88%E3%82%B2%E3%83%83%E3%83%88%E3%83%81%E3%83%A5%E3%83%BC%E3%83%88%E3%83%AA%E3%82%A2%E3%83%AB/</link><pubDate>Mon, 30 Oct 2017 12:26:55 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E6%A5%BD%E5%A4%A9%E3%83%A2%E3%83%90%E3%82%A4%E3%83%AB%E3%80%80%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88%E3%82%B2%E3%83%83%E3%83%88%E3%83%81%E3%83%A5%E3%83%BC%E3%83%88%E3%83%AA%E3%82%A2%E3%83%AB/</guid><description>楽天モバイルに切り替えて3日経過しました。
スーパーホーダイ プランS（2GB）ですが、これは強力です。スーパーホーダイの魅力は、低速モード（1MBps）だと使い放題というところです。実際使ってみて、1MBpsで十分です。ということは、初年度1980円（2年目以降2980円）でほぼ使い放題の感覚で使える、ということです。
切り替え前は3GBだとちょっと足りないと思っていたのでう、これを機会に3GB以上にしようと思っていたのですが、全くその必要はなさそうです。恐るべし。
で、入会にあたって、楽天カードに入ったというのは先にも書いたのですが、楽天に浸かってみると、あれこれキャンペーンの案内が届いたり、目に入ったりします。
これらをうまく活用できるとよいと思うのですが、ほとんどのキャンペーンが「エントリ」が必要となっており、初回限定キャンペーンみたいなものだと、うっかりチャンスを逃してしまったものもあるような気がしています。
これらをがめつくゲットするために、順を追っていけばもれなく無駄なくポイントゲットできるという、よくゲームにあるようなチュートリアルがあるとよいのではないかと思いました。
膨大なので、しばらくこのページをちょっとずつ更新していこうと思います。
途中割込み等も入ると思いますし、手順に従ったらキャンペーンを逃した、などと怒らずに、あくまでも参考としてみていただければと思います。
1.楽天モバイルへの入会
（1）お友達紹介キャンペーン
https://mobile.rakuten.co.jp/campaign/friend_referral/
　キャンペーン期間:2017年9月1日(金)～終了日未定
被紹介者様が通話SIMをスーパーホーダイでご契約の場合
・ご紹介者様に楽天スーパーポイント3,000ポイントをプレゼント
・被紹介者様に楽天スーパーポイント1,500ポイントをプレゼント
など
【コメント】
他と被らないキャンペーンなので、必須と思っていただければ。
私は、店頭で申し込む際にこれを知らされましたし、紹介してくれる人もわからなかったので、1500ポイント
逃しましたが。
（2）3つの条件達成でポイントプレゼント！
https://mobile.rakuten.co.jp/campaign/card_pointback/?l-id=campaign_pc_campaign_0529_card_pointback
2017年9月7日(木)10:00～終了日未定
楽天カードに新規入会など
楽天スーパーポイント2,000ポイントをプレゼント
【コメント】以前も書きましたし、以下にも書きますが、ここのページから楽天カードを申し込む必要があります。しかし、楽天カードを申し込むのであれば、もっと有利な方法があります。
それが面倒だという人はご利用ください。
2.楽天カード入会
1.（2）を利用する場合は、楽天カードを申し込むことになります。
私は、条件を誤解していたので今回申し込みを行いました。
しかし、この機会にポイントを楽天に集中させようという手段としてカードを使うというのもありではないかと思います。
（1）A8.netのセルフバック
詳細はこちらをご参照ください。
https://xn&amp;ndash;u9jvb2f3f2dxf5511aj9uaxxhq05g.com/%E4%B8%80%E7%95%AA%E5%BE%97%E3%81%99%E3%82%8B%E6%A5%BD%E5%A4%A9%E3%82%AB%E3%83%BC%E3%83%89%E3%81%AE%E4%BD%9C%E3%82%8A%E6%96%B9/
　ポイントは、「報酬が上がるのを待つ」です。
今日（2017/10/30）現在、報酬は953円です。これではダメです。上がるのを待ちます。
（2）ポイントタウン
こちらも、時期により変動があるようです。
https://www.pointtown.com/ptu/pointpark/service/comment.do?afid=3017
今日現在、476円相当のポイントがもらえるとなっていますが、10倍以上、上がることもあるようです。
なお、こちらの仕組みに慣れると、今後の買い物でも、楽天のポイントと手は別に、このサイトのポイントが付きますので、この機会に申し込んでおくのは手です。
なお、A8の報酬と、こちらのポイントが両方付くのかは不明ですが、現在のところ、両方付いているように思われます。
続きます…</description></item><item><title>ブログ投稿ツール　Open Live Writer</title><link>https://jqinglong.github.io/programmers-office/%E3%83%96%E3%83%AD%E3%82%B0%E6%8A%95%E7%A8%BF%E3%83%84%E3%83%BC%E3%83%AB%E3%80%80open-live-writer/</link><pubDate>Thu, 26 Oct 2017 14:31:16 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%83%96%E3%83%AD%E3%82%B0%E6%8A%95%E7%A8%BF%E3%83%84%E3%83%BC%E3%83%AB%E3%80%80open-live-writer/</guid><description>最近、改めてブログを書き始めているわけですが、ブログ投稿ツールとして愛用していたWindows Live Writerは、気が付けばサポート終了となっているようです。
皆さん、最近はどのように投稿するのでしょうか？
後継ツールを探していたところ見つけたのが、Open Live Writer。
使ってみると、決して名前負けしておらず、しいて言えば日本語対応されていませんが、この程度のツールであれば問題なし。
今後もブログ周りで何か面白いモノがないか探ってみたいと思います。</description></item><item><title>ブログ移行</title><link>https://jqinglong.github.io/programmers-office/%E3%83%96%E3%83%AD%E3%82%B0%E7%A7%BB%E8%A1%8C/</link><pubDate>Sun, 22 Oct 2017 02:58:42 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%83%96%E3%83%AD%E3%82%B0%E7%A7%BB%E8%A1%8C/</guid><description>さて、SIM業者を変更するとなると、現在Nifmoで享受しているNiftyのサービスが受けられなくなります。
これまで
・So-net
・ケーブル@Nifty（J:COM提携）
・J:COM
という感じで来ています。
So-netの時はブログはやっておらず、ホームページだけでしたので、これはそのままNiftyのサービスに引き継いできていました。
ケーブル@Niftyは長く続いていたので、その中でブログも始めていました。メールアドレスもNiftyアドレスで色々なサービスを使用していました。
これが、突然J:COM提携がなくなるということで、このときの引っ越しはなかなか大変でした。
いったん、あまり使用していないサービスはなるべく解約するようにし、Niftyアドレスがなくなっても大丈夫なように、としたつもりでしたが、実際は後日インターネットバンキングで使用していたことが分かるなど、非常に苦労しました。
ただ、そのほぼ同タイミングで、携帯キャリアをソフトバンクからNifmoに変更したため、ブログについてはココログからココログへの移行となり、比較的楽に移行しました。しかしながら、これも実際は写真等の移行はできていても、リンクの移行はできていないことが後からわかる等、そんなに甘いものでもなかったです。
そして、今回Nifmoから楽天モバイルに変更することにより、Niftyサービスとはお別れすることになります。
何年か前から無料のレンタルサーバを使い始めていたので、その中のWordPressに移行することにしました。
ココログ（すなわちMovable type）からWordPressへの移行ということで、世間の情報を見ると分かるように、画像の移行が大変でした。エディタの置換を駆使して、そして昔懐かしい（！）irvine様にご登場いただき、とりあえず移行できたのではないかと思います。
ただ、画像はページで見るとリンク切れ表示（開いてみるとYou don’t have permission の表示）になってしまっています。実はURLを叩き直すと表示されるのですが、原因解明できていません。
プロバイダ契約は将来変わる可能性がある、ということを踏まえて、それでも何とか移行はできると考えるか、最初から他のサービスのおまけというものは遠慮しておくか、考えどころのような気もします。</description></item><item><title>SIM移行</title><link>https://jqinglong.github.io/programmers-office/sim%E7%A7%BB%E8%A1%8C/</link><pubDate>Sat, 21 Oct 2017 17:19:19 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/sim%E7%A7%BB%E8%A1%8C/</guid><description>携帯を変えるとなると次の問題はSIMのサイズ。
現在使用中のNifmoですが、サイズ変更のためには2日間程度通信不能になるとのこと。
そこはなんとかしようがあるのでは？と、やる気に疑問府。
業者変えるなら空白期間なしでできるところがいくつかある。
そんな中から、一度どっぷりはまってみようかと思ってた楽天を選択。
割りとあちこちにショップもありますが（知らなかった…）、代々木公園に行くついでで渋谷の楽天カフェへ。
そこで確認するとNifmoはMNP番号取得に2、3日かかるとのこと。
ということで今日は見送りとなりましたが、楽天に切り替えて端末が対応しているか確認してくれるとのこと。
「機種は何ですか？」
「GaraxyのNote8です。」
「ドコモから出るやつですか？」
「いえ、海外版です。」
と答えた時の店員のおにーさんの渋い顔…
さりげなく見逃してくれたようで、「大丈夫ですね」とのご回答。
で、これに合わせて、楽天カードも申し込んでみます。
楽天カードは、普通にしていてもいろいろなキャンペーンを目にすると思いますが、一番お得かと思ったのがA8のセルフバック。
A8はアフィリエイトサービスですが、自分で申し込んでも報酬を得られるのがセルフバック。
これが、今だと（特別キャンペーン中）13000円というびっくり報酬。
もう一つ候補は、ポイントタウン。こちらはこのサービス経由でショッピングをすると、ポイントタウンとしてのポイントがたまりますよ、というもので、こちらも、現在142,500pt（7,125円相当）ゲットできるというもの。
なお、両方ゲットできるかは不明…
で、なぜ楽天カードかというと、楽天カードで楽天モバイルに加入するとそこでまた特典の楽天ポイントがゲットできると思ったからなのですが、これは楽天サイトから申し込まないといけないということなので、これはスルーすることになります。
さらに、楽天カート自体、申し込み時に楽天ポイントが今だと8000円相当（通常は7000円だと思います）プレゼントされるので、まあ、お得な気分にはなります。
ただし、楽天カードはETCカードが別料金。現在、パルコカードでETCも無料なのですが、そういうことだと、パルコカードも残すか、という感じです。</description></item><item><title>携帯機種変更</title><link>https://jqinglong.github.io/programmers-office/%E6%90%BA%E5%B8%AF%E6%A9%9F%E7%A8%AE%E5%A4%89%E6%9B%B4/</link><pubDate>Sat, 21 Oct 2017 14:37:04 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E6%90%BA%E5%B8%AF%E6%A9%9F%E7%A8%AE%E5%A4%89%E6%9B%B4/</guid><description>現在使用中の携帯が、Huawei p8 Lite。
また、しばらくXperia Z ultraも2台持ちしていました。
しかし、ZUltraの寿命が尽き、最近P8も調子が悪い（普通に起動しようとしているのにカメラモードになるなど）。
ただ、P8は思いのほか落下衝撃に強く（何度も落として隅っこはボロボロですがガラスも割れない）、見た目の美しさとコンパクトさも気に入っているので、ZUltraの後継としてタブレット（Huawei m3 lite 8あたりはなかなか良さそう）も考えましたが、大画面のスマホ1台で何かインパクトのあるものにしようと思いました。
最大の関心は、両面ディスプレイという変態端末YotaPhone3だったのですが、なかなか発売にならず、裏面アプリは制限があるのではといううわさも出てきて、しびれが切れました。
ZUltraで味わった薄さは心地よかったので、本当はスペックだけで見れば、最大の候補は、LG V30かなとも思ったのですが、ちょっと見た目で他との差別感がない。これに対して、Galaxy Note8のペン、しかも、ペンを抜いたらすぐにメモができるというインパクト。これに負けて、大枚をはたくことにしました。
よその開封の儀では、他のGalaxyと同様の箱、という紹介がされていますが、実はペンのシルエットが印象的な箱になっています。結構いいと思いましたけどね。
時間ができれば、色々紹介したいですが、いったん他を進めます。
Samsung サムスン Galaxy Note 8 SM-N950 (N950FD) Dual SIM 64GB 6.3&amp;#8243; 日本語対応 SIM フリー 並行輸入品 (Black ブラック )
posted with カエレバ Samsung Amazon 楽天市場 7net</description></item><item><title>ブログ引っ越し</title><link>https://jqinglong.github.io/programmers-office/%E3%83%96%E3%83%AD%E3%82%B0%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97/</link><pubDate>Fri, 20 Oct 2017 23:14:05 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%83%96%E3%83%AD%E3%82%B0%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97/</guid><description>経緯についても順次書きたいと思いますが、ココログからWordPressに引っ越しました。
特にアナウンスもせず、心機一転でやってみようと思います。
以上、テスト投稿を兼ねて・・・</description></item><item><title>書籍紹介『月刊聴く中国語 2017年 06 月号』</title><link>https://jqinglong.github.io/programmers-office/%E6%9C%88%E5%88%8A%E8%81%B4%E3%81%8F%E4%B8%AD%E5%9B%BD%E8%AA%9E2017%E5%B9%B406%E6%9C%88%E5%8F%B7/</link><pubDate>Wed, 10 May 2017 10:28:51 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E6%9C%88%E5%88%8A%E8%81%B4%E3%81%8F%E4%B8%AD%E5%9B%BD%E8%AA%9E2017%E5%B9%B406%E6%9C%88%E5%8F%B7/</guid><description>80日間二人旅はもっと欲しかった。
この二人旅は本当に楽しそうで、うらやましい！
http://yukyo-irifune.jugem.jp/
五月天は大サービス。何回出てくるか数えてみよう！
小幸運もちょっとだけ登場。
下课钟声
授業終わりのチャイム
よい響きですね。
今月の名言は音声付きだと嬉しいです。これくらいなら暗記して、ちょっとしたときに使えるかも知れないので。
  月刊聴く中国語 2017年 06 月号 [雑誌] posted with ヨメレバ HSJ 2017-05-09 Amazon Kindle 楽天ブックス 楽天kobo 7net</description></item><item><title>書籍紹介『月とにほんご 中国嫁日本語学校日記』</title><link>https://jqinglong.github.io/programmers-office/%E6%9C%88%E3%81%A8%E3%81%AB%E3%81%BB%E3%82%93%E3%81%94/</link><pubDate>Mon, 08 May 2017 05:54:22 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E6%9C%88%E3%81%A8%E3%81%AB%E3%81%BB%E3%82%93%E3%81%94/</guid><description>さりげない漫画の中で、
・中国人のものの考え方
・日本語学校の様子
・日本語の難しさ
が詰め込まれています。
特に、日本語の難しさについては、国語学者の監修が入っていて、本格的な内容となっています。
そして最後はまさかの感動のエンディング。
  月とにほんご 中国嫁日本語学校日記 posted with ヨメレバ 井上純一 アスキー・メディアワークス 2013-02-22 Amazon Kindle 楽天ブックス 楽天kobo 7net</description></item><item><title>書籍紹介を始めます</title><link>https://jqinglong.github.io/programmers-office/%E6%9B%B8%E7%B1%8D%E7%B4%B9%E4%BB%8B%E3%82%92%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%99/</link><pubDate>Mon, 08 May 2017 05:28:54 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E6%9B%B8%E7%B1%8D%E7%B4%B9%E4%BB%8B%E3%82%92%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%99/</guid><description>非公開ページだけでなく、公開ページで書籍紹介も始めます。
色々読んだ本が、読みっぱなしのままだともったいないですので・・・</description></item></channel></rss>