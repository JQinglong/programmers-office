<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>プログラミング on Programmers Office</title><link>https://jqinglong.github.io/programmers-office/categories/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0/</link><description>Recent content in プログラミング on Programmers Office</description><generator>Hugo -- gohugo.io</generator><language>ja-JP</language><lastBuildDate>Fri, 11 Dec 2020 23:27:56 +0900</lastBuildDate><atom:link href="https://jqinglong.github.io/programmers-office/categories/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0/index.xml" rel="self" type="application/rss+xml"/><item><title>初めての Hugo</title><link>https://jqinglong.github.io/programmers-office/archive/2020/first-hugo/</link><pubDate>Fri, 11 Dec 2020 23:27:56 +0900</pubDate><guid>https://jqinglong.github.io/programmers-office/archive/2020/first-hugo/</guid><description>経緯 これまで、あちこちで駄文を積み重ねてきました。
最初は、ソネットで、無料ホームページを作成し、1999年当時はブログというものはなかったため、日記的なメモを書いていました。 これは、現在は、xdomainに置いています。 いまだに参照できるのはありがたいことです。
select *
2003年12月、Niftyと契約したこともあり、ココログでブログを始めました。 その後、契約をやめる2014年まで継続したものを、ブログ契約だけは継続し、情報を残しています。
一プログラマのラグジュアリーな生活Ⅱ
ココログは残したものの、WordPressを使ってみたいという欲求が出てきたことで、新たにブログを立ち上げました。
一プログラマのチャイニーズな生活
データは引き継いでいるので、2003年情報から残っており、2018年12月まで書いていました。
今度は、サイトをSSL化したいという欲求と、合わせて、たまたまだったと思いますが、GCPの無料枠でWordPress環境を構築できるという情報を見て、GCPへの移行を行いました。
Programmers Office
これが直近のサイトですが、GCPの無料枠では若干遅さを感じるのと、原因はわかっていませんが、何度やっても Google AdSense 申請が通らない（前のサイトでは通っているので内容ではないと思われるが、その後の記事に問題があるのか）。 そしてこれが決定打ですが、無料ドメインサービス freenom の 無料での更新ができない（本来、無料枠での１年以内での更新期間の選択肢が出てくるはずなのですが、有料枠のの１年以上の更新しか出てきません。これも原因不明）。 ということでさらに別の移行を検討してみたところ、WordPressからの移行記事を見たということで、Hugoを試してみようか、ということにしました。
謝辞 以下のサイトに大変お世話になりました。
HUGOのテーマ「Mainroad」の設定方法を紹介
Hugo によるブログ作成と mainroad テーマのカスタマイズ
GitHub Actions による GitHub Pages への自動デプロイ</description></item><item><title>React にも入門</title><link>https://jqinglong.github.io/programmers-office/react-%E3%81%AB%E3%82%82%E5%85%A5%E9%96%80/</link><pubDate>Mon, 10 Aug 2020 03:02:23 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/react-%E3%81%AB%E3%82%82%E5%85%A5%E9%96%80/</guid><description>浮気症は治らず、今度は React にも手を出してみます。 React のチュートリアル まずはチュートリアル。 チュートリアル：React の導入 が、始めようとすると、ちゃんと JavaScript は抑えてねと。 なので、先にこちら。 JavaScript 「再」入門 Next.js のチュートリアル それぞれ、特に問題なく終了したので、すかさず Next.js に入ります。 大幅にリニューアルされた Next.js のチュートリアルをどこよりも早く全編和訳しました 途中、下記のエラーに悩まされました。 Failed to compile ./lib/posts.js Module not found: Can't resolve 'fs' in '/Users/konnokiyotaka/workspace/ReactTutorial/nextjs-blog/lib' 色々情報漁りましたが、結局は getStaticProps が getStaticprops になっていたのが原因。（大文字小文字） configに "fs": false を書くとか、 target: &amp;#8216;node&amp;#8217; を書くとか不要でした。 getStaticProps は サーバサイドでのみ 実行される！ 覚えておきましょう。 デプロイのところも、みんな Git は普通に使えるよね、というトーンなので、若干調べながらになりました。 こんな感じになりますね。 git checkout -b test1 # （いくつか変更を加えて、GitHub に push する） git push origin test1 TypeScript への変換は、まあそんな感じかということで途中でやめてしまいました。 が、やはり TypeScript の方が良いよなとは思っています。 git mv components/date.</description></item><item><title>【Udemy】超Vue JS 2 完全パック – もう他の教材は買わなくてOK！ (Vue Router, Vuex含む)</title><link>https://jqinglong.github.io/programmers-office/%E3%80%90udemy%E3%80%91%E8%B6%85vue-js-2-%E5%AE%8C%E5%85%A8%E3%83%91%E3%83%83%E3%82%AF-%E3%82%82%E3%81%86%E4%BB%96%E3%81%AE%E6%95%99%E6%9D%90%E3%81%AF%E8%B2%B7%E3%82%8F%E3%81%AA%E3%81%8F%E3%81%A6ok/</link><pubDate>Sat, 25 Apr 2020 00:53:40 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%80%90udemy%E3%80%91%E8%B6%85vue-js-2-%E5%AE%8C%E5%85%A8%E3%83%91%E3%83%83%E3%82%AF-%E3%82%82%E3%81%86%E4%BB%96%E3%81%AE%E6%95%99%E6%9D%90%E3%81%AF%E8%B2%B7%E3%82%8F%E3%81%AA%E3%81%8F%E3%81%A6ok/</guid><description>Vueを一度基本から勉強しようということで、いろいろ探して、これにたどり着きました。
超Vue JS 2 完全パック – もう他の教材は買わなくてOK！ (Vue Router, Vuex含む)
以前、AWSの講座を受講した時も、感じましたが、I am Now AWS Certified ・本題以外の技を見せてもらえることがある。
・再生速度を上げて時短できる
・やはり動く様子を見られるのは良い
など、本を読んだり、教室で受講するのとは違った良さがあります。
また、無料のものをあれこれ探して回り道するくらいなら最初からこれ受けとけばよかった、という気持ちにもなりました。
※ただ、Udemyであれ他であれ、全ての講座が良いとも思えないので、審美眼（審技眼？）は必要ですね。
以下は、単なるメモです。何の役にも立たないと思いますが、自分用です。
受講時のメモ https://jsfiddle.net/
!tab
インスタンス内の属性にアクセスする際にthis
v-once
v-bind :
v-onの引数となるDOMイベント一覧
イベントリファレンス
$event
イベント修飾子
stop
prevent
v-on @
算出プロパティ
computed property
ウォッチャ
配列は第２引数がインデックス
オブジェクトは第２引数がキー
data:
の中がリアクティブ（getter,setterがインスタンス作成時に作成されるから）
===
型も値も一緒
div.#3
↓
VNode
仮想ノード
コンポーネントのグローバル登録
main.jsでVue.conponent</description></item><item><title>Realworld app – VueJS and Typescript</title><link>https://jqinglong.github.io/programmers-office/realworld-app-vuejs-and-typescript/</link><pubDate>Sun, 19 Apr 2020 09:00:59 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/realworld-app-vuejs-and-typescript/</guid><description>今度はTypescript https://github.com/gothinkster/realworld-starter-kit
Part 1 : Introduction and Vue CLI Setup $ vue create realworld-vue-ts vue-class-component
create component の代わりに@Component
vue-property-decorator
@Propなど
vuex-module-decorators
@module
$ yarn serve 今回はyarn派なんですね
$ yarn add vue-property-decorator $ yarn add vuex-module-decorators Part 2 : Templates and Styling router.ts がなくなっていて、router/index.ts
VSCode command + D で複数選択
Part 3 : Vuex and API Access https://github.com/gothinkster/realworld/tree/master/api
json to ts
https://jvilk.com/MakeTypes/
$ yarn add axios axios npm
JWT JSON Web Token</description></item><item><title>Vue JS Crash Course</title><link>https://jqinglong.github.io/programmers-office/vue-js-crash-course/</link><pubDate>Sat, 18 Apr 2020 07:40:45 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/vue-js-crash-course/</guid><description>こちらのコースをやってみました。以下、単なるメモです。
Vue JS Crash Course https://github.com/bradtraversy/vue_crash_todolist
node10の頃
Vue CLI インストール
https://cli.vuejs.org/guide/installation.html
$ npm install -g @vue/cli $ vue --version @vue/cli 4.3.1 4なんだ・・・
$ vue create test いっぱいエラー出てるけど・・・ $ cd test $ npm run serve 開きました
cd .. vue ui Vue プロジェクトマネージャ 画面が自動で立ち上がる
http://localhost:8000/project/select
現在のフォルダのまま（testが表示されているフォルダ）
vue_crash_todolist
他はデフォルト
↓
デフォルトプリセット
↓
インストール完了すると、「プロジェクト ダッシュボード」ページが表示される
ダッシュボード画面
プロジェクトタスク画面
main.js がエントリポイント
アロー関数（=&amp;gt;）の復習などしながら（けど、render: h =&amp;gt; h(App)　はやはり難しいと思ったら下記でなんとなく分かった！）、App.vue の仕組みの説明。
Vue.jsのrender: h =&amp;gt; h(App)について調べた
style記述は、上記のgithubからもらってくる。
Component「Todos.vue」を作って、App.vueで読み込む。
v-bind
https://jp.vuejs.org/v2/guide/class-and-style.html</description></item><item><title>Nuxt JS beginner tutorial</title><link>https://jqinglong.github.io/programmers-office/nuxt-js-beginner-tutorial/</link><pubDate>Fri, 17 Apr 2020 01:16:53 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/nuxt-js-beginner-tutorial/</guid><description>もう一度、Nuxt の勉強をしようということで、上記チュートリアルを一式やって見ました。単なるメモです。
1 Nuxt JS beginner tutorial – In Depth Intro to Nuxt.js | SPA, SSR, Static Site, Vue.js Family What is Nuxtjs? Why Nuxt.js is so good? What Nuxt.js can do? What Nuxt.js Includes
How single page application works?
How static site generation in nuxt works?
How universal application is created in nuxtjs?
2 Nuxt JS beginner tutorial – Getting Started with NuxtJs | How to setup Nuxt Project 始める前に、Docker環境を作る</description></item><item><title>TruffleBoxs 入門</title><link>https://jqinglong.github.io/programmers-office/truffleboxs-%E5%85%A5%E9%96%80/</link><pubDate>Mon, 23 Mar 2020 07:52:01 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/truffleboxs-%E5%85%A5%E9%96%80/</guid><description>改めて勉強しようと考えたときに、TruffleBoxs が良いのではと思い立ちました。
まずは、純粋に
TruffleBox (React&amp;amp;Truffle)を用いたDockerでのdapps（ブロックチェーンアプリ）の開発環境の構築
https://qiita.com/dl10yr/items/26b106d27a2de87da131
こちらをなぞらせていただきます。
いきなり、DockerFile の配置場所の絵と、docker-compose.yml の記述が食い違い？？
docker-compose.yml の記述に合わせて、truffle フォルダに配置します。
Dockerfile のfは小文字で
$ docker-compose build $ docker-compose run truffle truffle unbox react Docker 側からアクセスできるように、Ipアドレスを追加するところ。
まずは、事前確認。
ifconfig lo0: flags=8049 mtu 16384 options=1203 inet 127.0.0.1 netmask 0xff000000 inet6 ::1 prefixlen 128 inet6 fe80::1%lo0 prefixlen 64 scopeid 0x1 nd6 options=201 ・・・ 変更
sudo ifconfig lo0 alias 10.200.10.1/24 事後確認
ifconfig lo0: flags=8049 mtu 16384 options=1203 inet 127.0.0.1 netmask 0xff000000 inet6 ::1 prefixlen 128 inet6 fe80::1%lo0 prefixlen 64 scopeid 0x1 inet 10.</description></item><item><title>「試して学ぶ スマートコントラクト開発」を読みながら</title><link>https://jqinglong.github.io/programmers-office/%E3%80%8C%E8%A9%A6%E3%81%97%E3%81%A6%E5%AD%A6%E3%81%B6-%E3%82%B9%E3%83%9E%E3%83%BC%E3%83%88%E3%82%B3%E3%83%B3%E3%83%88%E3%83%A9%E3%82%AF%E3%83%88%E9%96%8B%E7%99%BA%E3%80%8D%E3%82%92%E8%AA%AD%E3%81%BF/</link><pubDate>Sun, 22 Mar 2020 06:09:56 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%80%8C%E8%A9%A6%E3%81%97%E3%81%A6%E5%AD%A6%E3%81%B6-%E3%82%B9%E3%83%9E%E3%83%BC%E3%83%88%E3%82%B3%E3%83%B3%E3%83%88%E3%83%A9%E3%82%AF%E3%83%88%E9%96%8B%E7%99%BA%E3%80%8D%E3%82%92%E8%AA%AD%E3%81%BF/</guid><description>良い本なのは間違いないです。
ただ、途中で行き詰まってしまったので、最後までガッツリとは作りきれませんでした。
試して学ぶ スマートコントラクト開発 新品価格
￥3,839から
(2020/3/22 14:57時点) きっかけ 最近、ふとブロックチェーンの勉強をしてみようと思い立ち、CryptoZombieshttps://cryptozombies.io/jp/をやってみて、分かったような分からないような気分だったので、もう少しちゃんと勉強しようと調べてみました。で、当然色々なサイトがありますが、何も基礎がない状態だと、もう少ししっかり書かれているものがないかなと言う気持ちになり、この本に出会いました。
この本はQUESTというアプリを作った経験を踏まえて書かれているようです。
で、残念ながらQUESTは現在動いていないよう（単に証明書入れていないだけ？）なのですが、こちらでその概要が分かります。
https://speakerdeck.com/norinity1103/quest-tutorial
すなわち、セミナーとか講座とかで、質問してくれた人に仮想通貨で報酬を与えることで、場を活性化させるみたいなことを狙っているようです。
この内容が自分の関心があるところでもあり、これの簡易版でも作れたら良いなと思いながら始めました。
本の序盤 そもそも仮想通貨の購入等もしたことがない状態からのスタートですので、この本でも最初の基礎情報と、METAMASKウォーレット作成から始まる構成は大変助かりました。
なお、テストネットでEther取得を行いますが、最初Ropstenの取得に失敗しました。今改めてやってみたらできたので、何かやらかしたかもしれません。
本の中でも、CryptoZombies をやってみる章があります。
これは、本当は、CryptoZombies のWeb環境ではなく、自分の環境でやってみたいと思うのですが。もう少し理解が進んだらできるようになるのでしょうか。
そんなこんなで、Solidityという言語と、スマートコントラクトと言うものを学びます。が、正直、現段階でも、要はこう言うこと、という腹落ちした状態にはなっていません・・・
また、Remix という、イーサリアム開発用のWeb IDE が紹介されます。
これも良いなと思ったのですが、その後の開発は必ずしもそれを使用するわけではないので、まあ、参考情報という感じです。ちょっと見た目も変わっていて、Compileタブどこ？となります。
その次は、プロダクトデザインの考え方（UX）の章になります。
ジャーニーマップとか、ユーザテストとかの考え方が、丁寧に書かれています。
開発環境 Chapter 4 あたりからが本題。
開発環境として書かれているのが、
・Docker
・Geth
・Ganache
・Node.js
・Truffle
・Git
・VSCode
実践型の環境と感じられます。
そして、開発用ブロックチェーンをプライベートネットとして構築します。
これをやっているときに一つエラーが発生。
geth --datadir ~/private-net --nodiscover --maxpeers 0 init ~/private-net/genesis.json とやると
INFO ・・・ Fatal: Failed to write genesis block: unsupported fork ordering: eip150Block not enabled, but eip155Block enabled at 0 https://ethereum.</description></item><item><title>AppSheetによるノーコード開発</title><link>https://jqinglong.github.io/programmers-office/appsheet%E3%81%AB%E3%82%88%E3%82%8B%E3%83%8E%E3%83%BC%E3%82%B3%E3%83%BC%E3%83%89%E9%96%8B%E7%99%BA/</link><pubDate>Sun, 26 Jan 2020 02:43:41 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/appsheet%E3%81%AB%E3%82%88%E3%82%8B%E3%83%8E%E3%83%BC%E3%82%B3%E3%83%BC%E3%83%89%E9%96%8B%E7%99%BA/</guid><description>ローコード開発とかノーコード開発とかコードレス開発とか、盛り上がりそうな、盛り上がらなそうな微妙な感じがつづているように思いますが、いかがでしょうか。
そんな中で、GoogleがAppSheetを買収しました。
AppSheet の買収によりコーディングなしでのアプリケーションの作成と拡張が可能に
早速試してみた内容はQiitaに書きました。
AppSheet ちょっと面白いかも
マネタイズの仕組みはまだですかね。2019年2月時点でのQA。
https://community.appsheet.com/t/hi-appsheet-is-great-i-never-made-apps-be/5531
上記Googleの投稿によれば、「この買収によりお客様は、すでに馴染みのある Google スプレッドシートや Google フォームだけでなく、Android や Google マップ、Google アナリティクスなどの高度な Google テクノロジーも活用して、高度なアプリケーションを大規模に開発できるようになります。」と書かれていますが、現時点ではGoogle アナリティクスと連携するような機能が提供されているわけではなさそう。
もう少し様子見ながら注視しておこうと思います。</description></item><item><title>またサイト止めてしまいました</title><link>https://jqinglong.github.io/programmers-office/%E3%81%BE%E3%81%9F%E3%82%B5%E3%82%A4%E3%83%88%E6%AD%A2%E3%82%81%E3%81%A6%E3%81%97%E3%81%BE%E3%81%84%E3%81%BE%E3%81%97%E3%81%9F/</link><pubDate>Sun, 22 Dec 2019 01:47:52 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%81%BE%E3%81%9F%E3%82%B5%E3%82%A4%E3%83%88%E6%AD%A2%E3%82%81%E3%81%A6%E3%81%97%E3%81%BE%E3%81%84%E3%81%BE%E3%81%97%E3%81%9F/</guid><description>ドメイン名サービスの更新を怠って、本サイトをしばらく止めてしまっていました。
Freenomの更新 以前にも繋がらなくなったことがあって、Cloudflareが止まってたということがありましたので、それも疑いましたが全然情報が出ていないので、そうではなさそう。
サイト自体が死んだかと思いましたが、再起動しても状況は変わらず、そもそもサイトが死んだ場合はCloudflareがエラー画面を返すのでそうでもなさそう。
本サイトは、
https://www.karelie.net/free-fast-wordpress-site-freenom/
を参考に、freenomで無料ドメインサービスを使用しています（した）。
今月頭に、「Your domain name PROGRAMMERS-OFFICE.ML needs renewal」というメールが来ていたのですが、完全に見落としていました。
そして、これにしたがって更新していれば無料でできたようなのですが、一度終了してしまうと、再度取り直す際には有料になっています。ということで10ドルちょっと支払いました・・・（ただ、この更新料は他の有料サービスから比べても格安だとは思います）
ついでにWordPressの更新 そして、ドメインの更新とは全く関係ありませんが、この際にWordPressも更新しておくことにします。
更新の際には、いつも（？）、下記のエラーになります。
いくつかのファイルをコピーできないため、最新版のインストールができません。これはたいていの場合、ファイルのパーミッションが適切でないことが原因です。: wp-login.php, wp-cron.php, xmlrpc.php, wp-load.php, wp-activate.php, wp-config-sample.php, wp-settings.php, wp-mail.php, wp-signup.php, wp-links-opml.php https://www.karelie.net/free-fast-wordpress-site-setting/#wordpress-2
を参考にしてパーミッションを変更します。
そちらに書いてある
sudo chmod 707 wp-settings.php sudo chmod 707 wp-cron.php sudo chmod 707 wp-activate.php sudo chmod 707 wp-load.php sudo chmod 707 wp-login.php sudo chmod 707 wp-signup.php sudo chmod 707 wp-trackback.php sudo chmod 707 wp-config-sample.php sudo chmod 707 license.txt sudo chmod 707 readme.</description></item><item><title>I am Now AWS Certified</title><link>https://jqinglong.github.io/programmers-office/i-am-now-aws-certified/</link><pubDate>Sun, 10 Nov 2019 00:20:41 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/i-am-now-aws-certified/</guid><description>AWS Certified Solutions Architect – Associate試験に合格しました！
合格者特権で、試験対策について書いてみたいと思います。
（まあ、こういうのは読み流すものです）
自分のスペック 私は、仕事で多少クラウド環境でアプリを動かすこともありますが、ほとんどがオンプレミス環境での構築です。
このブログはGCPで動かしており、趣味としてクラウド環境を触っているのは記事として書いている通りです。AWSも一時期Magentoをガッツリやろうとして、それを動かす環境として触っていましたが、諸事情によりMagentoの話が先送りになったため、AWSも触らなくなってしまい、１年間の無料期間も過ぎてしまいました。
ですので、遊びレベルでEC2、S3、ECR、ECS あたりは雰囲気は分かっている、という状況でした。
対策講座 会社的な諸事情があり、１日の入門講座を受講しました。とりあえずVPCを作って、EC2を立ち上げて、オートスケールを試してみる、というくらいの一番の初心者向け講座でしたので、これはおそらく合格には関係なかったかなと思います。それでも、趣味で遊んでいるだけだと、VPCとは、みたいなことを意識せずにやっていたので、そういうものがあるという認識のためには「無」ではなかったかというところでしょうか。
今回の主要な（９割９分）準備は、Udemyの対策講座でしたので、そちらを紹介。
Udemy対策講座 これだけでOK！ AWS 認定ソリューションアーキテクト – アソシエイト試験突破講座（初心者向け21時間完全コース）試験に出る範囲の概要を押さえる、という役割だと思いますが、確かに、結果的にはこれだけでOKでした。
始める前は、動画講座は見るのがしんどい（まだるっこい）かなと思っていたのですが、２倍速で見ているとまだるっこさはなく、自発的にページをめくらなくてもどんどん進んでいくためだらだらしない、というメリットがありました。
ただ、しばしば寝落ちしてもう一度見直す、みたいなこともありましたので、ちゃんと体勢を整えてやりましょう。
終わった今思うのは、各セクションの終わりに小テストが用意されていますが、これを先にやってからビデオを見る方が良かったかも、ということです。小テストで、こんなことやってたっけ？？みたいなことがしょっちゅうあったので、そこで見返すよりも、ちゃんとポイントを押さえてから見た方が効率的ではないかということです。
この講座はあちこちの合格体験記で紹介されていますが、ハンズオンについて、ちゃんとやる派が多いように思われます。私は、試験を申し込んでからこれを受講し、時間がないなと思ったのでハンズオンは全て見るだけにしました。
僅かながらも触ったことはあったから、というのも大きいですが、やっていることがイメージできるなら、必ずしも試験対策としては手を動かす必要はなかったかなと思います。ただ、手を動かすことで、もう少し、説明されている箇所以外のオプション等にも目が行ったかな、試験ではそういうのも結構出てたぞ、という感じもあります。
模擬試験 なんだかんだで、Udemy講座を見終えたのが、試験（17時から）当日の朝でした。そこで、まずはUdemy講座についているの模擬試験の一つ目をやってみました。70%の合格ラインに対して、40%。
え、そんなこと説明されたました？？みたいな問題ばかり。青ざめます。
続いて、模擬試験二つ目。55%。ダメダメですが、ただ、そんな問題が出るんだ、という感覚は分かりました。そこでふと疑問が。これはUdemyの模擬試験の感覚であり、本番もそうなのか？？
ここで、慌てて、公式模擬試験があることを思い出し、すかさず申し込んで実施。結構近い問題が出てる！80％。行ける！
Udemyの模擬試験３つ目は模擬試験とはちょっと違う小テストの形式の65問ですが、正解45問＝約70%。後は間違っているところの見直しをやれば良いか、という感じでざっとおさらいして、もう一度模擬試験一つ目。なんとこのタイミングで模擬試験内容が更新されました、との通知。まあ、頻繁に内容が更新されているというのは良いなという好印象。で、84%。行ける！と感じながら試験会場へ向かいました。
本番試験 身分証明証は二つ（一つは写真付き）持っていきましょう。
さて、試験を始めて最初に思うのは、公式模擬試験、結構モダンな画面だったじゃん！本番、昔ながらの古臭い画面じゃん！
それはさておき、問題、全然模擬試験と違います。よりシビアです。どこまで公開して良いか分からないのでイメージで言うと、模擬試験はAとBを識別できれば回答できるが、本番はA1とA2の識別が必要、みたいな。
今回、直前の復習で、こちらのサイトの表を参考にさせていただき、大いに役立ちました。
表で対策するAWS 認定ソリューションアーキテクト – アソシエイト(SAA)
この中で言うならば、例えば、VPCエンドポイント（ゲートウェイ型）とVPCエンドポイント（インターフェース型）を識別しましょう、と言うことです。
あとは、この試験に限りませんが、問題文の細かい条件がヒントになっている。また、「英語」ボタンがあるので、日本語が怪しいと思ったら英語も見てみる。一つ、canの訳し方が微妙じゃない？というのがありました。
対策本 ここが一番気にされるところだと思いますが、今回書籍類は使用しませんでした。ただ、より本番試験に近い内容が書かれているなら、模擬試験までやった後に弱いところの補強にやると良いのかもしれません。そういう意味では、新しい本でないと意味がないかなと思います。
また、最初に、**AWS Well-Architected フレームワーク ホワイトペーパー(PDF)**も読みましたが、読むというよりは眺める感じになってしまい、あまり意味がありませんでした。Udemy講座の中で何度も説明してくれるので、ホワイトペーパーを読むこと自体は必須ではないかなという感じです。
余談 今回の、Udemy講座は非常に良かったなと思いますが、Udemyの全ての講座が良いかというのは不明です。名前からして怪しげなものも色々あるな…審査してるのかな…
しかも、ベネッセが提携してやっている。大学入試の件で、私のベネッセに対する印象がかなり悪くなってます。ベネッセ、そうじゃなかったと思うんだけど。</description></item><item><title>Watson Machine Learning を活用してWordPress サイト内にアプリ作成</title><link>https://jqinglong.github.io/programmers-office/watson-machine-learning-%E3%82%92%E6%B4%BB%E7%94%A8%E3%81%97%E3%81%A6wordpress-%E3%82%B5%E3%82%A4%E3%83%88%E5%86%85%E3%81%AB%E3%82%A2%E3%83%97%E3%83%AA%E4%BD%9C%E6%88%90/</link><pubDate>Sat, 14 Sep 2019 00:34:41 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/watson-machine-learning-%E3%82%92%E6%B4%BB%E7%94%A8%E3%81%97%E3%81%A6wordpress-%E3%82%B5%E3%82%A4%E3%83%88%E5%86%85%E3%81%AB%E3%82%A2%E3%83%97%E3%83%AA%E4%BD%9C%E6%88%90/</guid><description>いつも悩んで終わっている記事になってしまうのですが、今回は作りきった話。
ただ、作りきってから解説を書こうと思うと熱が冷めてしまっているというジレンマ・・・
IBMのWatson Studio から利用できる機械学習環境 AutoAI で予測モデルを構築し、それを外部PHPアプリから参照するアプリを作りました。タイタニック　チャレンジ 以前から作ろうとしていた、タイタニックアプリがやっとできた！ということです。タイタニックアプリを作ろう（Nuxt.js 開発環境の基本） システム構成 基本的には、機械学習を行なったモデルをAPIとして公開し、そのAPIを呼び出すアプリを作る、というぬるさくで学習していた構成です。
https://norwegian-geek.booth.pm/items/1296418
いままでかなり色々な方法を試してきたわけですが、AutoAIを知った事で、ローカルで構築した機械学習環境を公開環境に持っていく、という事を考えなくて良くなったのが大きいです。
まずは、AutoAIがデプロイ機能まで持っていて、これでAPIを公開できます。
これを呼び出すアプリは、WordPressサイトを立てて、その中でPHPアプリを書きました。
AutoAI によるAPI公開 こちらについては、AutoAIで検索するだけでも色々情報が出てきますし、「AutoAI タイタニック」と検索すれば、まさに今回行なったことをみなさんやられているので、割愛します。
これが無料で公開されているというのがすごいなと思います。
WordPress 環境内にアプリ構築 UI側をどう作るかがこの記事のメインとなります。
最初は、せっかく勉強したということでOutSystemsでやってみようと思いました。
OutSystems まず、ちょっと悩んだのが、あまりにもデータとフォームが結合していて、単なる検索条件を入力するための画面を作りたいのに、フォームのためにはデータが必要という構造。フォームを使わない方法も当然あると思いますが、仮のデータを作成する方法でもできなくはなかったです。
REST API呼び出しについては、ちゃんと仕組みが用意されていて、これは便利。テスト呼び出しもしやすい画面が用意されている。
それで、呼び出しまではできたのですが、取得したデータの処理がうまくできませんでした。これについては、そもそもAutoAIのJSONの構造が複雑すぎませんか？という気もしています。
WordPress 昔から思っているのですが、CMSで管理するコンテンツというのは、単にブログ等の文章だけではないはず、CMSはサイト全体のデザインの統一性を実現するために使用するもので、そこには文章だけではなくアプリケーションも含まれるのではないでしょうか。その一例として、問い合わせフォームくらいはCMSの機能に含まれたりもすると思うのですが、もっとがっつりしたアプリもCMS管理配下に乗せてしかるべきではないか、という気がしています。
なぜこれを私がこれを強く思うかというと、私がデザインが苦手だからです。なるべくセンスの良いデザインを使わせていただくために、その枠組みの中でアプリも作りたいと思うのです。
実際それはやったことはあるので、自分のできる範囲に戻ったという感じではあります。
フォームプラグイン そう考えた上で、今回最初に、Wordpressのプラグインを使って、フォームを作れないかと思いました。
色々なプラグインを見ていく中で、使えなくないなと思ったのは、Form Maker by 10Web。The Most Powerful Drag&amp;Drop WordPress Form Builder デザインテーマも用意されていて（Wordpress本体のテーマとは完全独立なのは良い悪いあると思いますが）、きれいなデザインのフォームが作れます。
また、無料で使えるコントロールが充実しています（他の類似プラグインは有料オプションが多い印象）。
ただし、基本的には、あくまでも入力した内容をデータに保存して、せいぜいメールを飛ばす機能。今回やりたかったのは入力値を外部のAPIに渡すこと。フォーム処理の後外部URL等に転送することはできますが、入力値がPOSTされるわけではないのです。
これについては、もう少し頑張ってみました。
JavaScriptを追加することができますので、
function send_form(){ var f = document.forms["form6"]; f.method = "POST"; f.action = "/apps/titanic-result/" f.submit(); } みたいなものを追加し、画面側では標準のSubmitボタンを使わずに、ボタンを追加して、OnClickイベントにsend_form()を記載する、ということをすると、指定したところに入力値をPostすることができるわけです。</description></item><item><title>Kubernetes・GKEでの公開</title><link>https://jqinglong.github.io/programmers-office/kubernetes%E3%83%BBgke%E3%81%A7%E3%81%AE%E5%85%AC%E9%96%8B/</link><pubDate>Sun, 28 Jul 2019 01:01:12 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/kubernetes%E3%83%BBgke%E3%81%A7%E3%81%AE%E5%85%AC%E9%96%8B/</guid><description>続きます。Docker イメージを Google Container Registry に登録 kubectl で設定を行うためのyamlファイル作成 上記でGoogle Container Registryに登録したDockerイメージをGKE（GCP の Kubernetes Engine）で公開します。
今回は、APIだけを公開するということで、API用のファイルだけ作成します。
内容は、基本的には、githubの方を参照しています。
https://github.com/pco2699/NullSuck-AI/tree/master/k8s
また、イングレス用ファイルは下記のような感じで作りました。
k8s/api/api-ingress.yml
apiVersion: extensions/v1beta1 kind: Ingress metadata: name: api-ingress spec: rules: - http: paths: - path: /* backend: serviceName: api-svc servicePort: 5432 GKE周りの設定 これを適用するにあたり、まずは準備ということで、
gcloud container clusters create nullsuck --num-nodes 2 --zone asia-northeast1-a を実行するとなっていますが、エラー。
ERROR: (gcloud.container.clusters.create) ResponseError: code=403, message=Kubernetes Engine API is not enabled for this project. Please ensure it is enabled in Google Cloud Console and try again: visit https://console.</description></item><item><title>Docker イメージを Google Container Registry に登録</title><link>https://jqinglong.github.io/programmers-office/docker-%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B7%E3%82%99%E3%82%92-google-container-registry-%E3%81%AB%E7%99%BB%E9%8C%B2/</link><pubDate>Fri, 26 Jul 2019 22:03:18 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/docker-%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B7%E3%82%99%E3%82%92-google-container-registry-%E3%81%AB%E7%99%BB%E9%8C%B2/</guid><description>時は遡り、画面が何とか動くようになったので、API連携しようとしたものの、失敗して終了していたこちら。ぬるさくapi連携（失敗） 画面も、色々試せそうになってきたので、とりあえず、APIを公開しようということで、ぬるさく本の「6.3 Docker イメージを Google Container Registry に登録してみよう 」を試すことにします。
GCPプロジェクトの作成 既存のアカウントにプロジェクトを追加します。
プロジェクト名は真似して「nullsuck」、プロジェクトID「nullsuck-xxxxxx」は自動で振られます。
Docker イメージを push ここで数日を要した・・・
まず、今回はAPI側を公開することにするので、appとなっている部分は全てapiと読み替えて作業します。
そこを間違えなければ（一旦間違えましたが・・・）、docker build はおそらく問題なし。docker tag は、結論としてはそこの問題ではなかったのですが、本でも、GCPドキュメントでも、プロジェクトIDを含めるように書かれているのですが、本の記述が「nullsuck」と書かれていて、若干混乱。「nullsuck-xxxxxx」の方を記述するようにしました。
そして、gcloud docker — push をするのですが、まず、この記述は古いようで、現状では、docker pushでやる形になっています。
が、やってみると、
denied: Token exchange failed for project 'nullsuck-247713'. Caller does not have permission 'storage.buckets.create'. To configure permissions, follow instructions at: https://cloud.google.com/container-registry/docs/access-control で、権限の問題か、ということで、記載されているドキュメントを見て、バケットを作ってみたりとか、色々試してみていたのですが、最終的な問題点は、現在接続しているプロジェクトが、既存のプロジェクトであり、今回作成したnullsuckプロジェクトではない、ということでした。
gcloud config list でプロジェクトが確認できます。これはdefault構成だったので、新しい構成を作成。
gcloud config configurations create nullsuck そして、gcloud initは、対話式で聞いてくれるので、nullsuckプロジェクトを指定することにより、環境が切り替わります。
そこで改めて、docker pushをすると、今度は成功しました。
公開設定が「非公開」になっているのが、本とは異なるので、若干気になる・・・</description></item><item><title>OutSystems でのアプリ自動生成</title><link>https://jqinglong.github.io/programmers-office/outsystems-%E3%81%A7%E3%81%AE%E3%82%A2%E3%83%97%E3%83%AA%E8%87%AA%E5%8B%95%E7%94%9F%E6%88%90/</link><pubDate>Wed, 17 Jul 2019 13:44:52 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/outsystems-%E3%81%A7%E3%81%AE%E3%82%A2%E3%83%97%E3%83%AA%E8%87%AA%E5%8B%95%E7%94%9F%E6%88%90/</guid><description>一連の投稿の続きになります。
OutSystemsはローコード開発か。ノーコーディングにはならないのか、ということで、OutSystems とGlide App（glideapps）の比較用に、Glide で使用したものと同じデータを使用して、OutSystems でアプリ自動生成を行ってみます。
使用するデータは、下記で調整を行なった、港区観光施設データです。Glideの味わい方〜オープンデータを活用しよう OutSystems 環境整備 OutSystems セルフトレーニングで、最後に肝心のデザイン変更のところを飛ばしてしまいましたが、そこでは、SILK UI フレームワークのDublin テンプレートを使用することになっていたので、まずは、そちらをインストールします。
Forge page で「Dublin Template」を検索して、インストールします。
そして、アプリケーションの作成。
Dublinテンプレートによるアプリ作成（失敗） 順に進めていくと、初期画面が出来上がります。
一度ここで起動してみるとこんな感じ。
この辺が、どうも何をしているのか、何をすべきなのかよくわからない。
そして、結局起動できず。
もしかして、Mac版はダメだけど、Windows版なら、と思ったのですが、ダメでした。一応、画面生成まではできましたが、起動しません。一応、こんな画面ができるという感じです。
Dublinの場合は、左上に、デバイス切り替え機能がつきます。
基本テンプレによる画面作成 では基本テンプレートならどうかということ、こちらはできました。
テンプレートとしてTop Menu を選択する以外は、上記Dublinの場合と同じです。
デザイン画面を開いて、おもむろにExcelをインポートしますが、Google スプレッドシートからダウンロードしたものはExcelファイルではないと言われて、失敗しました。一度Office 365 で開いて保存し直したら大丈夫でした。
ただ、シート名、1行目の名称でテーブルを作ってくれると思ったら、それは失敗しました。
まずWindows版だと、ちゃんとシート名を認識はしてくれています。
これが、Mac版だとこの時点でダメ。
で、Windows版でも、Mac版でも、インポート結果はこの通り。
単なる連番になってしまいました。これは、シート名、項目名が日本語のためかと思われます。
それでも進めることはできます。
基本テンプレの場合は、初期状態でMainFlowには何もありません。
ここにEntity1 を２回ドロップすることで、リスト画面と詳細画面が生成されます。勝手に結合されている状態です。
実行する前には、各画面のAnonymous プロパティをチェックOnにします（ログイン画面を表示させないため）。
そして起動するとこのような画面が生成されます。明細部分のページングもされていますし、これをスタートとするのは大いにアリでしょう。
Glide と違って、参照画面だけでなく、更新画面も生成されます。これは割と大きな違いかもしれません。
ただ、これを完成品としては公開できないかなという感じがあり、その辺が繰り返しになりますが、Glide App と、OutSystems の違いになるような気がします。</description></item><item><title>Glide とOutSystems</title><link>https://jqinglong.github.io/programmers-office/glide-%E3%81%A8outsystems/</link><pubDate>Mon, 15 Jul 2019 06:31:06 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/glide-%E3%81%A8outsystems/</guid><description>Qiita に初投稿してみました。
Glide App（glideapps） のMap List 機能
https://qiita.com/JQinglong/items/8c8cd2e2d5c29225972a
ノーコーディングツールとしてのGlide App（glideapps）（検索で引っかかりにくいので、こういう書き方をしてみてます）のパワーは凄まじい。
今回取り上げたMap List 機能で、地図上に複数展表示ができる。そして、これは単にスプレッドシートの場所情報を表示しているだけであり、スプレッドシートの更新は自由にできる。
そして、ちょっと前に、Per-user data 機能も追加されており、ログインユーザごとのデータのフィルタリングができるようになっている。
これらを組み合わせると、あんなことやこんなことや・・・
そして、Glideの中では、一切コーディングさせない。コーディング的なこともさせない。
一方、OutSystems。
これもアプリの色々な要素の自動生成機能は凄まじい。ある意味、Glideと同じことは、ほぼ同様にできる（あとでやってみる）。
そしてそこにとどまらない。基本的に、どんどん自動生成されたものに対してさらにカスタマイズできる。自動制裁されたアプリを見て、オブジェクト、変数、RDB構造のようなものを想定できるならば、どんどん「式」を書ける。
これは考え方の違いでしょう。
OutSystems は、ノーコーディングというよりはローコーディングであり、結局は従来と違う方法でコーディングしている。そして、たまにコーディングの影が見える。この影が見えると、拒絶反応を起こす人はそれなりにいて、それは自分の仕事ではないと感じるのだと思われる。
OutSystems を見て、Accessだなと感じたのは、基本的には自動生成してくれるのだけれども、それで完了でもなくて、そこから手を入れるんだなというところ。だから利用者もエンドユーザではなく、開発者。
Glide は徹底的にノーコーディングで完成品まで持っていくことに徹している。
これにより利用者としてエンドユーザも入ってくると思われる。そのためには、痒いところに手が届かないのも、今はやむを得ないという考え方。イノベーションのジレンマが発生している状態ではあるが、一気にこの20数年の開発スタイルをひっくり返しかねないやり方だ、というのは言い過ぎ？？</description></item><item><title>9.4　スキャフォールディングとRichWidgetを使ってみよう（OutSystems セルフトレーニング）</title><link>https://jqinglong.github.io/programmers-office/9-4%E3%80%80%E3%82%B9%E3%82%AD%E3%83%A3%E3%83%95%E3%82%A9%E3%83%BC%E3%83%AB%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0%E3%81%A8richwidget%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86/</link><pubDate>Sun, 14 Jul 2019 14:16:05 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/9-4%E3%80%80%E3%82%B9%E3%82%AD%E3%83%A3%E3%83%95%E3%82%A9%E3%83%BC%E3%83%AB%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0%E3%81%A8richwidget%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86/</guid><description>テキストによるエクササイズの続きです。8.2　ウェブサービスのエクササイズ（OutSystems セルフトレーニング） Part 1: Add Cinemas at Warp Speed 前に画面を誰かが勝手に作ってくれたと思ったのは、スキャフォールドだったんですね。
勝手に作るんじゃなくて、ドラッグ&amp;amp;ドロップで作ってくれるというのも良いなと思います。
さらに画面へのドラッグ&amp;amp;ドロップで明細画面を追加してくれて、ポップアップエディタまで作ってくれるのはすごい。
で、ポップアップエディタは作ってくれましたが、Popup_InfoBalloonはダメでした。今度は検索したら選択肢には出てきますが、ドロップするとエラー。
もしかしてlondonじゃないから？
変えるのも大変そうだけど・・・
https://www.outsystems.com/forums/discussion/15489/changing-the-theme-of-my-application/#Post84632
Part 2: RichWidgets とりあえず進めてみる。
LayoutsOther¥Layout_Popup を選択するところは、LayoutOther が存在しないため、Layouts¥LayoutPopup を選択してみたが、削除することになっているHader もFooter もないので、やはり違うみたい。
MovieTable のStart Index プロパティに、List_Navigation_GetStartIndex(MovieTable.Id) を指定するとのことだが、エラーになってしまう。
それは諦めて、Dynamic Sortingの追加をしたら、またエラー。
一旦追加したList_SortColumn を削除したのですが、復活せず。
最後に破壊してしまいました。
とりあえず、この先は別のアプリを作ってみるエクササイズなので、OutSystems セルフトレーニングシリーズは、ここで一旦終了とします。</description></item><item><title>8.2　ウェブサービスのエクササイズ（OutSystems セルフトレーニング）</title><link>https://jqinglong.github.io/programmers-office/8-2%E3%80%80%E3%82%A6%E3%82%A7%E3%83%96%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%81%AE%E3%82%A8%E3%82%AF%E3%82%B5%E3%82%B5%E3%82%A4%E3%82%BA%EF%BC%88outsystems-%E3%82%BB%E3%83%AB%E3%83%95%E3%83%88/</link><pubDate>Sat, 13 Jul 2019 08:38:46 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/8-2%E3%80%80%E3%82%A6%E3%82%A7%E3%83%96%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%81%AE%E3%82%A8%E3%82%AF%E3%82%B5%E3%82%B5%E3%82%A4%E3%82%BA%EF%BC%88outsystems-%E3%82%BB%E3%83%AB%E3%83%95%E3%83%88/</guid><description>テキストによるエクササイズの続きです。7.4　セッションハンドリングのエクササイズ（OutSystems セルフトレーニング） Part 1: Add a Reference to a REST endpoint こんなサイトがあり、APIを提供している。
https://www.themoviedb.org/
Part 2: Define Site Properties for the API サイトプロパティの追加のみ
Part 3: Call a Web Reference method 画像を選択するところで、RichWidgetsが表示されないので、Header_Logoというものが選択できない。
まあ、普通のLogoでもよいか。
そして、ここではStyle Editorが登場する。
ServiceCenterでログも見られます、は良いが、詳細のリクエスト内容までは見えないですね。
Part 4: Implement a Web Service Callback OnAfterResponse というコールバックイベントが用意されています</description></item><item><title>7.4　セッションハンドリングのエクササイズ（OutSystems セルフトレーニング）</title><link>https://jqinglong.github.io/programmers-office/7-4%E3%80%80%E3%82%BB%E3%83%83%E3%82%B7%E3%83%A7%E3%83%B3%E3%83%8F%E3%83%B3%E3%83%89%E3%83%AA%E3%83%B3%E3%82%B0%E3%81%AE%E3%82%A8%E3%82%AF%E3%82%B5%E3%82%B5%E3%82%A4%E3%82%BA%EF%BC%88outsystems/</link><pubDate>Sat, 13 Jul 2019 08:35:51 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/7-4%E3%80%80%E3%82%BB%E3%83%83%E3%82%B7%E3%83%A7%E3%83%B3%E3%83%8F%E3%83%B3%E3%83%89%E3%83%AA%E3%83%B3%E3%82%B0%E3%81%AE%E3%82%A8%E3%82%AF%E3%82%B5%E3%82%B5%E3%82%A4%E3%82%BA%EF%BC%88outsystems/</guid><description>テキストによるエクササイズの続きです。6.4　ウェブブロックとUIを再利用してみよう（OutSystems セルフトレーニング） Part 1: Create and use Session Variables Find Usages みたいな技を教えてくれるのは良いですね
Part 2: Create and use Site Properties サイトプロパティを変えてもブラウザ再表示でMovie詳細画面のまま反映された。</description></item><item><title>6.4　ウェブブロックとUIを再利用してみよう（OutSystems セルフトレーニング）</title><link>https://jqinglong.github.io/programmers-office/6-4%E3%80%80%E3%82%A6%E3%82%A7%E3%83%96%E3%83%96%E3%83%AD%E3%83%83%E3%82%AF%E3%81%A8ui%E3%82%92%E5%86%8D%E5%88%A9%E7%94%A8%E3%81%97%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86%EF%BC%88outsystems-%E3%82%BB/</link><pubDate>Sat, 13 Jul 2019 05:45:17 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/6-4%E3%80%80%E3%82%A6%E3%82%A7%E3%83%96%E3%83%96%E3%83%AD%E3%83%83%E3%82%AF%E3%81%A8ui%E3%82%92%E5%86%8D%E5%88%A9%E7%94%A8%E3%81%97%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86%EF%BC%88outsystems-%E3%82%BB/</guid><description>テキストによるエクササイズの続きです。6.2　画面のライフサイクル: Ajaxのエクササイズ（OutSystems セルフトレーニング） Part 1: Create a Web Block for star ratings Placeholder のwidth はempty にはできず、Fullにしておく
Part 2: Make the stars in the Block clickable Search Box で「Notify」を検索することとなっているが、検索されない。
https://www.outsystems.com/forums/discussion/41219/notify-deprecated-in-service-studio-11-what-can-i-use-to-replace-it/
Manage Dependencies (ctrl + q) で探してくれは良いけど、Deprecated（廃止予定）ってどういうこと？そちらを教えて欲しい・・・
・・・一応その回答はこちら。
https://success.outsystems.com/Documentation/11/Developing_an_Application/Design_UI/Reuse_UI/Use_Events_to_Propagate_Changes_From_a_Block_to_the_Parent
これまでは、ウェブブロックの中でScreenAction（テキストではStarClicked）を定義して、それをNotifyするという仕組みだったのが、11では、ScreenActionとは別のEventというものが定義できるようになった。
Notifyのメッセージとして、値等（StarIterator.List.CurrentRowNumber + 1）を定義し、さらに親画面におけるウェブブロックインスタンスのDestinationとしてアクション（OnRatingNotify）を作成して指定する、と言う流れだったのが、バージョン11では、親画面でイベントに対応するハンドラを書く、と言う感じ？
そして、Destinationのアクション（OnRatingNotify）の記述として、Figure 26のような割と複雑なロジックを作っていくわけですが、これはどう書くのだろう・・・
ちょっとテキストがバージョン11に追いついていないので、ここは飛ばしていきます。
Eventsという形にしたのは悪くないと思うのですが。</description></item><item><title>6.2　画面のライフサイクル: Ajaxのエクササイズ（OutSystems セルフトレーニング）</title><link>https://jqinglong.github.io/programmers-office/6-2%E3%80%80%E7%94%BB%E9%9D%A2%E3%81%AE%E3%83%A9%E3%82%A4%E3%83%95%E3%82%B5%E3%82%A4%E3%82%AF%E3%83%AB-ajax%E3%81%AE%E3%82%A8%E3%82%AF%E3%82%B5%E3%82%B5%E3%82%A4%E3%82%BA%EF%BC%88outsystems-%E3%82%BB/</link><pubDate>Sat, 13 Jul 2019 02:12:50 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/6-2%E3%80%80%E7%94%BB%E9%9D%A2%E3%81%AE%E3%83%A9%E3%82%A4%E3%83%95%E3%82%B5%E3%82%A4%E3%82%AF%E3%83%AB-ajax%E3%81%AE%E3%82%A8%E3%82%AF%E3%82%B5%E3%82%B5%E3%82%A4%E3%82%BA%EF%BC%88outsystems-%E3%82%BB/</guid><description>テキストによるエクササイズの続きです。5.7　Input Validationのエクササイズ（OutSystems セルフトレーニング） Part 1: Add a comments sidebar to movie Container の幅指定の方法は変わっている。
Styles Editor を指定。
bold 、italic 設定もStyles Editor で。
CreateUserMovieComment はCoreUserMovieComment の中
Assign してReflesh すると言う流れを理解する</description></item><item><title>5.7　Input Validationのエクササイズ（OutSystems セルフトレーニング）</title><link>https://jqinglong.github.io/programmers-office/5-7%E3%80%80input-validation%E3%81%AE%E3%82%A8%E3%82%AF%E3%82%B5%E3%82%B5%E3%82%A4%E3%82%BA%EF%BC%88outsystems-%E3%82%BB%E3%83%AB%E3%83%95%E3%83%88%E3%83%AC%E3%83%BC%E3%83%8B%E3%83%B3%E3%82%B0/</link><pubDate>Sun, 07 Jul 2019 05:18:34 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/5-7%E3%80%80input-validation%E3%81%AE%E3%82%A8%E3%82%AF%E3%82%B5%E3%82%B5%E3%82%A4%E3%82%BA%EF%BC%88outsystems-%E3%82%BB%E3%83%AB%E3%83%95%E3%83%88%E3%83%AC%E3%83%BC%E3%83%8B%E3%83%B3%E3%82%B0/</guid><description>テキストによるエクササイズの続きです。5.5　Actionとコードを再利用してみよう（OutSystems セルフトレーニング） Part 1: Test the built-in validations Validation設定のServer とServer &amp;amp; Client を試す
Part 2: Add validations to editing a movie Feedbackメッセージを日本語で入力しようとしたら文字化けした！
ここまで長くなってくると全体が見通せなくなる。
一つ一つのプロパティを見ないと何をやっているのか分からない。
また、この辺でソース管理についての説明があると良いのでは
Part 3: Test the validations for editing a movie 動作確認
Part 4: Add validations for editing a person 自分でやってみよう、ということなので、一つだけやって、取り急ぎ進めます。
Part 5: Test the validations for editing people 動作確認</description></item><item><title>5.5　Actionとコードを再利用してみよう（OutSystems セルフトレーニング）</title><link>https://jqinglong.github.io/programmers-office/5-5%E3%80%80action%E3%81%A8%E3%82%B3%E3%83%BC%E3%83%89%E3%82%92%E5%86%8D%E5%88%A9%E7%94%A8%E3%81%97%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86%EF%BC%88outsystems-%E3%82%BB%E3%83%AB%E3%83%95%E3%83%88%E3%83%AC/</link><pubDate>Sun, 07 Jul 2019 02:02:36 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/5-5%E3%80%80action%E3%81%A8%E3%82%B3%E3%83%BC%E3%83%89%E3%82%92%E5%86%8D%E5%88%A9%E7%94%A8%E3%81%97%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86%EF%BC%88outsystems-%E3%82%BB%E3%83%AB%E3%83%95%E3%83%88%E3%83%AC/</guid><description>テキストによるエクササイズの続きです。5.3　データのクエリとウィジェットのエクササイズ（OutSystems セルフトレーニング） Part 1: Create a reusable Action 淡々と進めます
Part 2: Convert Action to a Function こうして作ったユーザアクションは、基本的には、ステートメントとしてのみ呼び出すことができる、方法はアクションフローへのドラッグ&amp;amp;ドロップ。
FunctionにすることでExpressionの中で呼ぶこともできるようになる。
やることはプロパティを変えるだけ
Part 3: Test calling an Action and a Function できるけど、分かったような分からないような（分かっていない）</description></item><item><title>5.3　データのクエリとウィジェットのエクササイズ（OutSystems セルフトレーニング）</title><link>https://jqinglong.github.io/programmers-office/5-3%E3%80%80%E3%83%87%E3%83%BC%E3%82%BF%E3%81%AE%E3%82%AF%E3%82%A8%E3%83%AA%E3%81%A8%E3%82%A6%E3%82%A3%E3%82%B8%E3%82%A7%E3%83%83%E3%83%88%E3%81%AE%E3%82%A8%E3%82%AF%E3%82%B5%E3%82%B5%E3%82%A4/</link><pubDate>Sat, 06 Jul 2019 14:52:54 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/5-3%E3%80%80%E3%83%87%E3%83%BC%E3%82%BF%E3%81%AE%E3%82%AF%E3%82%A8%E3%83%AA%E3%81%A8%E3%82%A6%E3%82%A3%E3%82%B8%E3%82%A7%E3%83%83%E3%83%88%E3%81%AE%E3%82%A8%E3%82%AF%E3%82%B5%E3%82%B5%E3%82%A4/</guid><description>テキストによるエクササイズの続きです。4.4　画面のライフサイクル: インタラクションのエクササイズ（OutSystems セルフトレーニング） Part 1: Add participants to a movie アクションからの「New Web Screen」で自動的には名前はつけてくれなかった。（Mac版だから？）
「Link」のプロパティの設定は、Widget Treeで「Actions」の中ににあるリンクを選択。
タイトル欄にExpressionを追加したのち、ムービータイトルを表示させるようにするための設定は、下記の図のような形でダブルクリックにより指定できる。
Windows環境とMac環境両方で開発している場合、すなわち、複数人で開発している場合、モジュール（今回でいうとOSMDb_Core）が変更された場合の再読み込みはそれぞれで行う必要がある（当たり前といえば当たり前）。
再読み込みを行なったいないために、データタイプにPersonMovieRoleが表示されなくて悩んだ。
Part 2: Test the ‘add participants’ to a movie ここまで順調にきたわけですが、ついにエラー発生。よりによって実行時エラー。開発環境側にはエラーはない。
こうなってしまうと、何をすれば良いか分からない。
が、もう少し冷静になって考えてみると、画面を開く時点でエラーになっているので、preparation が怪しいと考えられる。見てみると、赤ではないが黄色の波線。
SQLを実行してみるとエラー。ピリオドとカンマ！
ということで修正したら動きました。
SQL書いたらその場でテストしましょう。
Part 3: Display the participants of a movie ではPersonエンティティを取得した上で、PersonMovieRole もソースとして追加し、PersonMovieRoleへのフィルタとして、MovieId とActor を指定しようとしています。
しかし、このActor のフィルタ追加で、PersonRole はないよと言われています。正解は、PersonalRole。 その後Group By の設定をしますが、若干表現が異なります。
そして、それをやった後の画面も相当異なります。
Group By の設定を、テキストの画像にあるように、▽ボタンを押して行うのではなく、右クリックで行なったら、近い形になったので、こちら右リック推奨です。
Part 4: Search and filter the list of movies 淡々と進める</description></item><item><title>4.4　画面のライフサイクル: インタラクションのエクササイズ（OutSystems セルフトレーニング）</title><link>https://jqinglong.github.io/programmers-office/4-4%E3%80%80%E7%94%BB%E9%9D%A2%E3%81%AE%E3%83%A9%E3%82%A4%E3%83%95%E3%82%B5%E3%82%A4%E3%82%AF%E3%83%AB-%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%A9%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E3%82%A8/</link><pubDate>Wed, 03 Jul 2019 13:46:39 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/4-4%E3%80%80%E7%94%BB%E9%9D%A2%E3%81%AE%E3%83%A9%E3%82%A4%E3%83%95%E3%82%B5%E3%82%A4%E3%82%AF%E3%83%AB-%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%A9%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E3%82%A8/</guid><description>テキストによるエクササイズの続きです。4.2　リレーションのモデリングをしてみよう（OutSystems セルフトレーニング） Part 1: Add the ‘Edit Movie’ feature テキスト通り進められます。
途中で、Movieの中にGenreIdが表示されなくて、追加し忘れていたかと思ったら、追加はしたけど表示更新していなかったということでした。
とりあえず、テキストボックスをドラッグして幅を広げる際のデザイナの表示がかっこいい。こういうの待ってたよ！
Part 2: Add the ‘New Movie’ feature 最初に「＜＞」タブをクリックすると書かれていますが、現在のバージョン11では「Widget Tree」タブですね。
そしてテキストでは「Layout_London」が指定されていたのを今知る・・・
まあ、そのまま進めます。（後から変えられるのかな・・・）
Part 3: Test the creation and update of movies 動作確認
ちゃんと動いています
Part 4: Add the ‘Edit Person’ feature そのまま進めます
Part 5: Add the ‘New Person’ feature 衝撃の事実？
実はここまでにも若干気になっていたのですが、
People とPerson Detail が、結構出来上がっている。
フォームを自動的に作ってくれるので、ある程度上記でやってきたSaveボタンとかは自動的に作ってくれるのかなと思ったりしていたのですが、ちょっとできすぎじゃない？という気が・・・更新後のメッセージとか、このあと作るんじゃないの？みたいなのまでできている。
まさか、小人が作ってる？
そうじゃないとすると、他の人と被って更新している？同じ名前だとそんなことが起きうる？ちょっと変な感じ。</description></item><item><title>4.2　リレーションのモデリングをしてみよう（OutSystems セルフトレーニング）</title><link>https://jqinglong.github.io/programmers-office/4-2%E3%80%80%E3%83%AA%E3%83%AC%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E3%83%A2%E3%83%87%E3%83%AA%E3%83%B3%E3%82%B0%E3%82%92%E3%81%97%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86%EF%BC%88outsystems/</link><pubDate>Tue, 02 Jul 2019 12:21:56 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/4-2%E3%80%80%E3%83%AA%E3%83%AC%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E3%83%A2%E3%83%87%E3%83%AA%E3%83%B3%E3%82%B0%E3%82%92%E3%81%97%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86%EF%BC%88outsystems/</guid><description>Modeling Data Relationships Exercise
https://www.outsystems.com/learn/lesson/859/modeling-data-relationships-exercise/
3.3、3.6に続き、テキストをやってみます。3.6　ウィジェットを使ってみよう（OutSystems セルフトレーニング） Part 1: Create a foreign key between Entities テキスト通り
外部キーを追加する際に、カラムの型はデータ自体の型を指定するのではなく、データIdentifierを指定する、というのが面白い
Part 2: Create the junction Entities テキスト通り、関連テーブルのエンティティを作成
Part 3: Create an Entity Diagram リレーションの線が自動的に描画されるはずが、最初描画されずに、あれ？と思いましたが、画面をクリックすると表示されました。
Part 4: Publish the application module Management Dependencies画面は若干変わっている。</description></item><item><title>3.6　ウィジェットを使ってみよう（OutSystems セルフトレーニング）</title><link>https://jqinglong.github.io/programmers-office/3-6%E3%80%80%E3%82%A6%E3%82%A3%E3%82%B8%E3%82%A7%E3%83%83%E3%83%88%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86%EF%BC%88outsystems-%E3%82%BB%E3%83%AB%E3%83%95%E3%83%88%E3%83%AC/</link><pubDate>Sun, 30 Jun 2019 08:35:17 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/3-6%E3%80%80%E3%82%A6%E3%82%A3%E3%82%B8%E3%82%A7%E3%83%83%E3%83%88%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86%EF%BC%88outsystems-%E3%82%BB%E3%83%AB%E3%83%95%E3%83%88%E3%83%AC/</guid><description>Widgets I Exercise
https://www.outsystems.com/learn/lesson/876/widgets-i-exercise/
3.3と同様3.3　データのモデリングをしてみよう（OutSystems セルフトレーニング） テキストを進めます。
Part 1: Add a new module to the application まず「Responsive」ではなく「Web Responsive」になっている、ちょっと気になる。
また、ワークスペースの画面状態も、初期コンテントがない状態、ちょっと気になる。
Part 2: Reference Entities from core module 書いてある通り
Part 3: Retrieve and display the movie list テキストでは、既存のHomescreenの名前を変えることになっているが、新しくscreenを作る。
テンプレートはとりあえず「Empty」。名前は最初から「Movies」。
スクリーンの準備としてアグリゲートの指定をする。そこにエンティティを指定することでデータの取得処理が作られる。
スクリーンのコンテントにテーブルレコードを指定して、そのデータソースとして準備で取得したデータを指定する。
という流れですね。これで画面も表示されました。
Part 4: Retrieve and display a movie’s details 詳細画面の表示のさせ方＝画面へのデータの連携のさせ方は同様ですが、フィルタをかけて１件を表示対象とするということ。
なので、Input Parameter を設定する。
Widthを「8 col」に指定する、というところの画面説明がないですが、Stylesの中。
フォームの名前が自動的に変わると言われても、どこで確認できるか分かりませんでしたが、Widget Tree で見ることができました。
モデルの項目をドロップすると画面を構成してくれるのは大変助かります。
その際、テキストではラベルと入力域が左右に並ぶ形になっていますが、今回は縦に並ぶ形になってしまいました。
Part 5: Add a Screen to the top Menu そのまま</description></item><item><title>3.3　データのモデリングをしてみよう（OutSystems セルフトレーニング）</title><link>https://jqinglong.github.io/programmers-office/3-3%E3%80%80%E3%83%87%E3%83%BC%E3%82%BF%E3%81%AE%E3%83%A2%E3%83%87%E3%83%AA%E3%83%B3%E3%82%B0%E3%82%92%E3%81%97%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86%EF%BC%88outsystems-%E3%82%BB%E3%83%AB%E3%83%95/</link><pubDate>Sun, 30 Jun 2019 02:46:05 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/3-3%E3%80%80%E3%83%87%E3%83%BC%E3%82%BF%E3%81%AE%E3%83%A2%E3%83%87%E3%83%AA%E3%83%B3%E3%82%B0%E3%82%92%E3%81%97%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86%EF%BC%88outsystems-%E3%82%BB%E3%83%AB%E3%83%95/</guid><description>Modeling Data Exercise
https://www.outsystems.com/learn/lesson/875/modeling-data-exercise/
Lesson Materialsをダウンロードすると、その中にテキストPDFが入っているので、それを見て進めます。
テキストはバージョン10ベース、現在の最新環境は11のため、所々違うところが出てくると思われます。
Part 1: Create the application いきなり、Blank module templateを使うようにとなっていますが、それが見当たらない。（先を進めると、このことを言っているのではなく、最初のモジュールを作る時にBlankを選択するのだと分かりますが）
何かテーマを選んでみるか。
参考：http://annatokugawa.blog.fc2.com/blog-entry-45.html
とも思いましたが、またハマると嫌。
出来上がりイメージはトップメニューの形のようなので、「TOP MENU」テンプレートを選択します。
それ以降は、テキストの通り。
Part 2: Create Entities Mandatoryとは「必須」の意味。
で進めていってたら、キーボード入力を受け付けなくなった。mac版で進めるのはやはりリスキーだな・・・
一回終了したら正常化されました。なお、終了する際は、Uploadします。Saveではない、すなわち、これは実は全てサーバ管理になっているということですね。
Part 3: Create Static Entities データを追加していくのみ
Part 4: Publish the application module クリックするのみ。
ただ、「Template_TopMenu」が見つかりませんというメッセージ。
むう・・・テンプレートを選ばないこともできたのだろうか。
さらにタイムアウトになったりしましたが、再度ボタンを押すと成功します。
ただ、NOTEとして書かれている通り、この時点ではUIがないので、「Wrong URL address – this module does not contain a default entry.」というエラーメッセージが表示されるのみです。</description></item><item><title>OutSystems セルフトレーニング</title><link>https://jqinglong.github.io/programmers-office/outsystems-%E3%82%BB%E3%83%AB%E3%83%95%E3%83%88%E3%83%AC%E3%83%BC%E3%83%8B%E3%83%B3%E3%82%B0/</link><pubDate>Thu, 27 Jun 2019 12:07:25 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/outsystems-%E3%82%BB%E3%83%AB%E3%83%95%E3%83%88%E3%83%AC%E3%83%BC%E3%83%8B%E3%83%B3%E3%82%B0/</guid><description>OutSystemsもおもしろうそうなので、早速、WebAPIのデータを表示させるアプリを作ってみようかと思います。
その際、mac版を使ったところ、読み込み時にエラーになってしまう。Windows版では成功したということは、やはりmac版は多少不安定な面がるかもしれません。
そして、呼び出しはできる（WebAPI読み込みコンポーネントのようなものは作れる）ものの、それを画面のListに表示させる方法がいまいちわからない。
もう少し勉強しようということで、こちらをしばらくやってみたいと思います。
OutSystems セルフトレーニング
http://www.bluememe.jp/outsystems/outsystems_support/self_training.html
（しばらくこのページを随時更新していく形になります）
1　コースイントロダクション 日本語字幕あり（しばらくあるようなので、特筆しない限りは以降、日本語字幕ありです）
各セッションの概要
どういうアプリを作っていくか
映画管理
ホテル予約
試験制度
どんな問題が出るか
2　OutSystemsの基礎知識 2.1　OutSystems概要 development
quality
production
プラットフォームサーバ
コンパイル
デプロイ
管理
service studio
integration studio
service center
2.2　Service Studioとは ここで使われているのはバージョン10
基本的なIDE機能は概ね予想通り
最後にソースの競合、マージの説明
ソース管理ツールも統合されているイメージ
3　ウェブアプリ開発の基礎 3.1　画面のライフサイクル Webアプリケーションとは何か
ブラウザは何をするのか
静的リソースと動的コンテンツ
Preparationという概念を使用しており、その中でデータ取得等を行う
3.2　データのモデリング Entity→テーブルの行
Attribute→列
Service Studioのデータレイヤーで作成
名前からデータ型を推測してテーブルを作る！
例：Amount→Currency
3.3　データのモデリングをしてみよう これから行うExerciseの説明。（ビデオなし）
movie databaseのwebアプリケーションを作ります。
継続的に拡張、公開、テストを行います。
行う内容は
1.アプリケーション作成
2.最初のモジュールの作成
3.エンティティとbootstrapデータの作成
4.静的エンティティとレコードの作成
5.Outsystems webサーバでの公開</description></item><item><title>OutSystemsによるローコード開発？</title><link>https://jqinglong.github.io/programmers-office/outsystems%E3%81%AB%E3%82%88%E3%82%8B%E3%83%AD%E3%83%BC%E3%82%B3%E3%83%BC%E3%83%89%E9%96%8B%E7%99%BA%EF%BC%9F/</link><pubDate>Sun, 23 Jun 2019 12:36:57 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/outsystems%E3%81%AB%E3%82%88%E3%82%8B%E3%83%AD%E3%83%BC%E3%82%B3%E3%83%BC%E3%83%89%E9%96%8B%E7%99%BA%EF%BC%9F/</guid><description>先ほど色々システム構成図の画像をアップした中に、OutSystemsのものがあります。
OutSystemsとは 日本公式サイトだと、「コードレス開発」を謳っていますが、「ローコード開発」とか、色々言い方はあるようで。ソース生成型のツールで、いざとなったらソースいじることもできるようなので、「ローコード開発」の方がよいのでは。
http://www.bluememe.jp/outsystems/product/product-devops-dev.html
ASP.NETかJavaのソースを出力してくれるそうです。あまり何も考えずにチュートリアルをやってみたら、ASP.NET＋SQL Serverの環境を作ってくれたようです。
チュートリアルをやってみて 以前、Glide をやってみた時、Glideの味わい方〜オープンデータを活用しよう これは、本当に何もしないんだな、まさにコードレスだなと思いましたが、かなり近いところまで行っているようにも思います。
画面テンプレートを選択すると、サンプルデータで動く形までできていて、EXCELデータを指定すると、それをDBに登録して、そちらを参照するように変更してくれる、というのはスマートな作りだと思います。
このような画面を作るのですが、リスト用のデータと、グラフ用のデータをそれぞれ指定するだけでここまでできてしまいます。リストから詳細ページへの流れも、詳細画面は勝手にそれっぽく作ってくれるという点で、Glideと同様の発想かと思います。
.NETと言っているのでWindows版だけかと思ったら、technical previewとしてはmac版も提供されていました。
https://success.outsystems.com/Support/Enterprise_Customers/Maintenance_and_Operations/OutSystems_Service_Studio_for_Mac
個人用フリー版が用意されているのもうまいと思います。私も、もう少し使ってみたいと感じました。</description></item><item><title>システム構成図色々</title><link>https://jqinglong.github.io/programmers-office/%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E6%A7%8B%E6%88%90%E5%9B%B3%E8%89%B2%E3%80%85/</link><pubDate>Sun, 23 Jun 2019 11:30:35 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E6%A7%8B%E6%88%90%E5%9B%B3%E8%89%B2%E3%80%85/</guid><description>先日行ってきた、AWS Summit Tokyo 2019 と、Interop Tokyo 2019 でゲットしきた資料のシステム構成図色々。
こういうの参考にしたくなること多いですよね。</description></item><item><title>ぬるさくapi連携（失敗）</title><link>https://jqinglong.github.io/programmers-office/%E3%81%AC%E3%82%8B%E3%81%95%E3%81%8Fapi%E9%80%A3%E6%90%BA%EF%BC%88%E5%A4%B1%E6%95%97%EF%BC%89/</link><pubDate>Sat, 15 Jun 2019 22:05:24 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%81%AC%E3%82%8B%E3%81%95%E3%81%8Fapi%E9%80%A3%E6%90%BA%EF%BC%88%E5%A4%B1%E6%95%97%EF%BC%89/</guid><description>前回からの続きぬるさく画面に再チャレンジ 固定値による画面表示はできたので、実際にapiからデータを取得しようとしました。しましたが、ハードル上げすぎて失敗したので、一旦ハードルを下げようと思いますが、まず失敗の記録をしておきます。
ページ、および、それに伴うストア等の分割 やろうとしていることは、
Pagesの中に、boookフォルダと、todoフォルダを作って、それぞれのアプリを作った状態で、さらに、wineフォルダを作って、その中でぬるさく本のアプリを作ろうということです。
pages |--Lauter | |--index.vue |--README.md |--book | |--books | | |--_id.vue | |--index.vue |--index.vue |--login.vue |--todo | |--index.vue |--wine | |--index.vue | |--result.vue store |--README.md |--book.ts |--counter.ts |--index.ts |--modules | |--todoTypes.ts | |--todos.ts | |--userTypes.ts | |--users.ts |--root.ts |--todo.ts |--wine.ts ただ、すでに作成しているtodoは一部きれいに分けきれずに、indexの中にtodo固有のものが残ってしまっています。
また、wineについても、本の説明は、indexとして作っているサンプルがベースなので、まあ色々ハマりました。
本の該当箇所は、「4.7 API に投げるために Vuex を実装しよう」のあたりです。やりたいのは、「v-for=”i in 11″」を「-for=”wineAttr in wineAttributes”」にする、ということです。
apiについては、「http://0.0.0.0:5432/api/wine_attributes」が動いているのが前提です。
最初はこの辺のエラー対応です。
commons.app.js:21599 [vuex] unknown getter: GET_WINE_ATTR const gettersはexport const gettersにしないといけないのではないでしょうか。actionsも。自信はないですが、これにより呼ばれるようにはなりました。
また、本では触れられていませんが、githubのソースでは、index.d.ts で@nuxtjs/axios の記述があります。しかしそれをやると、</description></item><item><title>ぬるさく画面に再チャレンジ</title><link>https://jqinglong.github.io/programmers-office/%E3%81%AC%E3%82%8B%E3%81%95%E3%81%8F%E7%94%BB%E9%9D%A2%E3%81%AB%E5%86%8D%E3%83%81%E3%83%A3%E3%83%AC%E3%83%B3%E3%82%B8/</link><pubDate>Sat, 08 Jun 2019 23:24:33 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%81%AC%E3%82%8B%E3%81%95%E3%81%8F%E7%94%BB%E9%9D%A2%E3%81%AB%E5%86%8D%E3%83%81%E3%83%A3%E3%83%AC%E3%83%B3%E3%82%B8/</guid><description>以前Nuxt.js と Python でつくるぬるさく AI アプリ開発入門 途中で分からなくなってしまい中断していましたが、改めてやってみようと思います。
まずは、Vuetifyのスライダーでの入力画面と、amChartsのグラフ表示。
router-linkによるメニュー追加 現在、v-navigation-drawer &amp;gt; v-list &amp;gt; router-linkという階層で、メニューを作っており、、、が並んでいる状態で、ここに、を追加したいと思います。
そして、こんなものは、単にコピペーして、文字変えれば良いのではと思ったのですが、なかなか反応してくれません。
結構調べましたが、解消せず。最後の最後に、再起動（docker-compose down、 docker-compose up -d）を行ったら見事（？）反映されました。
Vuetify Slider コンポーネント 前回はスッキリ行きませんでしたが、今回はこれはあっさりできました。
components/FormCard.vue
&amp;lt;template &amp;lt;v-card class="ma-2 pa-1" &amp;lt;div class="subheading" Heading &amp;lt;/div &amp;lt;div class="caption" 1/11 &amp;lt;/div &amp;lt;v-slider class="px-5 pt-5 pb-3" thumb-label="always" height="3" hide-details&amp;lt;/v-slider &amp;lt;/v-card &amp;lt;/template &amp;lt;script lang="ts" import Vue from 'vue' export default Vue.extend({ }) &amp;lt;/script pages/wine/index.vue
&amp;lt;template &amp;lt;v-layout column &amp;lt;form-card v-for="i in 11" :key="'${i}'"&amp;lt;/form-card &amp;lt;v-btn @click="submit"診断結果を表示する&amp;lt;/v-btn &amp;lt;/v-layout &amp;lt;/template &amp;lt;script lang="</description></item><item><title>Firebase ユーザ認証機能を利用する</title><link>https://jqinglong.github.io/programmers-office/firebase-%E3%83%A6%E3%83%BC%E3%82%B6%E8%AA%8D%E8%A8%BC%E6%A9%9F%E8%83%BD%E3%82%92%E5%88%A9%E7%94%A8%E3%81%99%E3%82%8B/</link><pubDate>Sat, 01 Jun 2019 05:09:33 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/firebase-%E3%83%A6%E3%83%BC%E3%82%B6%E8%AA%8D%E8%A8%BC%E6%A9%9F%E8%83%BD%E3%82%92%E5%88%A9%E7%94%A8%E3%81%99%E3%82%8B/</guid><description>今回もこちらの続き。Vuetify の基本 今回も参考はこちら。
Nuxt × TypeScript でTodoListとユーザ認証を実装してFirebase Hostingにデプロイ [Tutorial – Part 5/5 – ユーザ認証の追加]
https://note.mu/tkugimot/n/n80c2e4b33bbc
で、ちょっと時間が空いてしまい、始める前に気づいたら、エラーが出ている。
This dependency was not found: nuxt_plugin_bootstrapvue_69bcb01f in ./.nuxt/index.js To install it, you can run: npm install --save nuxt_plugin_bootstrapvue_69bcb01f 書いてある通りnpm installしてもNot Foundと言われるだけ。
しかし、
docker-compose down
docker-compose up -d
で復旧。なんのこっちゃ。
Firebase Authentication機能の利用 手順としては、まず、package.jsonにfirebaseの記述を追加して、npm updateを実行するところから始まるのですが、ここで早速大量エラー。
概ねこんな感じ。
Can't find Python executable "python", you can set the PYTHON env variable. Failed at the grpc@1.20.0 install script. This is probably not a problem with npm.</description></item><item><title>Firebase Hostingにデプロイ</title><link>https://jqinglong.github.io/programmers-office/firebase-hosting%E3%81%AB%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4/</link><pubDate>Wed, 29 May 2019 13:37:55 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/firebase-hosting%E3%81%AB%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4/</guid><description>こちらの続き。Vuetify の基本 デザインについて、今参考にしているのはVuetify公式サイトのレイアウトサンプル。
https://vuetifyjs.com/ja/framework/pre-made-layouts
これとかすごいと思いますが、初心者はまだ手を出さないことにします。
Vue Material Admin
https://vuejsprojects.com/vue-material-admin
Firebase Hostingにデプロイ 引き続き、こちらを参考に。
Nuxt × TypeScript でTodoListとユーザ認証を実装してFirebase Hostingにデプロイ [Tutorial – Part 4/5 – Firebase Hostingにデプロイ]
https://note.mu/tkugimot/n/n44c327a22c24
最終的にはGCPにリリースする予定ですが、Firebaseも勉強してみたいので、流れに沿ってやってみます。
npm install -g firebase-tools でfirebase-toolsのインストール、
firebase login でログインして、プロジェクト作成して、というところは書いているまま。
この次の
firebase init をどこで実行すべきか？
今現在nuxtアプリを作っている、すなわち、componentsとかlayoutsとかが存在するフォルダで実行します。
最初
? What do you want to use as your public directory?
に対して、初期値のpublicで進めてしまいましたが、distを指定すべき。
? Configure as a single-page app (rewrite all urls to /index.html)?
はNoでよいかと。
ところが、
npm run build で大量エラー。</description></item><item><title>Vuetify の基本</title><link>https://jqinglong.github.io/programmers-office/vuetify-%E3%81%AE%E5%9F%BA%E6%9C%AC/</link><pubDate>Sun, 19 May 2019 13:21:48 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/vuetify-%E3%81%AE%E5%9F%BA%E6%9C%AC/</guid><description>Nuxt.jsでTodoList機能を作りながら、Vuetifyの基本を学習。
こちらを参考に、進めています。
https://note.mu/tkugimot/n/n47218fd1eec5
なんとか自力で問題解決できたので、既存のアプリに機能追加する形で動かすことができました。
上記サイトでは、次に、デザインを整えることになります。で、そこではbulmaを使っているのですが、できればあれこれ手を広げたくないので、Vuetifyで作ってみることにします。
全体デザインについて、上記サイトでは、「ヒーロー」というパターンを使っています。「ヒーロー」なんていうデザインのパターンがあるのですね。
簡単にVuetifyでもそんな指定ができたら良いかと思いましたが、そういう名前のものがあるわけではなさそう、かつ、メニュー構造は必要なので、Vuetify公式サイトのレイアウトサンプルから選択することにし、一番基本的な「Baseline」を使ってみることにします。
https://vuetifyjs.com/ja/framework/pre-made-layouts
最初は、部分的に移植しようと思いましたが、それだとレイアウト崩れが発生してしまうため、逆に、いったん、layouts/default.vueを書き換えてしまってから、必要な部分を戻す、という形にしました。
また、Todoの一覧表示のところに関しても、bulmaを使用していると思われるため、そのままではなく、各詳細情報は、v-cardを使用するようにしました。これも、サンプルメージを参考にしてなんとかなったような、なってないようなです。（幅指定がよくわからない・・・）
また、テキスト入力欄も、v-text-fieldを使用して、プレースホルダよりラベル表示の方が面白いと思い、それで作りました。
なお、入力位に自動でイベントを発生させる際に、このやり方だと日本語変換確定のEnterでも反応してしまって本当は良くありません。
下記のサイトに記載の通りですが、今はここは対応保留としておきます。
[Vue.js] 日本語変換の確定でkeyup.enterが発火してしまうのを防ぐhttps://qiita.com/h-orito/items/6d99e2256074132d7867
カードの並べ方等、もう少し綺麗にできたら良いのでしょうが、一旦これで、次に進みます。</description></item><item><title>Nuxt.js環境の学習継続中</title><link>https://jqinglong.github.io/programmers-office/nuxt-js%E7%92%B0%E5%A2%83%E3%81%AE%E5%AD%A6%E7%BF%92%E7%B6%99%E7%B6%9A%E4%B8%AD/</link><pubDate>Sun, 19 May 2019 02:24:44 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/nuxt-js%E7%92%B0%E5%A2%83%E3%81%AE%E5%AD%A6%E7%BF%92%E7%B6%99%E7%B6%9A%E4%B8%AD/</guid><description>Nuxt.js開発を進めるためには、もう少し学習が必要ということで、入門サイトを見てみたりしていますが、なかなか思う方向には進んでくれません。その苦労の足跡を残します。（ごちゃごちゃになりすぎて記憶も飛び気味ですが）
やりたいことのゴールはこちらタイタニックアプリを作ろう（Nuxt.js 開発環境の基本） 入門用サイト 本当はまずやりたいのはヌルサクです。Nuxt.js と Python でつくるぬるさく AI アプリ開発入門 ただ、結構端折られているところも多く、また、微妙に最新環境でないところがあって、初心者にはエラー対処が難しかったりするため、もう少し入門的なところから始めたいと思いました。そして、それはそれで色々参考になるサイトがあるのですが、これもなかなかそのままは動いてくれなかったりして、苦労しました。
Nuxt × TypeScript でTodoListとユーザ認証を実装してFirebase Hostingにデプロイ https://note.mu/tkugimot/n/nfe81dbbe8bad
こちらのサイトは、入門者の立場から、gitの使い方的なところにも配慮しながら進めてくれるので、非常に勉強になります。
それでもたまにそのままでは動かないところがあったりして、例えば、
3.Todoの module と Component を準備する
の時点でのpages/index.vueは
&amp;lt;template &amp;lt;Todos / &amp;lt;/template ではなくて
&amp;lt;template &amp;lt;TodoList / &amp;lt;/template ですよね、みたいなのがあったりします。
また、結構
implicitly has an ‘any’ type.
で怒られることが多く、「: any」をつけて対処したりしてたのですが、それで良いのか、理解できていません。
さらに、
module namespace not found in mapGetters(): todos/
みたいなエラーが出て、これは解消できずにとりあえず進めたりしました。
その後も色々なエラーを解消できず、もう一度最初からやり直してみても最後には上記エラーに引っかかってしまう状態から抜けられず、途中で一旦中止しました。
（追記）
この問題は解消しました。
store/modules/todos.ts
という構造になっているので、
// export const name = 'todos'; export const name = 'modules/todos'; とすることにより、エラー解消しました。</description></item><item><title>Docker内のNuxt.jsサイトを公開する</title><link>https://jqinglong.github.io/programmers-office/docker%E5%86%85%E3%81%AEnuxt-js%E3%82%B5%E3%82%A4%E3%83%88%E3%82%92%E5%85%AC%E9%96%8B%E3%81%99%E3%82%8B/</link><pubDate>Fri, 10 May 2019 20:49:51 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/docker%E5%86%85%E3%81%AEnuxt-js%E3%82%B5%E3%82%A4%E3%83%88%E3%82%92%E5%85%AC%E9%96%8B%E3%81%99%E3%82%8B/</guid><description>Docker内に構築したNuxt.jsのサイトを公開する、条件として、公開サイトもDockerで構築し、かつ、ソースはボリューム機能でDocker外と共有とする。無料で。
なかなかハードルが高かったですが、できました！
Docker環境をどこに公開するか 無料公開と考えた場合に、1年の期間制限のAWSは対象から外します。そして、本サイト自体がGCEで立っているので、一旦それも除外。そこで検討したのが、Azureです。
Azure App Service Azureでは、素のApp Serviceは無料プランがあります。
App Service の価格
https://azure.microsoft.com/ja-jp/pricing/details/app-service/windows/
この素のサービスはPaaSなので、Dockerをインストールして環境構築するということはできません。これと連携してコンテナを読み込む、Web App for Containersというサービスがありますが、これは無料プランでは利用できません。さらに、通常であれば利用を検討すべきContainer InstancesとかAKS（Azure Kubernetes Service）というものもありますが、これらも有料プランのみです。
色々苦労した挙句、無料でDockerコンテナを立ち上げるのは無理ということで、あきらめました。
Heroku Herokuでもコンテナを読み込んでリリースする機能が提供されています。
https://devcenter.heroku.com/articles/container-registry-and-runtime
これは無料で使えるプランもあるのですが、Volumeはサポートされていません。
なぜVolumeを使いたいかというと、ローカルの開発環境もDockerで構築したい、それと同一の環境をリリース環境に持っていきたい、ただ開発ツールはクライアントに持つことになるのでソースはローカルに持ちたい、そのソースをコミットすることでリリース環境にも反映したい、という理由です。
そういう意味で、最近話題の、VSCodeのRemote Development機能
https://crieit.net/posts/VSCode-Remote-Development
開発ツールをローカルに持ちつつソースはローカルに持つ必要がないという意味ですごいと思うのですが、複数人開発と考えた時にはどうなんだろうとも思ったりします。
さくらArukas https://arukas.io/
今回試しませんでしたが、これもHerokuと同様、Volumeはサポートされません。ただ、無料プランが提供されているのは発見でした。
GCE（Google Compute Engine） 結局VMをそのまま使わせてもらえる環境でなければ今回の条件には合わない、と理解し、そうなると使えるのはGCEしかないのでは、という結論になりました。すでにDocker立てているわけですが、そこはDocker。複数立てることもできるわけです。ということで、もう一つDocker環境を立てることにしました。
公開用Docker構築 前回タイタニックアプリを作ろう（Nuxt.js 開発環境の基本） ここではなるべくシンプルなDockerファイルを目指して設定をしましたが、これはDockerをUpした後にサービスを起動しなければならないということです。
そうではなく、Upと共にNuxtサービスも立ち上げるということで試行錯誤しました。
まず、最初はDocker Build、あるいはUpでのエラー。
ERROR: Service ‘app’ failed to build: containerd-shim not installed on system
DokerファイルをいじるとBuildだけはできたりして、大いに悩みましたが、最終的には、VMリスタートで解消。時間を返せ・・・
再起動したらしたで、既存のDocker＝本サイトが立ち上がらないという問題発生！原因は、先にApaheが起動していてポート80を取られていたため。サービスを落として再度実行により問題解消。かなりの時間を費やして、やっと本題。
最終的には下記のサイトを大いに参考にさせていただきました。
dockerでnuxt.jsの環境を作ってみる
https://qiita.com/reflet/items/e7c33f84ab43ab237ee4
Dockerfile
FROM node:12.1.0-alpine WORKDIR /app RUN npm install --global @vue/cli @vue/cli-init WORKDIR /app/titanic-client RUN yarn install ENV HOST 0.</description></item><item><title>タイタニックアプリを作ろう（Nuxt.js 開発環境の基本）</title><link>https://jqinglong.github.io/programmers-office/%E3%82%BF%E3%82%A4%E3%82%BF%E3%83%8B%E3%83%83%E3%82%AF%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86%EF%BC%88nuxt-js-%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83%E3%81%AE%E5%9F%BA%E6%9C%AC/</link><pubDate>Sun, 05 May 2019 00:21:17 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%82%BF%E3%82%A4%E3%82%BF%E3%83%8B%E3%83%83%E3%82%AF%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86%EF%BC%88nuxt-js-%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83%E3%81%AE%E5%9F%BA%E6%9C%AC/</guid><description>Kaggleのタイタニック問題は、機械学習の基礎として面白いので、それを活用し、かつ、技術書典の2冊で学んだことも生かして、アプリを作ってみましょう。
Kaggleのタイタニック問題で機械学習  Nuxt.js と Python でつくるぬるさく AI アプリ開発入門 コンテナ時代のWebサービスの作り方 環境のイメージ たどり着けるかわかりませんが、ゴールのイメージとしては、下記のようになります。
ローカルにDockerでNuxt.jsのWebアプリ環境 Jupyter Notebookで機械学習環境を作り、responder のAPIサービス環境はDockerで Dockerプライベートでレジストリとして、GitLab Container Registry プライベートレジストリからAzure App Service に公開 DockerによるNuxt環境構築 今回フォルダ構成はこのようにしています。
titanic -app --docker-compose.yml --client ---Dockerfile --server ---Dockerfile 参考にさせていただいたのはこちら。
Nuxt.jsの動作環境をdockerで作る
https://qiita.com/FrozenVoice/items/2ae89ce820cade84924e
若干新しいバージョンに変更しました。
client/Dockerfile
FROM node:12.1.0-alpine RUN mkdir /app WORKDIR /app RUN npm install -g vue-cli ENV HOST 0.0.0.0 EXPOSE 3000 docker-compose.yml
version: '3' services: app: build: ./client volumes: - ./client:/app ports: - "</description></item><item><title>Kaggleのタイタニック問題で機械学習</title><link>https://jqinglong.github.io/programmers-office/kaggle%E3%81%AE%E3%82%BF%E3%82%A4%E3%82%BF%E3%83%8B%E3%83%83%E3%82%AF%E5%95%8F%E9%A1%8C%E3%81%A7%E6%A9%9F%E6%A2%B0%E5%AD%A6%E7%BF%92/</link><pubDate>Fri, 03 May 2019 02:30:04 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/kaggle%E3%81%AE%E3%82%BF%E3%82%A4%E3%82%BF%E3%83%8B%E3%83%83%E3%82%AF%E5%95%8F%E9%A1%8C%E3%81%A7%E6%A9%9F%E6%A2%B0%E5%AD%A6%E7%BF%92/</guid><description>ぬるさくで学んだ基礎を生かして、アプリを作ってみよう！
ぬるさくの学習はこちらNuxt.js と Python でつくるぬるさく AI アプリ開発入門 参考はこちら【Kaggle初心者入門編】タイタニック号で生き残るのは誰？ Kaggleの説明もこちら
Kaggleとは？機械学習初心者が知っておくべき3つの使い方 そしてKaggleの入門用コンペ
Titanic: Machine Learning from Disaster
https://www.kaggle.com/c/titanic
最初にプロジェクト用のディレクトリ（例：titanic）を作成し、その中にdatasetフォルダを作成して、ダウンロードしたデータを配置。
さらにworkspaceディレクトリも作成。
Anaconda-Navigatorを起動
Notebookを起動
プロジェクト用のディレクトリのworkspaceに移動
New &amp;gt; Python 3
そうすると
import pandas as pd import numpy as np train = pd.read_csv("../dataset/train.csv") test = pd.read_csv("../dataset/test.csv") で行ける。
「データセットの欠損の確認」のスクリプトは、そのまま貼り付けるとインデントが効いていないので注意。
「文字の数字への置き換え」のところでエラー発生。
train["Sex"][train["Sex"] == "male"] = 0 train["Sex"][train["Sex"] == "female"] = 1 train["Embarked"][train["Embarked"] == "S" ] = 0 train["Embarked"][train["Embarked"] == "C" ] = 1 train["</description></item><item><title>Nuxt.js と Python でつくるぬるさく AI アプリ開発入門</title><link>https://jqinglong.github.io/programmers-office/nuxt-js-%E3%81%A8-python-%E3%81%A6%E3%82%99%E3%81%A4%E3%81%8F%E3%82%8B%E3%81%AC%E3%82%8B%E3%81%95%E3%81%8F-ai-%E3%82%A2%E3%83%95%E3%82%9A%E3%83%AA%E9%96%8B%E7%99%BA%E5%85%A5%E9%96%80/</link><pubDate>Thu, 02 May 2019 06:49:11 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/nuxt-js-%E3%81%A8-python-%E3%81%A6%E3%82%99%E3%81%A4%E3%81%8F%E3%82%8B%E3%81%AC%E3%82%8B%E3%81%95%E3%81%8F-ai-%E3%82%A2%E3%83%95%E3%82%9A%E3%83%AA%E9%96%8B%E7%99%BA%E5%85%A5%E9%96%80/</guid><description>技術書典6で購入した本2冊目。
これも素晴らしい。#技術書典6 の #ぬるさくAI ですが 14時に完売しました！！
ご購入いただいた皆様、本当にありがとうございました！！！
BOOTHでのpdf販売を同時に開始しましたので
ぜひ、#技術書典 にお越しいただけなかった方、ご購入ください！https://t.co/S7fajL0B8o &amp;mdash; takayama.k (@pco2699) April 14, 2019 なんとか連休中に平成最初のリリースまで持って行きたかったのですが、色々つまり出してきたので、実際に何かを作ってリリースするところを目指したいと思い、Docker環境構築までで一旦まとめておきたいと思います。
Jupyter Notebook いきなり、あなたの知らない世界で、Jupyter Notebook のインストールから。
こちらなども参考に。
https://techacademy.jp/magazine/17430
まずはAnaconda をインストール。Anaconddaで2.3GBも使うんですね・・・
インストールしたら、
Enviroments &amp;gt; 「analytics」
Notebookをインストールしようとして間違えてJupyterLabをインストールしてしまいました。そうしたらNotebookも勝手に入りました。
3.3.1 データセットを読み込む 第１章、第２章も読み応えありますが、作り始めるのは第３章からになります。
初めてJupyter Notebook を使う身としては、色々不明点を抱えながら進めます。どうやって実行するんだ、というところから始まりますが、Runボタンで実行です。
実行すると、エラー。
ModuleNotFoundError Traceback (most recent call last) &amp;lt;ipython-input-2-aed2979e33dd in &amp;lt;module 1 # 分析に必要なライブラリをインポート ---- 2 import pandas as pd 3 import numpy as np 4 5 # データセットを読み込む ModuleNotFoundError: No module named 'pandas' 先に</description></item><item><title>コンテナ時代のWebサービスの作り方</title><link>https://jqinglong.github.io/programmers-office/%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E6%99%82%E4%BB%A3%E3%81%AEweb%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%81%AE%E4%BD%9C%E3%82%8A%E6%96%B9/</link><pubDate>Sat, 27 Apr 2019 15:06:46 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E6%99%82%E4%BB%A3%E3%81%AEweb%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%81%AE%E4%BD%9C%E3%82%8A%E6%96%B9/</guid><description>技術書典6で購入した本１冊目。
ガチで役に立つ本でした。
コンテナ時代のWebサービスの作り方 | 楽描商店 https://t.co/xFdOX3orNn 技術書典6で頒布した本をboothにて委託しております。ご活用ください。#booth_pm #技術書典 &amp;mdash; とまと（nasum）技術書典え35楽描帳 (@tomato360) April 14, 2019 とりあえず、76/103ページまでやってみました。ここまで行くと、ソースをコミットしたら自動的にサイトに反映される仕組みが動きます。
が、多少悪戦苦闘したところもありますので、その辺をメモ。
リージョン 書籍では、東京リージョン（ap-northeast-1）を使うことになっていますが、元々オハイオを使っていたのでそちらのus-east-2を使うことにしてみました。
すると、
The image id '[ami-785c491f]' does not exist となります。これはリージョンによって異なるので、ami-8b92b4eeに変更します。（参考）https://docs.docker.com/machine/drivers/aws/
Terraform Terraform初体験。インフラをコードで定義するとはこういうことなんだ。
しかし、これも簡単に進ませてはくれません。
Error inspecting states in the "s3" backend: BucketRegionError: incorrect region, the bucket is not in 'us-east-2' region status code: 301, request id: , host id: 今回一番ハマったかもしれないのはこのエラー。
例えば、
aws s3 ls なんかを叩くと帰ってくるので、この接続でs3の所定のバケットが見えていないわけでもない。結局、フォルダ全体を一回消して、再度やり直したらOKという最悪パターンでした。
また、実際の発生順序は前後しますが、さらに進んでまたこのエラーが出るようになりましたが、書籍だと、aws_route_table.tf、aws_route_table_association.tfが、間違っているのでgithub（書籍に記載あり）のソースを見て記載しました。
rubyバージョン 元々のローカル環境がruby2.3.7だったのが悪いと思うのですが、最初にそれで進めてしまい、いざbuildが動くと
You must use Bundler 2 or greater with this lockfile が出るようになってしまいました。</description></item><item><title>Glideの味わい方〜オープンデータを活用しよう</title><link>https://jqinglong.github.io/programmers-office/glide%E3%81%AE%E5%91%B3%E3%82%8F%E3%81%84%E6%96%B9%E3%80%9C%E3%82%AA%E3%83%BC%E3%83%97%E3%83%B3%E3%83%87%E3%83%BC%E3%82%BF%E3%82%92%E6%B4%BB%E7%94%A8%E3%81%97%E3%82%88%E3%81%86/</link><pubDate>Thu, 18 Apr 2019 11:24:15 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/glide%E3%81%AE%E5%91%B3%E3%82%8F%E3%81%84%E6%96%B9%E3%80%9C%E3%82%AA%E3%83%BC%E3%83%97%E3%83%B3%E3%83%87%E3%83%BC%E3%82%BF%E3%82%92%E6%B4%BB%E7%94%A8%E3%81%97%E3%82%88%E3%81%86/</guid><description>Xamarinなかなか踏み込んでくれないなと感じたりしています。
Xamarin 最近どうよ？ – Qiita
https://qiita.com/amay077/items/399002a02c1abf9d620b
こちらの記事は面白く、中で紹介されている、Xamarin.Forms Visualの画像を見ると、「よいのでは！」と思いますが、さてどうなることやら・・・
これに対して、上記記事でも紹介されているGlideが、めちゃくちゃ踏み込んできていて面白い。
Glide
https://www.glideapps.com/
ノンコーディング、ノンデザインセンスで、綺麗なアプリがすぐに作れる。本当にすぐに。ただし、データがあれば。私も、常々、コンテンツを持っている人は強いなと思っており、そういう人とコラボして面白いものを作りたいと思っているのですが、まあ普通の人はもしかしたら、簡単にアプリが作れると言っても、響かないのかもしれません。しかし、・・・
オープンデータがある！ オープンデータの定義は
① 営利目的、非営利目的を問わず二次利用可能なルールが適用されたもの
② 機械判読に適したもの
③ 無償で利用できるもの
となります。
https://cio.go.jp/policy-opendata
カタログサイトも提供されているので、色々な観点で見てみると、興味があるデータもあるのではないでしょうか。それを、アプリを通じて活用できたら面白いのではと思いました。
Glide実践 では、実際のデータを使用して、アプリを作ってみます。
データ登録 今回は、「港区観光施設」データを使用してみます。
http://www.city.minato.tokyo.jp/opendata/kanko/index1.html
CSVで提供されているので、ダウンロードします。
ダウンロードしたら、すかさず、Googleドライブにアップします。
アップして、すかさず開き、すかさずGoggleスプレッドシートで開きます。
データ加工 これだけでアプリ作成に行けますが、あえて最初からデータ加工してみます。
「港区観光施設」データをみると、「エリア名称」と「種別」でカテゴリ分けされていることが分かります。アプリでも、この二つのカテゴリで絞り込みできるようにします。
まず、ファイル名は「港区観光施設」とし、元のシートは「施設一覧」に名前を変更します。次に、シートを追加し、シート名を「エリア名称」とし、A1の値も「エリア名称」とします。
次に、A2に「=Unique」と打ち込みますと、入力アシスタンスが起動しますので、クリックし、「施設一覧」シートのB列を選択します。Enterにより、「エリア名称」シートは値がグルーピングされた状態で表示されます。すごい。
（なお、94行目に余計なデータがあることが分かりますので、行削除してしまいます）
で、これだと1行目の「エリア名称」も含まれてしまうので、「=UNIQUE(‘施設一覧’!B2:B)」とします。これできれいになります。
同じように、「種別」シートも作成します。
次に、両シートに細工します。「エリア名称」のB列の1行目を「施設=施設一覧:エリア名称:multiple」として、各行をA列を参照するようにします。「種別」シートも同様です。
これで準備完了です。
Glide基本作成 Glideにログインします。
「＋」でアプリ追加を行います。先ほど作成したファイルを指定して、「Select」クリックにより、アプリが生成されます。
基本的にはこれで動くアプリができています。ただし、さすがに、どの項目をどういう配置で表示するかは指定してあげないといけません。
今回のデータだと、施設一覧データの先頭2列が表示されてしまっているので、これを変更します。しかしそれも簡単です。Titleに「名称」、Detailsに「所在地」を指定すると、それっぽくなると思います。
データを1行選択すると、詳細ページに遷移します。
こちらでも、各項目の設定をします。１項目目のSummaryは、「名称」「種別」が良いかなと思うので変更し、「名称」「種別」「緯度」「経度」は不要かと思うので削除します。さらに、右上の「＋」で項目追加ができますので、ここでMapを指定します。Address欄に「所在地」を指定することで自動的に地図が表示されます。
「エリア名称」「種別」は基本項目が１項目しかないので、明細は自動表示で問題なしです。クリックした先の施設一覧情報は、Inline listの項目を調整します。
完成です！
今回作ったアプリはこちら。
https://minatoku-kanko.glideapp.io/
Glide仕組みのポイント いきなり単純データを指定してアプリを作ってから、シートを直してもReload sheetにより反映されますので、最初はそのようにしてカスタマイズしていくのが面白いと思います。
一番のポイントは、Inline listの作り方ではないかと思います。上ではさらっと書きましたが、Inline listを作るために、シートに細工をします。最初に行った、multipleの指定です。
シートの中に、multipleの指定を行うと、その項目をInline listに指定することができます。
もう少し具体的に書くと、ある詳細画面に１データを表示している際に、その中に、子データを明細表示できるのが、Inline listです。今回の上記アプリでは、エリアの詳細情報（と言っても今回は１項目だけですが）の中に、エリアに紐づく施設を子データとして明細表示している形になっています。子データというからには、キーによる紐付けが必要で、その定義を1行目の項目記述で行なっています。
「施設=施設一覧:エリア名称:multiple」という記述では、子データの情報名が「施設」、その子データがどこに存在するかが「施設一覧」、紐付けキーが「エリア名称」、そして子データとして複数明細存在することを示す「multiple」という構造になっています。
他にも作ってみました。 面白いので量産しています。</description></item><item><title>MacでVisual Studio 2019</title><link>https://jqinglong.github.io/programmers-office/mac%E3%81%A7visual-studio-2019/</link><pubDate>Sat, 13 Apr 2019 23:47:31 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/mac%E3%81%A7visual-studio-2019/</guid><description>Visual Studio 2019がリリースされ、Mac版にも対応されていますので、インストールしてみます。
最初にメッセージが出ますが、インストール中2、３回パスワード入力が必要ですので、完全放置はできませんでした。
インストールしたら、サンプルとして
https://docs.microsoft.com/ja-jp/xamarin/cross-platform/samples/
Acquaint
⁨app-acquaint⁩/App⁩/Acquaint.XForms.sln
を開きますが、UWPは対応していないというメッセーが出るので、ソリューションからは削除します。
で、左上に「Xcode 10.2でコマンドラインツールがありません」というメッセージが出ているので、これはインストールしてしまいます。
https://developer.apple.com/download/more/
次に、「アクティブな構成内でプロジェクトがビルドされていません」というメッセージが出て、ビルドが完了しませんが、これは下記が参考になりました。
http://kuxumarin.hatenablog.com/entry/2016/12/01/Xamarin.iOS_%E3%81%AE%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%A7_%22%E3%82%A2%E3%82%AF%E3%83%86%E3%82%A3%E3%83%96%E3%81%AA%E6%A7%8B%E6%88%90%E5%86%85%E3%81%A7%E3%83%97%E3%83%AD
ビルドするとそれでも警告は残っていますが、実行すると、何も設定をしていないのでさすがにデータ保存はできませんが、とりあえず、最初の画面表示はできました。</description></item><item><title>Adobeの行く先</title><link>https://jqinglong.github.io/programmers-office/adobe%E3%81%AE%E8%A1%8C%E3%81%8F%E5%85%88/</link><pubDate>Wed, 10 Apr 2019 11:25:40 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/adobe%E3%81%AE%E8%A1%8C%E3%81%8F%E5%85%88/</guid><description>アドビ、3月1日付けでマルケトとの統合を完了（2019年3月6日）
https://www.adobe.com/jp/news-room/news/201903/20190306-adobe-marketo-integration.html
「この度の統合によりデジタルにおける顧客体験において、アドビがもつ分析、コンテンツ管理、パーソナライゼーション、広告、コマースといった様々なソリューションに加え、マルケトのリード管理およびアカウントベースドマーケティング技術を合わせて両社のお客様に提供することが可能になります。」
それに先行して
アドビ、Magento Commerceを買収
https://www.adobe.com/jp/news-room/news/201805/20180522-magento-commerce.html
Magento Commerce Cloudが組み込まれることにより、コマース機能がAdobe Experience Cloudにシームレスに一体化され、B2BとB2C両方の世界中のお客様に単一のプラットフォームを提供できるようになります。
両製品の位置づけ https://www.adobe.com/jp/what-is-adobe-experience-cloud.html
Adobe Experience Cloudという製品群の中で
分析：Adobe Analytics
オーディエンスのプロファイル：Adobe Audience Manager
・・・
コマース：Adobe Magento
B2Bマーケティング：Marketo
そもそも、Experience Cloudの位置づけ Creative Cloud：PhotoshopやIllustrator等の提供　一般的（昔からの）なAdobeのイメージ？
Experience Cloud：単一のクラウド基盤に統合された、「エクスペリエンスのための記録システム」
Document Cloud：Acrobat など　これも昔からのAdobeイメージ
すなわち、昔ながらのビジネス領域でもクラウド化を進める中で、クラウド自体を基盤としたビジネスも展開し始めているということのよう。
所感 内容が分かりにくすぎる。
Adobe Analytics？Google Analytics的なことを意図しているのは分かりますが、具体的に何ができて、どういう仕掛けが必要なのか、一般情報から何もわからないのは、導入の検討のしようもないかと思います。
個人的には、ビジネス利用としては、Magento、Marketoがより充実したサポートが得られるようになることを期待しつつ、本当はその一つ手前に、CMSが主戦場としてあるべきで、Adobe Experience Manager Sitesがそこを担っているように思われますが、あまりにも情報不足なので、無料提供含めて利用者層を拡大するのが良いのでは。その際の強みは、デザインツールとの統合で、ビジュアル面に優れたサイト構築ができること、かと思います。
期待してます。</description></item><item><title>LINEリッチメニューのコツ</title><link>https://jqinglong.github.io/programmers-office/line%E3%83%AA%E3%83%83%E3%83%81%E3%83%A1%E3%83%8B%E3%83%A5%E3%83%BC%E3%81%AE%E3%82%B3%E3%83%84/</link><pubDate>Sun, 31 Mar 2019 12:55:03 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/line%E3%83%AA%E3%83%83%E3%83%81%E3%83%A1%E3%83%8B%E3%83%A5%E3%83%BC%E3%81%AE%E3%82%B3%E3%83%84/</guid><description>ネタは熱いうちに打たないと、テンションはすぐ下がりますね。
まずは、小ネタで、リッチメニューについて。
リッチメニューとは何かについては、
https://www.google.com/search?q=line+%E3%83%AA%E3%83%83%E3%83%81%E3%83%A1%E3%83%8B%E3%83%A5%E3%83%BC&amp;amp;source=lnms&amp;amp;tbm=isch&amp;amp;sa=X&amp;amp;ved=0ahUKEwjChdXvsazhAhVXyIsBHbDIDCAQ_AUIDigB&amp;amp;biw=1628&amp;amp;bih=1054
こんな感じで画像を見るとよくわかりますね。で、これがあってこそ、ボット作ったな感が出ると思うので、まずはここから始めるのはアリかと思います。実際上も、いきなり何を入力したら良いかわからない、という事態を避けるためには、メニューは有効かと思います。
しかし、絵心がない人が、これをどう作るか、というのは悩みどころです。
しかも、６分割メニューを作るなら、画像を６個用意するのかなと思ったら、大きい画像を用意して、その絵の中で６分割の表現をする、ということで、まずはそもそも、どうやってそんな綺麗に分割するのかというところから始まってしまいました。
しかし、これについては、良い方法を思いつきました。あまり大きい画像では持て余すかと思って、400×270で作りましたが、こちらを見ると、本当は1200×810で作った方が良かったようです。
で、良い方法というのは、Excelで列幅133、高さ135のセルを６個作り、それを塗りつぶし、罫線を白にします。その６マスをコピーして、Wordに画像として貼り付ける！これで、よい感じの雛形ができますので、あとは、そのマス内にイラスト等を貼り付けたり文字を書いたりして、周りを塗りつぶす！
画像アプリを使いこなせない非デザイナにとってはなかなか良い方法ではないでしょうか。
そしてまた、この作業をするにあたっては、macはきつかったです。標準のプレビューアプリでは塗り潰しができず、PhotoScape Xという無料アプリでも、塗りつぶし機能は有償オプションになっていました。この点、Windowsのペイントなら完璧にタスクをこなしてくれます。
しかも、上記のExcelからWord貼り付け作戦は、Googleスプレッドシートではできず、Excelオンラインでもできませんでした。
まさか、画像作成で、macからWindowsに戻るとは・・・
もう一つ注意点としては、アップロードする画像サイズはぴったりサイズでないと受け付けてくれません。エラーメッセージが、jpgかpngでないとダメです、というようなものなのでわかりにくかったのですが、幅399を400にしたら受け付けてもらえました。
ということで、一応参考画像を下に貼っておきますが、次回作る時は、1200×810で作り直そうと思います。（最初からそれにしておいたらアップロードではまらなかった・・・）</description></item><item><title>チャットボット（LINE bot）を作る</title><link>https://jqinglong.github.io/programmers-office/%E3%83%81%E3%83%A3%E3%83%83%E3%83%88%E3%83%9C%E3%83%83%E3%83%88%EF%BC%88line-bot%EF%BC%89%E3%82%92%E4%BD%9C%E3%82%8B/</link><pubDate>Fri, 29 Mar 2019 23:43:31 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%83%81%E3%83%A3%E3%83%83%E3%83%88%E3%83%9C%E3%83%83%E3%83%88%EF%BC%88line-bot%EF%BC%89%E3%82%92%E4%BD%9C%E3%82%8B/</guid><description>仕事の方の年度末のパワープレーの影響で、こちらはすっかりご無沙汰になりました。
そして、突然チャットボットを作ることを思い立ち、試してみたところこれがなかなか面白い。ということで、いくつか作ってみたいのですが、前半戦を終えたところで、まとめてみたいと思います。
LINE bot　の処理の流れ 作るにあたって、今回いきなり作り始めましたが、ある程度流れがわかっていると、よりスムーズに入れるのでは、ということで、流れの絵を描いてみました。
絵心のなさアピールしてどうするんだという気持ちもありますが・・・
①普通に、LINEでトークをする場合に、自分が発言入力したら、それはおそらくLINEのDBに保存されて、画面に表示されて、処理終了となると思います。
チャットボットを作る場合は、利用者の入力に対して、Webhookという仕組みを組み込みます。
設定としては、Webhook送信を「利用する」として、そのURLを指定するのみです（けど、URL指定するなら、「利用する」の当たり前じゃない？？最初、URLだけ指定して、呼び出しに失敗して小一時間ほどハマりました）。
②LINEはWebhook送信先に、入力内容をPOSTします。
ですので、まずPOSTを受けられるサイトを用意する必要があります。
これを、今回は、GAS（Google Apps Script）を使用して立ち上げました。
しかし、立ち上げたという表現は正しくないかもしれません。「立ち上げる」的な行為は何もしてません。ただ、Googleドキュメントの１ページを作るかのように、ファイルを一つ作成し、そこにおもむろにコードを書きます。
function doPost(e)
と書いて、ウェブアプリケーションとして公開するのみです。これがサーバーレス・アーキテクチャというものか・・・とちょっと感動しました。
③GASの中で色々やっても良いのですが、GASから外部サービスを呼んで、Responseを受け取ることができます。多くの場合はこのパターンではないでしょうか。Webhookはhttpsで呼ぶ必要がありますが、GASからの呼び出しはhttpでもよい、という裏技的な使い方も可能です。
④受け取った情報を加工して、最後は、LINEのMessaging APIを呼び出します。Replyというのが、要は、利用者にとっての、トーク相手の発言になります。この返し方も、単純なテキストメッセージとして返すだけでなく、様々なフォーマットで返すことができる、というところがボットとしてのインターフェースの魅力につながります。
また、②のPostに対するResponsとしてReplyを返すのではなく、独立したAPI呼び出しになっている、というのもなるほどと思いました。例えば、一つの入力に対して、複数のReplyを返すことができる、ということです。※これはできないっぽい。メッセージを配列で返すことはできます。
⑤最後に、Replyの内容が、画面上に表示されます。
なぜチャットボットを作るのか 正直、これまで、限られた知り合いとの連絡手段として以外にLINEをあまり使ってこなかったこともあり、ボットの何が良いのかわかりませんでした。
しかし、今回作る方から入ってみて、魅力があることも分かりました。
利用者にとってのチャットボットの魅力 一言で言うならば、「入力画面というインターフェースからの解放」とでも言えば良いのでしょうか。画面にいくつか項目があって、それらを入力して情報を得る、というのは、やはり処理する側の都合に合わせたインターフェースではあると思います。より直接的にこれが欲しいと言ってもらう、あるいは、質問に答えてもらいながら欲しいものを認識する、という方法が、自然な気がしました。
開発者にとってのチャットボットの魅力 主題はこちらですが、意外と良いものでした。
(1)フロント側作業の軽減
LINEとして決まっているReplyの返し方に従っている限り、ある程度の見た目の保証が得られる、かつ、フロント側障害が発生しにくい、ということがあるかと思います。もちろん、綺麗にメニューを出そうと思ったらイラストを書く等が必要になってきたりして、フロント側の才能が不要になるわけではありません。しかし、見た目の印象作りにいつも悩まされる身としては、これだけの作業でこの結果が得られるというコスパはかなり高いと感じます。
(2)クロスプラットフォーム開発
今作っているのも、身近な人用のこじんまりとしたアプリですが、その利用者の中でもiPhoneとアンドロイド端末は半々という感触です。すなわち、各OS向けのアプリと作るか、クロスプラットフォーム開発をするしかない、と考えています。
しかし、クロスプラットフォーム開発は、ここでも色々トライしているように、なかなか決定打が現れないというのが現状かと思います。また、それぞれ作ろうと思っても、macアプリを作ろうと思ったらmacが必要、というのもやはり障壁です。
これに対して、LINEのプラットフォーム上で動作するチャットボット方式はそこへの配慮が０で良い、という点で強力です。
(3)インストールへのハードルの低さ
上とも関係しますが、特に、身近な人向けの野良アプリの場合、作ったものをインストールしてもらおうというのも、一苦労があったりします。iPhoneの場合に野良アプリを配布する方法があるのか、分かりません。
アンドロイドの場合も、apkファイルをダウンロードしてもらう方法は提供できたとして、それをインストールしようとしたら警告が出てしまうことを考えると、ちょっと無理だな、と思ってしまいます。
これに対して、チャットボットであれば、LINEで繋がっている人であれば「おすすめ」でその人を指定することですぐに見てもらうことができますし、友達になる前にQRコードを見せて繋がってもらうこともできます。これであれば、安心して利用してもらえるのではないかと感じました。
開発に向けての情報 世間には１時間で開発できる系の情報がたくさんあります。確かに、１時間で動くもの（入力した文字をそのまま応答する、程度ですが）が完成するので、とっかかりやすいのは間違いないです。そこからさらに、６時間くらいかけて、
・日→中、中→日、日→英、英→日　翻訳
・リクルートのスタディサプリAPIからの情報検索
・クックパッドの情報検索
を作りました（クックパッドは丸パクリですが）。
作ったもののそれぞれの解説をしてみたいと思う他にも、今後の開発に向けての情報として、書きたいことが色々出てきました。
・GASとは。サーバレストは。
・GAS版JSON処理方法、XMLパース方法、HTMLスクレイピング方法
・LINEリッチメニューのコツ
・Flex MessageによるリッチUI
・ローソンアプリ（現在のLINEボットの最高峰？）の分析
ボチボチやっていこうかと思います。</description></item><item><title>PayPal決済の導入</title><link>https://jqinglong.github.io/programmers-office/paypal%E6%B1%BA%E6%B8%88%E3%81%AE%E5%B0%8E%E5%85%A5/</link><pubDate>Sun, 10 Feb 2019 21:15:02 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/paypal%E6%B1%BA%E6%B8%88%E3%81%AE%E5%B0%8E%E5%85%A5/</guid><description>WooCommerce・WCFM Marketplaceサイトに、PayPal決済を導入します。
お金の動き WooCommerceとして、こういうのを本当は簡単にまとめて欲しいわけですが・・・まず、購入者がPayPalを使って支払う、この支払われたお金は、どこに行くべきか。
WooCommerceだけで考えるなら、このサイト開設者＝店舗なので、そこに行けば良いわけですが、Marketplaceの場合は、基本的には店舗に行きつつ、システム利用料（コミッション）がサイト開設者に行くべきとなります。
で、最終的にはそうなのですが、では、具体的にPayPalの設定は誰のアカウントで設定すべきなのか。店舗ごとに設定するのは大変ではないですか？と考えると、開設者のアカウントで設定し、一旦開設者に支払われた後、店舗に利用料を差し引いた分が支払われる？
そんなことを考えながら、進めます。
上記の予想から考えると、サイトとしての設定はWooCommerceとしてやるべきだろうということと、WooCommerceの方が情報が多いので、それをやってみましょう。
WooCommerceのPayPal設定 ダッシュボードから、WooCommerce→Settings→Paymentsと進むと、支払い方法を選択する画面になります。
たくさん・・・Paypalは二つ、Stripeはたくさん・・・
さて、PayPalには、PayPalという、いわゆるPayPal Standardと、PayPal Checkoutというものがあります。
この違いは何か。
開発者向けTOP（導入方法・技術情報）-PayPal(ペイパル)
https://www.paypal.com/jp/webapps/mpp/developer
このページの「簡単決済ボタン」と「API決済」に対応するということですね。
簡単決済は、いったんPayPalサイトに飛んで行って戻ってくるタイプ。
API決済はどこまで裏でできることになるか分かりませんが、「よりセキュリティーが高く、画面遷移が少ないため、成約率のアップが期待でき、カゴ落ち率の減少に貢献します。」とのことです。
PayPal Standard（簡単決済ボタン） とりあえず、簡単そうな方から。
Payment methods画面のPayPalの文字、または右端のSetupボタンから、設定画面に移動します。
「PayPal email」に、PayPalサイトの「Sandbox Accounts」で確認した、BUSINESSのアドレスを登録します。
そして、「PayPal sandbox」にチェックします。
「Receiver email」にもBUSINESSアドレスを登録。
「PayPal identity token」は、PayPal画面で確認。
Sandboxのダッシュボードの右上歯車アイコンで、アカウント設定画面に入ります。
左メニューから「アカウント設定」→「販売ツール」→「ウェブサイトの設定」で、
「ウェブペイメントの設定」という画面に入ります。
ここで、自動復帰：オン、復帰先は、サイトのトップにしてみます、そして、支払いデータ転送：オンにすると、IDトークンが表示されます。
あまり日本語情報ないなと思っていましたが、こちらが参考になりました。
https://e-yota.com/webservice/wooccommerce_paypal_standard_payment/
いったんは、これで動作するのではないか、ということで、試してみます。
商品をカートに入れて、支払い画面に遷移すると、注文者情報入力欄の右側に、下記のようなエリアが現れます。
・・・おっと、これだと配送方法が決定できず、支払いに進めませんので、先にそちらの設定をします。</description></item><item><title>PayPal決済の準備</title><link>https://jqinglong.github.io/programmers-office/paypal%E6%B1%BA%E6%B8%88%E3%81%AE%E6%BA%96%E5%82%99/</link><pubDate>Sat, 09 Feb 2019 01:15:20 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/paypal%E6%B1%BA%E6%B8%88%E3%81%AE%E6%BA%96%E5%82%99/</guid><description>次は、WooCommerce・WCFM Marketplace からのPayPal決済連携を試したいと思いますが、その前にPayPal決済環境の準備。
PayPal Sandbox 当然、いきなり決済を開始できるわけではないので、まずはお試しをしたい。
そのために、Sandbox環境が用意されています。
いつも、PayPalにログインするものの、開発者サイトへの入り口に悩んで、結局ググって直接、飛んでいく。
PayPal Developer
https://developer.paypal.com/
PayPal、仕組み自体は開発者に優しいと思いますが、Webサイトはあまり優しくない。
PayPal Developerにログインしたら、右上にログイン者の情報が表示されるエリアがあるので、その中のDashboard。
そこから先は、こちらなどを参考に。
https://qiita.com/PPJP/items/6ba65ed21da7fba65586
ポイントとして、gmailのアドレスでは、「＋」記号を使ってエイリアスを自動的に作ってくれるところ。これで、買い手用のアカウントと売り手用のアカウントをそれぞれ作ります。
アカウントを作成したら、Sandboxサイトにログインしてみます。
https://www.sandbox.paypal.com/jp/webapps/mpp/home
これも、Sandboxだと分かるようにしてくれれば良いと思うのですが、本番サイトさながらのページ。
URLを確認しながら、ログインし、トップページのダッシュボードを確認します。
私の場合、アカウントは以前作ってあったのですが、どこから情報を確認したらよかったんだっけ、という状態でしたので、その場合は、PayPal Developerにログインし、ダッシュボードでアカウントを確認し、そのアカウントで、Sandboxサイトにログインする、ということになります。
このアカウントを使って、決済連携を試してみます。</description></item><item><title>WCFM Marketplace ショップページ</title><link>https://jqinglong.github.io/programmers-office/wcfm-marketplace-%E3%82%B7%E3%83%A7%E3%83%83%E3%83%97%E3%83%9A%E3%83%BC%E3%82%B8/</link><pubDate>Sun, 03 Feb 2019 01:26:35 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/wcfm-marketplace-%E3%82%B7%E3%83%A7%E3%83%83%E3%83%97%E3%83%9A%E3%83%BC%E3%82%B8/</guid><description>WCFM Marketplaceの設定。各ショップページの設定。
基本的には、Marketplace→Vndorsで設定していきます。
デモサイトのこちらの見た目を参考にします。
http://wcfmmp.wcfmdemos.com/store/wcfm-vendor/
気になる点は二つ。
一つは、STORE HOURS。
WCFM MARKETPLACE – STORE HOURS
https://wclovers.com/knowledgebase/wcfm-marketplace-store-hours/
これを見ると、2ヶ所の設定だけで良さそう。念のためと思って、ベンダーユーザでログインしてこのヘルプページと同じ画面でも確認してみましたが、設定はされているけど、公開ショップページには表示されない。
この辺は、おそらく使用しているテーマにも関係してくる。
Shop Isleを使っている訳ですが、テーマのカスタマイズで、「Vendor Store Sidebar」という設定項目があり、そこで、Store Hoursを追加できます。
で、これをやると表示されるようになった訳ですが、ただ、元々表示されていた、商品カテゴリー表示とか、店舗地図とかが消えちゃった。
まあ、あまりデフォルト表示に頼るのもどうかというのもあるので、必要な表示をここに追加していくことで、だいぶ見た目も整ってきました。
※用意されているウィジェットも豊富です。
もう一点は、ABOUTとPOLICIESの入力場所。
これは、どうやら管理者ログインだと表示されないようで、ベンダーログインして設定。
管理者は全部できるようにしておいて欲しい気もしますが、まあ、良いかと思います。</description></item><item><title>WCFM Marketplace 地図の表示〜Places API</title><link>https://jqinglong.github.io/programmers-office/wcfm-marketplace-%E5%9C%B0%E5%9B%B3%E3%81%AE%E8%A1%A8%E7%A4%BA%E3%80%9Cplaces-api/</link><pubDate>Sat, 02 Feb 2019 23:44:30 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/wcfm-marketplace-%E5%9C%B0%E5%9B%B3%E3%81%AE%E8%A1%A8%E7%A4%BA%E3%80%9Cplaces-api/</guid><description>地図のプラグインMAPPRESS GOOGLE MAPを入れて、API Keyを設定すると、地図自体は表示されるけれども、入力した住所と連動してくれないという状態でした。
で、productsの地図を入力しようとすると、このようなエラーが。
Google Maps API Key error: please enable the Places API in the Google Developer Console. すなわち、Google Maps Platformという大きな括りの中で、大きく三つのサービスが提供されています。そして、そのうちの一つが、Places APIです。
https://cloud.google.com/maps-platform/products/?hl=ja
たしかに、3つ目をチェックしなかった気がします。
改めて、有効にするのはこちらの画面から。
無事連動するようになりました。</description></item><item><title>WCFM Marketplace Homepage設定</title><link>https://jqinglong.github.io/programmers-office/wcfm-marketplace-homepage%E8%A8%AD%E5%AE%9A/</link><pubDate>Thu, 31 Jan 2019 16:00:36 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/wcfm-marketplace-homepage%E8%A8%AD%E5%AE%9A/</guid><description>Homepageに表示する固定ページ 設定画面のReadingから「Homepage」にショップページを指定します。
最初Wordpressインストール時に日本語指定していたからか、日本語になってしまってますが、WooCommerce本体としてのトップページであり、これがWCFM Marketplaceでは、全店舗横断の商品ページ、という位置付けになります。
「Posts page」は指定すると、その画面はブログページになってしまうので、必要な場合はそれ用の固定ページを作る、ブログが不要な場合は非表示のページを指定しておく、というような形で良いかと思います。
地図 今日のメインは地図。
地図の表示にあたっては、他のプラグインとの連携が考えられているようです。
DOCUMENTATION
https://wclovers.com/knowledgebase/
この中で、INTEGRATIONSに挙げられている地図関連のものが3つ。
どれを使っても良いのかなというのは、それぞれの紹介文面から見て取れます。
WCFM – MAPPRESS GOOGLE MAP
https://wclovers.com/knowledgebase/wcfm-mappress-google-map/
In recent days Map – Google Map is very much essential to inform about your store/product location to your customers. “MapPress Easy Google Map” is one of the most easiest and user friendly plugin to do so. You can associate any number of maps with your product and also allowed any no of points within a single map, isn’t it really cool!</description></item><item><title>WCFM Marketplace サイト構成</title><link>https://jqinglong.github.io/programmers-office/wcfm-marketplace-%E3%82%B5%E3%82%A4%E3%83%88%E6%A7%8B%E6%88%90/</link><pubDate>Wed, 30 Jan 2019 14:56:33 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/wcfm-marketplace-%E3%82%B5%E3%82%A4%E3%83%88%E6%A7%8B%E6%88%90/</guid><description>WCFM Marketplaceならではのサイト構成をどう考えるか。
デモサイトを見ると、まず、HOMEPAGEとしては、色々なショップの商品一覧。
http://wcfmmp.wcfmdemos.com/
地図があって、検索条件項目があって、商品写真が並ぶ。
妥当ですね。
ヘッダのリンクは管理画面のリンクも混在していますが、コンシューマ画面と考えた場合に必要なのは、ショップ一覧というのは先日も書いたところ。
https://www.programmers-office.ml/2019/01/26/wcfm-marketplace-%E6%9C%80%E5%88%9D%E3%81%AE%E4%B8%80%E6%AD%A9/
上記デモサイトでは「STORES」から遷移する画面。
http://wcfmmp.wcfmdemos.com/stores/
こちらも、地図があって、左サイドにショップの検索項目と、お勧めショップがあって、メインにショップの写真一覧が並ぶ。妥当。
次に必要なのは、各ショップのページ。
デモサイトで一例を見る。
http://wcfmmp.wcfmdemos.com/store/wcfm-vendor/
ヘッダに写真があって、左サイドに商品検索、クーポン、営業時間情報、カテゴリ、その他のショップのお勧め、地図、商品おすすめ。メインに商品を並べて、タブ切り替えで、店舗情報、レビュー等。
妥当。
そして、商品情報。
http://wcfmmp.wcfmdemos.com/product/olive-oil/
とりあえず、全体的にオーソドックスで良いと思いますので、この構成を一つずつ作っていきたいと思います。</description></item><item><title>WooCommerce用テーマ　Shop Isle</title><link>https://jqinglong.github.io/programmers-office/woocommerce%E7%94%A8%E3%83%86%E3%83%BC%E3%83%9E%E3%80%80shop-isle/</link><pubDate>Tue, 29 Jan 2019 15:07:05 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/woocommerce%E7%94%A8%E3%83%86%E3%83%BC%E3%83%9E%E3%80%80shop-isle/</guid><description>サイトの構成が見えてきたら、やはり見た目を整えたくなる。
ということで、WooCommerce用テーマの選択。
最初使ってみたのはこちら。
THESHOP
https://athemes.com/theme/theshop/#
おしゃれだなとは思ったのですが、ヘッダ部分にアイコン三つの表示が固定になっているようで、ちょっとアピールされすぎている感が気になりました。
そしてもう少し探してみて見つけたのがこちら。
ShopIsle
https://docs.themeisle.com/article/184-shopisle-documentation
https://ja.wordpress.org/themes/shop-isle/
以前、別のサイトを作るときに、IsleMagというテーマを使ったことがあります。
https://ja.wordpress.org/themes/islemag/
カラフルな見た目が気に入りました。
このサイトでも使おうと思いましたが、投稿日の表示のされ方だけ、ほんのちょっと気になって、また、現在使用しているMesocolumnがよりカラフルだったのでこちらにしたのですが、情報量の多さではIsleMagの方が強いので、実は今でも気になっています。
（ただ、今ちょっと調べてみると、This theme has been retired.となってしまっていますね。2019/1/28に更新されているのに？？謎・・・
https://themeisle.com/themes/islemag/
）
で、名前から分かるように同じ作者のeCommerce WordPress Themeとして提供されているものが、ShopIsleな訳です。
こちらの日本語情報も一通りの確認をするのに良さそうです。
https://lightup-works.com/shopisle
Islemagに比べれば情報はかなり少なくなりますが、共通知識も使えるのではという期待も込めて、使ってみたいと思います。
なお、他にテーマを探したい方は、こちらも参考になりそうです。THESHOPもShopIsleも紹介されています。オンラインストアの構築に最適！すべて無料のおすすめWordPressテーマ20選</description></item><item><title>WCFM Marketplace 最初の一歩</title><link>https://jqinglong.github.io/programmers-office/wcfm-marketplace-%E6%9C%80%E5%88%9D%E3%81%AE%E4%B8%80%E6%AD%A9/</link><pubDate>Sat, 26 Jan 2019 13:10:39 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/wcfm-marketplace-%E6%9C%80%E5%88%9D%E3%81%AE%E4%B8%80%E6%AD%A9/</guid><description>WooCommerce Multi vendor Marketplace (WCFM Marketplace)を使うにあたって、どこから始めれば良いか。
日本語情報は早々に諦めて、手探りで始めます。
管理画面 WPのダッシュボードはこんな感じになります。
そして、「Marketplace」からWCFM Marketplaceのメニューに移ります。
手順としては、やはりVendorsから始めます。
登録内容自体は見れば分かるレベルなので良いですが、ドキュメント検索しても見つからないのは、ちょっと不安・・・。
商品 次にProducts。
の前に、Categories。これが最初分かりにくかったですが、Productsメニューの中にあります。要するに、WooCommerceの機能なのか、Marketplaceの機能なのかを意識しながら考えることが必要です。
Productsについては、商品の種類を選択して、基本内容を登録し、バリエーション商品の場合は、属性を登録して、その属性によって金額等のバリエーション情報を登録。
この辺の仕組みは、WC Marketplaceでも同じ。というか、それはWooCommerceの機能ですね。
https://www.programmers-office.ml/2019/01/14/wc-marketplace%EF%BC%88%E5%95%86%E5%93%81%E6%A9%9F%E8%83%BD%EF%BC%89/
ちなみに、Welcartとかだと、バリエーションの分SKUコードを振って、それごとに金額等を設定。
https://www.welcart.com/documents/manual-2/%E5%95%86%E5%93%81%E3%83%9E%E3%82%B9%E3%82%BF%E3%83%BC
Magento もそうでしょう。その方がきっちりと管理できるのでしょうが、ちょっと面倒。必要なければ内部管理でも良いのでは、と思います。
そして、商品登録については、当然CSV等によるインポートが必要かと思います。
しかし、Product CSV Import機能は、ULTIMATEの機能だと言われます。
そんな・・・
WOOCOMMERCE FRONTEND MANAGER – ULTIMATE
https://wclovers.com/product/woocommerce-frontend-manager-ultimate/
と思いきや、商品の基本情報について言えばWooCommerceの機能な訳なので、メインダッシュボードの方のImport機能は使えます。
ですので、そちらでImportして、どの店舗の商品化の情報だけ後で加える、という方法も不可能ではないですね。けど大量だとやはり厳しいので、ULTIMATEは購入しても良いのかもしれません。49ドルは良心的でしょう。
そうすると、とりあえず、公開ページも見えるようになってきます。
基本の商品ページだと、色々なショップの商品が混在で表示され、ショップ名をクリックするとそのショップの情報とそのショップの商品が表示される。これは予想通り。良い感じかなと思います。
ショップ一覧表示ショートコード 一つやっておきたいのが、ショップ一覧。
これはショートコードが提供されているので、それを使います。
WCFM MARKETPLACE – STORE, WIDGETS &amp;amp; SHORT CODES
https://wclovers.com/knowledgebase/wcfm-marketplace-widgets-short-codes/
[wcfm_stores]というショートコードが提供されており、１行あたりの表示店舗数がデフォルト2になっているので、「per_row」という属性が用意されています。属性の使い方は、通常のWordpressのショートコードの作法を確認して、[wcfm_stores per_row=3]とします。
これはまあこんな感じでしょう。
デモサイトだとこんな感じ。
http://wcfmmp.wcfmdemos.com/stores/</description></item><item><title>WooCommerceのマルチベンダープラグイン</title><link>https://jqinglong.github.io/programmers-office/woocommerce%E3%81%AE%E3%83%9E%E3%83%AB%E3%83%81%E3%83%99%E3%83%B3%E3%83%80%E3%83%BC%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3/</link><pubDate>Sun, 20 Jan 2019 13:18:55 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/woocommerce%E3%81%AE%E3%83%9E%E3%83%AB%E3%83%81%E3%83%99%E3%83%B3%E3%83%80%E3%83%BC%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3/</guid><description>ということで、改めて、WooCommerceのテスト環境を構築しましたが、マルチベンダー構成にするためのプラグインについては、もう少し検討したいと思います。
プラグイン画面で、「multi vendor」で検索すると、いくつかヒットします。この上位4件は割とインストール数も多いですし、更新頻度も高そうです。
いずれも、日本語対応は弱いので、優劣付けづらいのですが、概ね下記のような感じかと思います。
WC Marketplace
製品サイト
https://wc-marketplace.com/
デモサイト
http://wcmpdemos.com/WCMp/
アドオン
https://wc-marketplace.com/addons/
ドキュメント
https://wc-marketplace.com/knowledgebase/
・プラグイン自体は無償で、アドオンは有償（割と高め）が多い
・WooCommerce自体にはstripeの追加プラグインがあるのに、これ用には別途有償アドオンが必要？
・見た目はそれほど良くはないかな。テーマが豊富に公開されているのは良いけど、ほとんど有償？
https://wc-marketplace.com/third-party-themes/
WooCommerce Multivendor Marketplace
製品サイト
https://wordpress.org/plugins/wc-multivendor-marketplace/
デモサイト
http://wcfmmp.wcfmdemos.com/stores/
アドオン
https://wclovers.com/addons/
ドキュメント
https://wclovers.com/knowledgebase/
・アドオンは少ないけど、安価
特にデリバリ機能のアドオンが魅力的
・オープンソース
WC Vendors Marketplace 製品サイト
https://www.wcvendors.com/
アドオン
https://www.wcvendors.com/extensions/
ドキュメント
・デモが公開されていないのはなんともしがたい
・製品自体は、Free版とPro版になっていて、かなりお金がかかりそう
Dokan
製品サイト
https://wedevs.com/dokan/
デモサイト
https://dokandemo.wedevs.com/?utm_campaign=dokan_demo_users&amp;amp;utm_medium=dokan_demo_link&amp;amp;utm_source=WordPress.org
アドオン
https://wedevs.com/dokan/modules/
ドキュメント
https://wedevs.com/docs/dokan/
・見た目が美しい
・これもお金はかかりそう
・Free機能はオープンソース？
https://github.com/weDevsOfficial/dokan
結論 Dokanの見た目はかなり魅力的ですが、オープンソースで、追加アドオンも安価そうなWooCommerce Multivendor Marketplaceで進めてみたいと思います。
小さなＥＣサイトのＷｏｒｄＰｒｅｓｓ＋Ｗｅｌｃａｒｔ導入・設定ガイド 自前でもできる！ /翔泳社/南部正光posted with カエレバ 楽天市場 Amazon 7net</description></item><item><title>Docker 環境をステージング環境へ（GCP編）</title><link>https://jqinglong.github.io/programmers-office/docker-%E7%92%B0%E5%A2%83%E3%82%92%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E7%92%B0%E5%A2%83%E3%81%B8%EF%BC%88gcp%E7%B7%A8%EF%BC%89/</link><pubDate>Sun, 20 Jan 2019 04:57:47 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/docker-%E7%92%B0%E5%A2%83%E3%82%92%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E7%92%B0%E5%A2%83%E3%81%B8%EF%BC%88gcp%E7%B7%A8%EF%BC%89/</guid><description>GCP環境にDockerコンテナを作る方法はいくつかあるようです。
・GCE（Compute Engine）のVMインスタンス作成時に、コンテナ イメージをデプロイ
・Google Kubernetes Engine（GKE）にクラスタ環境を構築してデプロイ
・その他色々・・・
公式ドキュメントはこちら
Compute Engine への Docker コンテナのデプロイ
https://cloud.google.com/compute/docs/instance-groups/deploying-docker-containers?hl=ja
で、今回はシンプルそうな、VMインスタンス時にデプロイする方法を試します。
公式ドキュメントはこちら
VM およびマネージド インスタンス グループへのコンテナのデプロイ
https://cloud.google.com/compute/docs/containers/deploying-containers?hl=ja&amp;amp;_ga=2.46174759.-1895702560.1541304432
ですが、どうも分かりにくい。いくつか試してくれているサイトがありますが、どうも面倒なようにしか見えない・・・
インスタンス作成時は、Always Freeの条件
f1-micro インスタンス（1 か月あたり、バージニア州北部 [us-east4] を除く米国リージョンのみ）
を踏まえて。
ただこれ、イメージは一つだけなんですね。後から追加できるかな・・・とりあえず、DBのイメージだけ指定します。
とりあえず、起動はします。
DBだけだと動いているか分かりませんが、SSHで入って確認してみます。
入ると
########################[ Welcome ]########################
# You have logged in to the guest OS. #
# To access your containers use &amp;#8216;docker attach&amp;#8217; command #
###########################################################
と表示されています。
docker images で目的のイメージが入っていることが確認できます。
であれば、もう一つのイメージはpullを叩いても良いか。</description></item><item><title>Docker push Google Container Registry 編</title><link>https://jqinglong.github.io/programmers-office/docker-push-google-container-registry-%E7%B7%A8/</link><pubDate>Sun, 20 Jan 2019 02:07:55 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/docker-push-google-container-registry-%E7%B7%A8/</guid><description>さらに新しい編。ドカベンか！
ドカベン　プロ野球編　（1-52巻 全巻） / 水島新司 / 秋田書店posted with カエレバ 楽天市場 Amazon 7net 今度は、Google Container Registry へのpushを試してみます。
始める前の準備 Container Registry のクイックスタート
https://cloud.google.com/container-registry/docs/quickstart?hl=ja
プロジェクトは既存のものを使用します。
課金の設定もしてあります。
Container Registry APIの有効化は、こちらのページのリンクボタンからGCP画面へ飛んで行って、ボタンを押していけばできます。
Google Cloud SDKはインストール済みでしたので、ここもスキップ。
この時にインストールしたのですね。
サイト引っ越し、そして、再引っ越し（Part2）
https://www.programmers-office.ml/2018/12/22/%E3%82%B5%E3%82%A4%E3%83%88%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97%E3%80%81%E3%81%9D%E3%81%97%E3%81%A6%E3%80%81%E5%86%8D%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97%EF%BC%88part2%EF%BC%89/
Dockerもインストール済み。ビルド済み。
認証から行きます。
認証してpush gcloud auth configure-docker
でDocker config fileへの更新確認をされるので、Yで進めます。
次にイメージにタグをつけます。
そしてpushしようとすると、認証できていない・・・
denied: Token exchange failed for project &amp;#8216;xxx&amp;#8217;. Caller does not have permission &amp;#8216;storage.buckets.create&amp;#8217;. To configure permissions, follow instructions at: https://cloud.</description></item><item><title>Docker push AWS ECR 編</title><link>https://jqinglong.github.io/programmers-office/docker-push-aws-ecr-%E7%B7%A8/</link><pubDate>Sat, 19 Jan 2019 05:33:30 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/docker-push-aws-ecr-%E7%B7%A8/</guid><description>色々な編ができていく・・・
ずっとはまっていてもダメなので、ちょっとGitLabからのPullはどこかで質問することにします。
そして、AWS ECS で pull するのであれば、当然相性良いだろうと思われる、ECR にpushしてみます。
イメージのプッシュ
https://docs.aws.amazon.com/ja_jp/AmazonECR/latest/userguide/docker-push-ecr-image.html
もうpushするimageはできているところからスタートします。
Docker 環境をステージング環境へ（Docker push編）
https://www.programmers-office.ml/2019/01/14/docker-%E7%92%B0%E5%A2%83%E3%82%92%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E7%92%B0%E5%A2%83%E3%81%B8%EF%BC%88docker-push%E7%B7%A8%EF%BC%89/
python環境 pushするためには、まず1.の認証が必要です。
そのために、AWS CLIのインストールが必要です。
まあ、そうなんだろうけど面倒は面倒ですね。どんどん遡る・・・
結局、開発環境をDockerで作るとしても、それを扱うための環境（ここで言えばpython環境）をローカルに作らなければいけない。もう少しローカル依存を減らしたいのですが・・・
AWS CLI をインストールする方法
https://docs.aws.amazon.com/ja_jp/cli/latest/userguide/cli-chap-install.html
おもむろに
$ pip install awscli &amp;#8211;upgrade &amp;#8211;user を叩くと、「pip: command not found」のつれないメッセージ。
$ python -m pip -V
/usr/bin/python: No module named pip そこからか・・・
python3 そもそも、macの初期インストールpythonは
python &amp;#8211;version
Python 2.7.10 です。
pipはPython 3.4以降には、標準で付属しているそうです。
Python3系を入れましょう。
Code4Startupの時は、普通にインストーラーをダウンロードする形でしたが、今時だとやはり、Homebrewでしょうか。
https://brew.sh/index_ja.html
インストールのスクリプトを素直に実行。
インストール完了後、
$ brew doctor</description></item><item><title>Docker 環境をステージング環境へ（Docker pull編）part1</title><link>https://jqinglong.github.io/programmers-office/docker-%E7%92%B0%E5%A2%83%E3%82%92%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E7%92%B0%E5%A2%83%E3%81%B8%EF%BC%88docker-pull%E7%B7%A8%EF%BC%89part1/</link><pubDate>Mon, 14 Jan 2019 14:36:14 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/docker-%E7%92%B0%E5%A2%83%E3%82%92%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E7%92%B0%E5%A2%83%E3%81%B8%EF%BC%88docker-pull%E7%B7%A8%EF%BC%89part1/</guid><description>docker pushができたので、今度は、サーバ側からpullします。
サーバは、GCPのつもりでしたが、Mgentoの検証を行っていたAWSを使うか、と考え、それならば、Elastic Container Serviceを使ってみることにします。
Elastic Container Service（ECS） まず、ECSには二つの起動モデルがあります。
・Fargate 起動タイプモデル
・EC2 起動タイプモデル
Fargateはコンテナ用のリソースで、EC2とは切り離されており、それ用の料金が発生します。逆に言えば、コンテナを使うためにEC2を増強するための料金は不要ということです。これに対して、EC2起動モデルの場合は、ECSの料金は不要です。
今回は、EC2の１年間無料枠を利用して、EC2起動タイプで行ってみます。
（AWSもDockerも初心者なのに大丈夫かどうかは不明です）
ECSの手順については、こちらを参照させていただきました。
https://dev.classmethod.jp/cloud/aws/amazon-ecs-entrance-1/
最初の、タスク定義を作成するところで、FARGATEかEC2かを選択するボタンがあるので、EC2を選択します。
タスク定義名は、タスク定義で指定する内容が、使用するDockerイメージだったり、ということなので、WooCommerceとしておきます。
他は初期値のままで「コンテナの追加」をします。
今回は、woocommerce_mariadb_1、woocommerce_wordpress_1として、二つ分追加します。
ポートマッピングは悩みますが、mariadb側はなし、wordpress側は80:80と、443:443を追加しておきます。
タスク定義が正常に作成されました、とのことです。
続いて、クラスターを作成します。
クラスターテンプレートは、Fargateではないので、「EC2 Linux + ネットワーキング」を指定します。
インスタンスタイプは無料枠なので、t2.micro、キーペアは作成済みのものを選択します。
「コンテナインスタンスの IAM ロール」はさらに不明なので、「新しいロールの作成」のまま進めます。
分からないながら進めていき、起動します。
「サービスの検出の統合の有効化」はさらに不明のため、チェックを外しておきます。（上記サイトの絵にはありませんので、貼っておきます）
以上で立ち上がったはずですが、サービス画面に行ってみると、起動失敗。
理由は、
https://registry.gitlab.com/v2/aaa/bbb/woocommerce_wordpress_1/manifests/latest: denied: access forbidden
まあ、そうですよね・・・
コンテナの設定の、「プライベートレジストリの認証」「認証情報パラメータ」辺りだと思いますが、今日は時間切れです。</description></item><item><title>Docker 環境をステージング環境へ（Docker push編）</title><link>https://jqinglong.github.io/programmers-office/docker-%E7%92%B0%E5%A2%83%E3%82%92%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E7%92%B0%E5%A2%83%E3%81%B8%EF%BC%88docker-push%E7%B7%A8%EF%BC%89/</link><pubDate>Mon, 14 Jan 2019 10:25:10 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/docker-%E7%92%B0%E5%A2%83%E3%82%92%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E7%92%B0%E5%A2%83%E3%81%B8%EF%BC%88docker-push%E7%B7%A8%EF%BC%89/</guid><description>まだ、全然途中ですが、いったんベンダー機能とショップ画面が見えるようになったところで、これを別サーバ（ステージング環境のつもり）に持っていきたいと思います。
Docker力強化の目的もあります。
Docker イメージのレジストリサービス ローカル開発環境のDockerイメージを別サーバに持っていくために、まずは、Dockerイメージを共有することが必要と考えます。すると、レジストリサービスが必要ということが分かります。
そしてレジストリサービスを調べてみると、ありがたいサービスが提供されていることが分かります。
・Docker Hub
・Amazon Elastic Container Registry (ECR)
・Google Container Registry
・Azure Container Registry
・GitLab Container Registry
などなど。
構築先がGCPなのと、このサービスもAlways Free対象なので、Googleも有力な候補ではありますが、ソースをGit管理するなら、同じ管理にするのが合理的なのではということと、GitはGitLab派の私としては、GitLab Container Registryを使ってみることとします。
GitLab Container Registryへのpush 流れとしては、まずcommitして、イメージ作成。
これは、こちらを参照
https://www.memotansu.jp/docker/626/
commitなの、buildなの、というのはよく分かっていませんが、とりあえず、これで行ってみます。
docker login registry.gitlab.com
ログインはできます。
しかし、pushは、3つあるイメージのうちの2つをpushしたいわけで、その仕組みがいまいち分かりません。
gitlabのページに記載を参考に、最後に「:タグ名」を付けてみても、
「An image does not exist locally with the tag」
となります。
この辺りを参考に、タグ付けします。
http://docs.docker.jp/linux/step_six.html
https://docs.docker.com/engine/reference/commandline/tag/
そうすると、
registry.gitlab.com/aaa/bbb/woocommerce_mariadb_1 v1.1 a4e11e5e5b41 3 hours ago 262MB
registry.gitlab.com/aaa/bbb/woocommerce_wordpress_1 v1.1 eba2457b8e6a 4 hours ago 438MB というようなイメージが出来上がります。</description></item><item><title>WC Marketplace（商品機能）</title><link>https://jqinglong.github.io/programmers-office/wc-marketplace%EF%BC%88%E5%95%86%E5%93%81%E6%A9%9F%E8%83%BD%EF%BC%89/</link><pubDate>Sun, 13 Jan 2019 15:53:13 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/wc-marketplace%EF%BC%88%E5%95%86%E5%93%81%E6%A9%9F%E8%83%BD%EF%BC%89/</guid><description>商品登録方法は、素のWooCommerceとWC Marketplaceでは考え方が違う部分がありますので、その確認。
商品とベンダーの関係 Setting up – Assign Single Product to Multiple Vendors
https://wc-marketplace.com/knowledgebase/setting-assign-single-product-multiple-seller/
WC Marketplaceプラグインインストール時に、「Single Product Multiple Vendors」というチェックボックスがあります。
同一商品を複数ベンダーから販売することができ、購入時に顧客がベンダーを選択することができる、というものです。
これはしないので、スキップします。
管理者による商品の登録 Setting up – Uploading products for WCMp
https://wc-marketplace.com/knowledgebase/setting-up-uploading-products-for-wcmp/
アップロードから始まるというのが、順番としてどうなのかと思わざるを得ませんが、必須機能ではある、というかむしろ最終的にはこちらが優先なので、これで良いのか。
・・・と思って読み進めると、別にファイルアップロードの話ではなく、普通に商品登録の話でした。そういう言葉使いですか・・・
最初に、承認を経由するかしないかの設定の話。
そして、管理者が通常のWooCommerceの方法で、商品登録する場合の話。
ここで、WC Marketplaceが入っていると、ベンダーを指定するプルダウンがあります。これをクリックすると、中身が空で、「？」と悩むのですが、テキストボックスに一文字入力するとそれにマッチするベンダーが選択できるようになります。まあ、ベンダーが大量に登録されていると、ずらっと出てこられても困るかもしれませんが・・・
通常のWooCommerceの商品登録の方法については、
https://docs.artws.info/document/managing-products/
のお世話になるのが良いかと思います。
特に商品タイプ、特に「バリエーションのある商品」（Variable product）は重要です。
ベンダーによる商品登録 実際は、商品の登録は各ベンダーがやるでしょう、ということで、その機能についての説明です。
ベンダーのユーザでログインして、Vendor Dashboard画面に入ります。
こちらの画面からの登録も、細かい手順や画面構成が異なるのみで、登録内容は基本的に同じです。
ところが、Product Typeで、「Simple product」しか選択できません。
他のタイプを選択したい場合は、backendに行かなければならないということです。
すなわち、ベンダー用画面には、2種類あります。ログイン直後のVendor Dashboard画面と、wp-adminの画面であるbackendです。
こんなところから移動できます。
こちらに移動すれば、機能制限された管理画面が表示される、というわけです。
Advanced Frontend Manager https://wc-marketplace.com/knowledgebase/wcmp-frontend-manager/
で、一応、AFMというものを使ってほしそうです。
これを使えば、backendに移動せずに、「Simple product」以外の商品メンテもできるということです。
ただ、そんなに、画面からメンテするのか、と考えたら、コスパはあまり良くないかなという気もします。
https://wc-marketplace.com/product/wcmp-frontend-manager/
という感じで、だいぶ理解はできてきました。</description></item><item><title>WC Marketplace（ベンダー関連機能）</title><link>https://jqinglong.github.io/programmers-office/wc-marketplace%EF%BC%88%E3%83%99%E3%83%B3%E3%83%80%E3%83%BC%E9%96%A2%E9%80%A3%E6%A9%9F%E8%83%BD%EF%BC%89/</link><pubDate>Sun, 13 Jan 2019 09:17:32 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/wc-marketplace%EF%BC%88%E3%83%99%E3%83%B3%E3%83%80%E3%83%BC%E9%96%A2%E9%80%A3%E6%A9%9F%E8%83%BD%EF%BC%89/</guid><description>しかし、WooCommerceも日本語情報は、豊富とは言えませんね・・・
ほとんどお一人で頑張られている？？
https://docs.artws.info/about-this-site/
WC Marketplaceと言っても、そもそもWooCommerceが分からなければ始まらないので、上記を参考にさせていただきながら、進めていきます。
なお、現時点で、
WooCommerce Version 3.5.3
WC Marketplace Version 3.3.0
です。
基本ドキュメント インストールは、基本レベルだと特に悩まないとは思いますが、
https://wc-marketplace.com/knowledgebase/wcmp-setup-guide/
一応こちらを参照しておけば、安心かと思います。
その他のドキュメントも、ここから辿っていきます。
ベンダー管理システム Vendors Management System
https://wc-marketplace.com/knowledgebase/vendors-submenu/
まず、考え方として、Vendorを登録し、これは、wpサイトログインのユーザにもなります。そして一対一でShopが紐付きます。
基本的には、管理者がVendorユーザを作って、詳細情報はそのVendorユーザが自分自身の情報を登録し、管理者がその登録内容を承認する、という流れのようで、そのためのステータス管理（Pending、Rejected、Suspended、）がされているという形のようです。
これを登録すると、
http://localhost/circlant/user1/
という形で、そのベンダーのページが作成されるのですが、そこに表示される画像はどこで設定するのかが分からない。追々分かることを期待して進めます。
ベンダー登録方法 Setting up – Vendor Registration for WCMp
https://wc-marketplace.com/knowledgebase/setting-vendor-registration-wcmp/
ベンダーについては、より詳細な登録方法として、さらにドキュメントが提供されています。
管理者が登録する方法以外に、Registration Formも用意されており、それをするしない、承認を経由するしない、フォームで登録する内容、等が設定可能です。
例えば、Store DescriptionとCountry　を追加すると、このような登録フォームになります。
ベンダー用機能 Setting Up WCMp – A Vendor Guide
https://wc-marketplace.com/knowledgebase/setting-wcmp-vendor-guide/
どうもドキュメントの並びが綺麗ではないように思うのですが、ベンダー登録したところで、今度は、ベンダー用機能を見てみます。
Vendorロールのユーザでwp管理画面にログインすると、ダッシュボードの見た目はだいぶ違います。
上に書いた、店舗画面の見た目等はここから設定することになります。
その他、商品や、支払い方法等を登録し、あるいは、注文情報の確認等を行いますが、ポイントは商品登録だと思いますので、今回はここで一旦終了します。</description></item><item><title>WooCommerceを試す</title><link>https://jqinglong.github.io/programmers-office/woocommerce%E3%82%92%E8%A9%A6%E3%81%99/</link><pubDate>Sun, 13 Jan 2019 01:52:34 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/woocommerce%E3%82%92%E8%A9%A6%E3%81%99/</guid><description>MagentoのDocker環境を作った訳ですが、サンプルデータを後から投入しようとすると、やはり、「PHP Fatal error: Allowed memory size of xxx bytes exhausted」が発生したりして、Dockerの出来合いの環境ならもう少しすんなり行くかなと言う期待は、あまり応えてはもらえませんでした。
そこで、ちょっと浮気をしてみます。
Docker力強化も兼ねて、今回もDocker環境を作ります。
WooCommerce入りのDocker Hubのイメージもありますが、そこは後からプラグイン入れても良いよね、ということでwordpress環境をまず作ります。
イメージは、あえて公式ではなく、先日の構成を参考にして、bitnami版にしてみます。
今回は、最初から、ymlに永続化用の記述をしておきます。
mkdir docker/WooCommerce
mkdir docker/WooCommerce/wc-mariadb-persistence
mkdir docker/WooCommerce/wc-wordpress-persistence
cd docker/WooCommerce/
curl -LO https://raw.githubusercontent.com/bitnami/bitnami-docker-wordpress/master/docker-compose.yml
・・・yml編集・・・
docker-compose up -d やはり、wordpressセットアップ画面をすっ飛ばして、サイトが立ち上がっている状態まで来てくれます。
管理画面はwp-admin、ユーザ・パスワードは、Settings画面参照（WORDPRESS_USERNAME、WORDPRESS_PASSWORD）。
日本語化はされていません。
そして、おもむろに、Pluginsから、WooCommerceをInstall、Activate。PluginsのページにWelcome to WooCommerceのメッセージと「Run the Setup Wizard」ボタンが表示されているので、クリックします。
基本情報を入力し、Payment画面では、PayPalとstripe、さらにCash on deliveryを有効にしてみます。Shippingはとりあえず適当に、オススメのAutomated TaxesとMailChimpも有効にしておいて、Jetpackは接続できないというメッセージになりましたがそのまま行きます。
チュートリアルに従って商品登録し、「Visit Site」の下の「Visit Shop」をクリックすると、商品が表示され、カートに投入し、カートを見ると購入商品が表示されます。
ただ、この状態ではあまりに見た目が投げやりなので、AppearanceのThemesからStorefront を検索して、Install、Activateします。
「Design your store」という画面が表示されますので、流れに従って入力。多少見た目が整います。「Design your store」が公式のようなので入れてみましたが、なかなかのシンプルさではあります。
https://shimesan.com/2018/03/24/woocommerce-netshop-003/
この辺は参考になりそうです。
試しにもう一つ、THESHOPというテーマを入れてみます。
https://athemes.com/theme/theshop/#
さすがの良い感じ。
とりあえず、こうしておきます。
さらに、今回やりたいのは単一ショップではないので、複数ベンダー対応のプラグイン、「WC Marketplace」を入れます。
そして、ちょっと設定を初めてみましたが、これはなかなか骨が折れそうなので、また改めて。</description></item><item><title>DockerでMagento環境を構築する</title><link>https://jqinglong.github.io/programmers-office/docker%E3%81%A7magento%E7%92%B0%E5%A2%83%E3%82%92%E6%A7%8B%E7%AF%89%E3%81%99%E3%82%8B/</link><pubDate>Sun, 06 Jan 2019 09:52:07 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/docker%E3%81%A7magento%E7%92%B0%E5%A2%83%E3%82%92%E6%A7%8B%E7%AF%89%E3%81%99%E3%82%8B/</guid><description>Dockerで、ビジュアルに、Magento環境を構築していきたいと思います。
参考情報 https://qiita.com/kzkiq2nd/items/29f69c156f6f6e2fb215
を入り口として、
https://qiita.com/kzkiq2nd/items/b8162cfc41d13616f861
https://principle-works.jp/blog/how2runm2ondocker-apache/
https://principle-works.jp/blog/how2runm2ondocker-compose/
も参照。
しつつ、いかにビジュアルに構築するかを考えます。
イメージ検索 まずは、Kitematic内で検索してみます。
最初は、一つしかヒットしなかった気がしたのですが、気のせい？？
まあまあ、結構な数がヒットします。
Googleで「magento docker」で検索した場合は、bitnami/magentoが先頭でヒットします。
さらに、DevBoxなるものもあるといいます。
どれを使うべきか。
DevBoxが正攻法のようではあります。
https://magento.com/blog/technical/set-your-magento-2-development-environment-faster
が、最初の参考情報によると、ちょっとフルスペックすぎる感じが無きにしも非ず。
かつ、2.3には未対応っぽい。
次は、Pulls 1M+ となっていて、利用者の多そうなこちら。
https://hub.docker.com/r/alexcheng/magento2
解説も丁寧にされているのが好印象。2.3.xとも書いてあるので安心。
こちらにさらに情報あり。
https://microbadger.com/images/alexcheng/magento2
bitnami版も確認。
https://hub.docker.com/r/bitnami/magento
利点として書かれているのは、最新版追跡の速さですね。
こちらにも、いくつかのパターンが置かれています。
https://bitnami.com/stack/magento/containers
ちょと悩むところではあるのですが、ブランド名を信じて、bitnamiにしてみます。
bitnami版magento2のインストール 改めて、Kitematicで「bitnami/magento」で検索し、CREATEボタンを押します。
しばらくダウンロード画面が表示され、追加されたかと思いきや、エラーメッセージ。
Welcome to the Bitnami magento container
Subscribe to project updates by watching https://github.com/bitnami/bitnami-docker-magento
Submit issues and feature requests at https://github.com/bitnami/bitnami-docker-magento/issues
ERROR == The MAGENTO_DATABASE_PASSWORD environment variable is empty or not set. This environment variable is required for Magento to be properly installed.</description></item><item><title>MacにDocker環境をビジュアルに構築する</title><link>https://jqinglong.github.io/programmers-office/mac%E3%81%ABdocker%E7%92%B0%E5%A2%83%E3%82%92%E3%83%93%E3%82%B8%E3%83%A5%E3%82%A2%E3%83%AB%E3%81%AB%E6%A7%8B%E7%AF%89%E3%81%99%E3%82%8B/</link><pubDate>Sat, 05 Jan 2019 22:17:45 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/mac%E3%81%ABdocker%E7%92%B0%E5%A2%83%E3%82%92%E3%83%93%E3%82%B8%E3%83%A5%E3%82%A2%E3%83%AB%E3%81%AB%E6%A7%8B%E7%AF%89%E3%81%99%E3%82%8B/</guid><description>目的 2018年11月にMagentoが2.3にバージョンアップしたため、その環境を作りたい。
しかし、現在AWSに構築している環境をバージョンアップするのは、素人には難しそう。そもそも、現状が綺麗にできていない気がするので、クリーンインストールすることにする。
そして、今後も複数バージョンをどう取り扱うか問題は出てくると思うので、このWordpressサイト構築にあたって興味を持ったDockerをもう少し突き詰めてみる。
考えること Dockerもコマンド打つだけじゃないでしょ、もっとビジュアルに行こうぜ！と思ったら、思いの外深い。
参考
https://yoshinorin.net/2017/08/30/try-docker-rancher/
まず、Docker for Macにするのか、Docker Toolboxにするのかを考えなければなりません。
一般的には、VirtualBoxが不要であるDocker for Macの方が、早い、ということのようです。
そして、実際のビジュアルツールとして、やはり本命はDocker社純正のKitematicと言うことになるかと思います。
ただ、上記参考サイトにあるように、これは「Docker for WindowsとDocker for Mac」用となるので、AWS等のLinux環境では同一環境にはならないと言うことになります。
もっとも、それは「外側」が異なるという話であり、Dockerで構築される「中身」については同じでしょうから、それは別の話として良いのかなと考え、Kitematicで構築することにしてみます。
なお、第二の選択肢として、Portainer、Rancherも興味深いです。
Kitematicのインストール 手順としては、Docker for Macをインストールし、そうすると、Dockerアイコンが表示されるようになるので、そこからKitematicをインストールするということのようです。
この辺が比較的新し目の情報かと思います。
https://yatteq.com/localdev-docker
で、Docker for Macをダウンロードしに行くわけですが、そこの名前はDocker Desktop (Mac)。分かりにくくないですか？？
Dockerのアカウント登録をして、ダウンロードします。518MB、なかなかですね・・・
インストール方法は特筆すべきことはないですが、本家docsでも眺めておけば良いでしょう。
https://docs.docker.com/docker-for-mac/install/#install-and-run-docker-for-mac
丁寧な手順はこちらとか。
https://qiita.com/seijimomoto/items/357ac7aa84f98b96021f
最初、Docker アイコンからKitematicをクリックしても反応なく焦りましたが、再度アプリケーションフォルダからDockerをダブルクリックしたら反応してくれました。
ということで、インストールまでは、簡単に行きます。</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ ついに完了！</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E3%81%A4%E3%81%84%E3%81%AB%E5%AE%8C%E4%BA%86%EF%BC%81/</link><pubDate>Sat, 05 Jan 2019 02:23:12 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E3%81%A4%E3%81%84%E3%81%AB%E5%AE%8C%E4%BA%86%EF%BC%81/</guid><description>[ ][1] Code4Startup
Task26では、ドライバー側マップでドライバーの移動ロケーションを追加し、カスタマー側マップにも追加します。
そして、シミュレータを二つ立ち上げて、動きを見ることができますよと言うテクニック。
最後にTask27でdanielgindiのチャートコントロールを使ってグラフを表示します。
https://github.com/danielgindi/Charts
と言うわけで完了！長かった・・・
ただ、完成まではしないのですね・・・
例えば、ドライバーが配達完了すると、ステータスが変わる、と言うところは作りますが、その時のドライバー画面は白いままとか。
ともあれ、この画像でおめでとうと言われました！
https://www.google.com/search?q=congratulations!+gif&amp;amp;tbm=isch&amp;amp;tbs=rimg:Cf_126g8pSGmDIjj2cw58GhEDRb1Tm-QQfezqphKGfD1O0NL-e3qT_1YKO7LZvVAYaur8hA3bBucnHSIqfOWhf0o2EKyoSCfZzDnwaEQNFEaLGpRKdOq-YKhIJvVOb5BB97OoROM0rrFOchCUqEgmmEoZ8PU7Q0hGkQsPwogAEjSoSCf57epP9go7sEcYO1TRi5KJ5KhIJtm9UBhq6vyERQUG6cqDuGNMqEgkDdsG5ycdIihE6TOBfMSUADCoSCZ85aF_1SjYQrEe5Ue_1GH1SA_1&amp;amp;tbo=u&amp;amp;sa=X&amp;amp;ved=2ahUKEwiOhtjjxdXfAhXXAIgKHaCBBUsQ9C96BAgBEBs&amp;amp;biw=1765&amp;amp;bih=1034&amp;amp;dpr=2#imgrc=__bqDylIaYNUMM:</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ ドライバーサイドアプリ</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E3%83%89%E3%83%A9%E3%82%A4%E3%83%90%E3%83%BC%E3%82%B5%E3%82%A4%E3%83%89%E3%82%A2%E3%83%97%E3%83%AA/</link><pubDate>Fri, 04 Jan 2019 23:09:11 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E3%83%89%E3%83%A9%E3%82%A4%E3%83%90%E3%83%BC%E3%82%B5%E3%82%A4%E3%83%89%E3%82%A2%E3%83%97%E3%83%AA/</guid><description>[][1] Code4Startup ここまでは、カスタマーサイドのアプリ。
Task24は、ドライバーサイドのアプリ。
このスピード感で画面を追加していける、というのがSwiftの強みだと思う。
そして、この段階で初めてCusotmerとDriverでディレクトリを分けていけるのもよい。
ということで、Task24がViewControllerで画面遷移のあたり。
Task25で、API部分で、注文のピックアップのあたり。
悩みながら、進めます。</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ 地図上の経路描画</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E5%9C%B0%E5%9B%B3%E4%B8%8A%E3%81%AE%E7%B5%8C%E8%B7%AF%E6%8F%8F%E7%94%BB/</link><pubDate>Tue, 01 Jan 2019 22:14:20 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E5%9C%B0%E5%9B%B3%E4%B8%8A%E3%81%AE%E7%B5%8C%E8%B7%AF%E6%8F%8F%E7%94%BB/</guid><description>Code4Startup
Task23は、決済部分から、お店から配達先までの経路描画など、ある意味、講座のクライマックス。
経路は、import Mapkit しなければならないとすると、他の方式で開発する場合は、またちょっと苦労するということでしょうか。
画面作成の観点で、Swift最強だな、というのはひしひしと感じるわけですが、Android版も開発するとなった場合に、まるっきり別物の開発になってしまう、というのはやはり辛いなとも感じています。</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ 地図</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E5%9C%B0%E5%9B%B3/</link><pubDate>Mon, 31 Dec 2018 02:45:55 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E5%9C%B0%E5%9B%B3/</guid><description>Code4Startup
年末なので、頑張ります。Task22まで来ました。
トレイ（ショッピングカート）画面で、注文者の住所を入力するところで、地図と連携。
とりあえず、キーワドとしては、
MKMapView
CoreLocation.Framework
info.plistの
Privacy – Location When In Use
Privacy – Location Always
CLLocationManager
というあたり。
次のTask23は決済部分で、Task24がお待ちかねドライバー機能、全27タスクの終わりが近づいてきました。</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ 詳細画面からショッピングカート</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E8%A9%B3%E7%B4%B0%E7%94%BB%E9%9D%A2%E3%81%8B%E3%82%89%E3%82%B7%E3%83%A7%E3%83%83%E3%83%94%E3%83%B3%E3%82%B0%E3%82%AB/</link><pubDate>Mon, 31 Dec 2018 00:24:58 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E8%A9%B3%E7%B4%B0%E7%94%BB%E9%9D%A2%E3%81%8B%E3%82%89%E3%82%B7%E3%83%A7%E3%83%83%E3%83%94%E3%83%B3%E3%82%B0%E3%82%AB/</guid><description>Code4Startup
リスト画面から詳細画面呼び出し、そこからショッピングカート（この講座ではTrayという言葉）への追加。
途中のミニ講座は、「pyramid if」。
pyramid ifで調べても何も出てこないので、この講座独特の言葉でしょうか。しかし、「Pyramid of doom」という言葉はあるようです。
https://en.wikipedia.org/wiki/Pyramid_of_doom_(programming)
簡単に言えば、過剰な入れ子（ネスト）構造でしょうか。そこでなぜ「doom」なのかはやはり不明。
そして、ifの多重入れ子回避の対応として、Swiftでは「guard」があるよ、というお話です。
そして、この「ガード節による入れ子条件記述の置き換え」という方法は、ファウラー「リファクタリング プログラミングの体質改善テクニック」からきているのですか・・・。大昔に読んだ・・・
  リファクタリング―プログラムの体質改善テクニック (Object Technology Series)posted with カエレバ マーチン ファウラー ピアソンエデュケーション 2000-05 Amazon 楽天市場 7net</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ リストの実装</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E3%83%AA%E3%82%B9%E3%83%88%E3%81%AE%E5%AE%9F%E8%A3%85/</link><pubDate>Sun, 23 Dec 2018 00:26:31 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E3%83%AA%E3%82%B9%E3%83%88%E3%81%AE%E5%AE%9F%E8%A3%85/</guid><description>Code4Startup Task19はレストランリストの実装。
最初は、仮実装でリスト表示の枠組みを作っておいて、ここで、API連携により実際のデータを表示させます。
合わせて、サーチバーの実装でデータのフィルタリングを行い、Activity Indivatorという、Windowsで言えば砂時計を表示させます。
とりあえず、この辺は淡々と進めます。</description></item><item><title>サイト引っ越し、そして、再引っ越し（Part2）</title><link>https://jqinglong.github.io/programmers-office/%E3%82%B5%E3%82%A4%E3%83%88%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97%E3%80%81%E3%81%9D%E3%81%97%E3%81%A6%E3%80%81%E5%86%8D%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97%EF%BC%88part2%EF%BC%89/</link><pubDate>Sat, 22 Dec 2018 09:09:33 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%82%B5%E3%82%A4%E3%83%88%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97%E3%80%81%E3%81%9D%E3%81%97%E3%81%A6%E3%80%81%E5%86%8D%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97%EF%BC%88part2%EF%BC%89/</guid><description>WordPressサイトを引っ越したものの、なかなか苦労しましたという話の後編。
前編は
サイト引っ越し、そして、再引っ越し（Part1）
WordPressサイトの引っ越し方法 色々あると思いますが、毎回検討するのは、こちらのプラグイン。
All-in-One WP Migration – WordPress
そして、毎回容量オーバーに引っかかっている気が・・・
あまり、検索で引っかからないのですが、その後の作業の中で、以下のような方法もあるのではないか、と思っています。試してませんが、これをまとめておくと次回に役立ちそうな気はしますね。
Jetpack、UpdraftPlus、あと忘れた・・・
phpmyadminのイメージ追加 今回は結局、力業で、DBもダンプ取ってリストア、ファイルは丸ごとwp-content/uploadsを持ってくる。
そのために、是非新サイトのDBもphpmyadminで参照したいということで、イメージを追加します。
これ自体は比較的すんなりいきました。下記を参考にさせていただきました。
https://qiita.com/furu8ma/items/50718efebee20fd24517
/home/wordpress/mariadb/docker-compose.yml
に下記を追加します。
phpmyadmin:
image: phpmyadmin/phpmyadmin
environment:
– PMA_ARBITRARY=1
– PMA_HOST=db-data
– MYSQL_USER=●●●
– MYSQL_PASSWORD=●●●
– MYSQL_ROOT_PASSWORD=●●●
links:
– mariadb
ports:
– 8080:80
volumes:
– /sessions
networks:
– common_link
PMA_HOSTのdb-dataは、この直前で定義しているデータベースデータのコンテナ名です。
また、8080で公開されるので、ファイアウォールのルールで8080を解放する必要があります。
ファイルの移行 DB移行後、最初はそのままデータをINSERTしてしまったら、最初のページから旧サイトに飛ばされるという事態になり、文字列を変換してからINSERTするように修正。
次にファイルの移行ですが、こちらについては、まずファイル20MB制限があったので（何の話か忘れてしまいましたが）、分割してzipでアップしました。
そして、GCE初期状態ではzipが入っていなかったためインストール。
sudo apt install unzip
なぜだか、ずいぶん画像リンク切れが多発していますが、とりあえずは良しとします。
サーバ停止 とりあえず良しとして、アナリティクスの設定をしていたら、数日後、サイトの検索が利いていないことに気づきました。
おかしいと思い、Dockerのダウン・アップをすると利くようになるので、はて？と思っていたら、しばらくするとまた同じ現象。そして、だんだん間隔が短くなっていき、最後は、SSHが接続できなくなってしまいました。
Webコンソールだからかなと、ここでgloudコマンドツールをインストールすることにします。
しかし、gloudコマンドツールは使えるようになっても、そのSSHはやはり使えません。
Google公式トラブルシューティングということで、
https://cloud.google.com/compute/docs/troubleshooting/troubleshooting-ssh?hl=ja
を試していきます。
「インスタンスをシャットダウンせずに検査する」あたりは、今回の件とは関係なくためになる、GCEの色々な機能の勉強になる手順でしたが、結局デバッグインスタンスにも接続できません。</description></item><item><title>サイト引っ越し、そして、再引っ越し（Part1）</title><link>https://jqinglong.github.io/programmers-office/%E3%82%B5%E3%82%A4%E3%83%88%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97%E3%80%81%E3%81%9D%E3%81%97%E3%81%A6%E3%80%81%E5%86%8D%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97%EF%BC%88part1%EF%BC%89/</link><pubDate>Sat, 22 Dec 2018 02:30:46 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%82%B5%E3%82%A4%E3%83%88%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97%E3%80%81%E3%81%9D%E3%81%97%E3%81%A6%E3%80%81%E5%86%8D%E5%BC%95%E3%81%A3%E8%B6%8A%E3%81%97%EF%BC%88part1%EF%BC%89/</guid><description>サイト引っ越しの目的 Lighthouseを知って調査してみると、そういえばこのご時世にHTTPS対応されていない。
また、体感としてページの読み込みが遅い。
サイト構成も、イマイチに感じられてきた。
ということで、引っ越しをすることにしました。
さくらのレンタルサーバは使っているので、それでも良いと思いましたが、新しいことにも挑戦しようということで、引っ越し先を検討したところ、こちらのサイトが面白かったので、これに従いました。
GCPの無料枠でdev.toなみの爆速WordPress環境を構築する 引っ越し手順でのトラブル色々 上記サイトの手順は、非常に良くできているので、基本的には、そのまま従えば大丈夫なのですが、私の環境の問題等で、若干はまったところがありました。
freenom 大した話ではないですが、最初登録した際にエラーになりました。
そういう場合は、Service &amp;gt; My Domainsから確認できる。
プロキシサーバーコンテナを起動（nginx-proxy） 今回の方法では、Docker-composeで、いくつかのDockerコンテナを起動して、それらを連携して動作させます。
大きな手順としては、Dockerインストール、Docker-composeインストール、Dockerネットワーク作成、プロキシサーバーコンテナを起動（nginx-proxy）、と進めていくのですが、最初のコンテナであるnginx-proxyの起動でエラーとなりました。
Creating nginx-proxy … error
・・・
ERROR: for nginx-proxy Cannot start service nginx-proxy: b’driver failed programming external connectivity on endp
oint nginx-proxy (・・・): Error starting userland proxy:
listen tcp 0.0.0.0:80: bind: address already in use’
という感じです。よく読めば、ポート80番がバッティングしているとわかります。
元々、勉強用に色々立ち上げていたGCE環境のため発生した問題で、綺麗な環境であればこれは発生しないと思われます。
これに対して、最初は、/home/wordpress/nginx-proxy/docker-compose.yml　を編集して、80:80　→　8088:8088　と変更しました。
これにより、起動するようにはなりました。ただ、その後結局他のエラーが発生し、そもそも新しいサイトを8088で公開するのもありえないので、
sudo service apache2 stop
sudo update-rc.d -f apache2 remove</description></item><item><title>Meet Magento 2018 – Google講演</title><link>https://jqinglong.github.io/programmers-office/meet-magento-2018-google%E8%AC%9B%E6%BC%94/</link><pubDate>Sat, 17 Nov 2018 07:39:32 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/meet-magento-2018-google%E8%AC%9B%E6%BC%94/</guid><description>先日参加した Meet Magento 2018 得られたものを書きたいと思いつつ、多すぎてどうしようという状態。 とりあえず、書きなぐっていきますが、息切れの可能性しかなし。 The path to purchase with Google 最後はGPayの宣伝！と思いつつ、色々なサービスの紹介が面白かったです。 https://httparchive.org/ 資料を作る際の統計情報的な根拠として、使い勝手がよさそうですね。 revenue impact calculator 検索すると、https://www.thinkwithgoogle.com/feature/mobile/　に行けと言われるます。で、このサイトを調べようとすると、Domain not found！弱小すぎてダメみたい。 Lighthouse https://developers.google.com/web/tools/lighthouse/?hl=ja
に情報がありますが、むしろ簡単なのは、F12デベロッパーツールのAudits。
さらに、セミナーと同日発表になっていますが、PageSpeed Insights　にLighthouseが組み込まれたとのこと。
で、このサイトを調べようとすると、Lighthouse was unable to reliably load the page you requested！
弱小すぎるにも程がある。 Lighthouseをもう少し使ってみる さて、せっかくなので、F12→Autditsをもう少し使ってみます。
まず、Performanceから試してみると、画像が大きいよ、と言われます。最近、ページ上部にスライダー画像を付けましたが、早速悪影響があるということで、画像を調整しました。最近アナウンスされた、Googleの
https://squoosh.app/
を使ってみました。既存のアップロード済み画像を一気に調整できたらうれしいです。
SEOについては、meta descriptionがないということだけだったので、さっと付けられるところだけ付けていきます。</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ API呼び出し</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-api%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%97/</link><pubDate>Sat, 17 Nov 2018 01:07:21 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-api%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%97/</guid><description>Code4Startup
先に作ったFacebook連携用APIの呼び出し。
ここでログイン・ログアウトの機構を一気に作るので、ここをやっておかないとドライバー用アプリが進められなくなる。
が、とりあえず、一旦は一通りビデオを見てみることにする。
この先は、その他API呼び出しの部分なので、ある意味飛ばしても良いはず。
一つへーと思ったのは、API呼び出しで、httpだと怒られる訳ですが、info.plistで、App Transport Security Settingsの設定を追加することで接続できるようになる。
例えば、この辺の情報ですね。
https://qiita.com/uhooi/items/68939999c2c31e5f5557
 </description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ Facebook接続</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-facebook%E6%8E%A5%E7%B6%9A/</link><pubDate>Tue, 13 Nov 2018 22:33:53 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-facebook%E6%8E%A5%E7%B6%9A/</guid><description>Code4Startup
Task17ではFacebookへの接続。
色々なものをインストールしますが、それによりこんなに簡単にできるのだ、ということが感じられます。
ただ、やればできそうなので、一旦ビデオだけ見てスルーしてます。
そして、Task18に入ると、Asynchronousの世界の講義が始まりました。そして、Closureの解説。
Appleのドキュメントも読みましょうと。
https://docs.swift.org/swift-book/LanguageGuide/Closures.html
 </description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ デザインなど</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E3%83%87%E3%82%B6%E3%82%A4%E3%83%B3%E3%81%AA%E3%81%A9/</link><pubDate>Sun, 11 Nov 2018 01:59:59 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E3%83%87%E3%82%B6%E3%82%A4%E3%83%B3%E3%81%AA%E3%81%A9/</guid><description>Code4Startup
Task 16終了。
最後は、デザインの統一等を行いますが。
UIApplication.shared.statusBarStyle = .lightContent
は、Setter for ‘statusBarStyle’ was deprecated in iOS 9.0: Use -[UIViewController preferredStatusBarStyle]
という警告が出ます。しかし、
UIApplication.shared.preferredStatusBarStyle = .lightContent
はダメです。これはこのままにしておきます。
また、
UINavigationBar.appearance().titleTextAttributes
= [NSForegroundColorAtrributeName: UIColor.white]
はエラーとなり、コメント欄では、[NSAttributedStringKey.foregroundColor: UIColor.white]
にしたら良いというコメントがあるのですが、正しくは、
[NSAttributedString.Key.foregroundColor: UIColor.white]でした。
また、色選択の支援Webサービスが紹介されています。
http://uicolor.xyz/#/hex-to-ui
Code4Startup</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ cocoapods</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-cocoapods/</link><pubDate>Sat, 10 Nov 2018 12:14:55 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-cocoapods/</guid><description>Code4Startup
さて、クレジットカード情報入力画面を作るにあたっては、cocoapodsなるものを導入するようです。
ターミナルで、sudo gem install cocoapodsを叩きます。
ビデオでは1 gem installedであっさり終わっていましたが、私の環境では結構な量のインストールログが流れて、28 gem installed。そもそも、ターミナルを立ち上げるのさえ初めてというまっさら環境ですから、そんな感じなのでしょうか。
次にpod initによって、Podfileというファイルができますが、それをVisual Studio Codeで開いて保存したらファイル名が「Pod file」になっていた。まあまあの驚き（何かの操作ミスかとは思いますが、そんなミスする？？）。
さらに、pod installすると、ビデオではすぐにStripeのインストールが始まっていますが、私の環境では、Analyzing dependenciesから始まって、結構な量の何かをインストールし始めて、ちょっと不安になりましたが、無事完了。
そして、これをインストールすることにより、Viewにクラスを指定するだけで、クレジットカード番号入力欄が勝手にでき上がるというのはセンス良い！
という訳で、この辺も飛ばさずにやっておくべきですね。
Code4Startup</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ Swift続行中</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-swift%E7%B6%9A%E8%A1%8C%E4%B8%AD/</link><pubDate>Sat, 10 Nov 2018 03:22:20 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-swift%E7%B6%9A%E8%A1%8C%E4%B8%AD/</guid><description>Code4Startup
さて、Swiftでの開発、ViewController、segue等の基本的な概念を、あまり理解せずに進めているので、これで一人で作れるのかと言ったら微妙ですが、それでも色々繰り返していくうちに何となくは解ってくるようには思われます。
で、一番興味があるのは、ドライバー用の地図と連携する部分なので、途中で一旦そちらに飛んでみたのですが、いつの間にかMVCのグループ分けがされていたり、ソースを流用したりするところがあるので、やはりそれは無理があるようです。
ですので、ちょっと書くのは飛ばしながらでも一通りは見ていかないとダメかなということで、続行していきます。
そして書きながら、Android版は全く作り直しだよな、と、やはり悩みは続きます・・・
Code4Startup</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ iMac購入して続行</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-imac%E8%B3%BC%E5%85%A5%E3%81%97%E3%81%A6%E7%B6%9A%E8%A1%8C/</link><pubDate>Sun, 28 Oct 2018 14:30:32 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-imac%E8%B3%BC%E5%85%A5%E3%81%97%E3%81%A6%E7%B6%9A%E8%A1%8C/</guid><description>Code4Startup
iMac購入 一旦Xamarinを始めたわけですが、そして第一印象はさほど悪くもなかったのですが、結局iOS版を作成するためにはXcodeの入ったMacが必要になるということで、熟慮した結果（1日ほど）iMacを購入しました。
iMac MK462J/A 一体型 PC 27型 Retina 5K Late 2015 Core i5 6500 3.2GHz 24GB HDD1TB High Sierra 10.13
中古ですが全く中古感なし。それでいてメモリが標準8GBのところ24GBに増設されており、値段は標準新品より7万円位安い。
12インチMacBookの整備品も魅力はありましたが、使用中のThinkPad T430sも全然現役で使えることと、値段も上記中古品ならあまり変わらなくなってしまうということで、ちょっとだけ贅沢品を買いました。
快適そのものです。
swift開始 ということで、すぐさまXcodeをインストールし、と思ったらOSアップデートが必要と言われたのでアップデートし、環境を整えました。
ちなみに、エディタどうしようかと思い、Macのエディタを検索したらいまだにCotEditorとか上位に出てきて、ムムとなりましたが（以前Mac使ってた時にはCotEditor派でしたけど）、素直にAtomとVSCodeで悩んでVSCodeにしました。
始めてみると、やはりこのデザインツールは素晴らしい。ここまでサポートしてくれると、やる気の出方が違います。
とりあえず4レッスンやってみてのハマりポイントは二つ。
一つは、FoodTaskerMobile-Bridging-Header.hのファイルの場所。レッスンの中ではこれをLibディレクトリに移動するのですが、参照できませんというエラーになります。
これを参照できる場所に戻しても良いのですが、やった対応は、プロジェクトのBuild SettingsのObjective-C Bridging Headerの記述を削除すること。これで、このエラーは解消しました。
（2018/11/04）
さすがにこれはダメ。後で、self.revealViewControllerというところの参照ができなくなります。
FoodTaskerMobile/Lib/FoodTaskerMobile-Bridging-Header.h
とすることで正常動作になります。
もう一つは、画面遷移しても目的のページが表示されず、白いままになってしまうこと。これは、実はView Controllerのページが表示されていたのですが、なぜそうなるか。結論は、このコントローラに対しては、クラスSWRevealViewControllerを指定しなければならないのですが、それが漏れていたため。ビデオではちゃんと設定することになっているので、その部分で居眠りしていたかもしれません。
ということで、基本的な画面の作り方と、遷移の仕方は完了。
ついでに言うと、レッスンで使用しているアイコンはどこかで手に入れられるのか？？謎。
Code4Startup</description></item><item><title>格納型XSS システムアーキテクト試験より</title><link>https://jqinglong.github.io/programmers-office/%E6%A0%BC%E7%B4%8D%E5%9E%8Bxss-%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%82%A2%E3%83%BC%E3%82%AD%E3%83%86%E3%82%AF%E3%83%88%E8%A9%A6%E9%A8%93%E3%82%88%E3%82%8A/</link><pubDate>Mon, 22 Oct 2018 21:53:16 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E6%A0%BC%E7%B4%8D%E5%9E%8Bxss-%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%82%A2%E3%83%BC%E3%82%AD%E3%83%86%E3%82%AF%E3%83%88%E8%A9%A6%E9%A8%93%E3%82%88%E3%82%8A/</guid><description>日曜日は、情報処理技術者試験。システムアーキテクト試験(SA)を受験してきました。
午前Ⅱの回答は即日公表され、80点でしたので、あとは午後次第。感触は良かったですが、さて、どうなることやら。
午前Ⅱの試験は勉強になるものが多いですが、今回受験中に知って気になったのが、「格納型XSS」という言葉。
IPAのサイトでも解説されていました。
https://www.ipa.go.jp/files/000024726.pdf
こちらのサイトだと、「反射型」は攻撃者が自分で出力結果を利用し、「格納型」は第三者に出力結果を利用させる、という違いのように思われ、それならこのように分類することも納得できますが、このページの元となっている共通脆弱性タイプ一覧CWEの説明では、格納型もあくまでも第三者攻撃の手段と捉えているようです。
https://jvndb.jvn.jp/ja/cwe/CWE-79.html
他の様々なサイトを見ても、CWEの説明を引用して説明しているようです（そりゃそうだ）。
けど、そこで例として挙げられるURLにスクリプトを埋め込む等は、スクリプトを格納しているのとあまり意味合いは変わらなくないかなと、いまいち腑に落ちません。
当初反射型しかなくて、格納型が出てきたというなら、より無意識に被害者になるパターンが増えてきたという警鐘を鳴らす意味があると思いますが、どちらかというと格納型のパターンの方が昔から言われてきている方法だと思いますし。
今回下記の本を使用しました。正直この試験は、午後は対策しにくい（どちらかというと国語の問題）ので、午前Ⅱ対策を頑張るのが良いのかなと思います。（趣味の読み物としては午後試験の内容は最高）
ALL IN ONE パーフェクトマスター システムアーキテクト 2018年度 (旧:合格テキスト・合格トレーニング) posted with カエレバ TAC情報処理講座 TAC出版 2018-03-25 Amazon 楽天市場 7net</description></item><item><title>XamarinのXAMLのデザイナー</title><link>https://jqinglong.github.io/programmers-office/xamarin%E3%81%AExaml%E3%81%AE%E3%83%87%E3%82%B6%E3%82%A4%E3%83%8A%E3%83%BC/</link><pubDate>Sat, 13 Oct 2018 14:11:23 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/xamarin%E3%81%AExaml%E3%81%AE%E3%83%87%E3%82%B6%E3%82%A4%E3%83%8A%E3%83%BC/</guid><description>Xamarinも楽ではないですなー
Xamarinのチュートリアル https://docs.microsoft.com/ja-jp/xamarin/xamarin-forms/get-started/hello-xamarin-forms/quickstart?tabs=vswin
で、最初のとっかかりは良かったのですが、構成がいまいちまとまりきっておらず、内容もビデオを見たりするのが多いのでちょっと進めにくい。
ということで、こちらをやってみようと思います。
かずきのXamarin.Forms入門 posted with カエレバ 大田　一希 2016-12-29 Amazon 楽天市場 7net （もうすこし画像何とかすればよいのにと思いますが。もったいない・・・）
16ページ
StackLayout.Children
省略可能となっているが、そもそも廃止されてないかな？？
デザイナが使えない 19ページ
グリッドの画面を作ってみるというところで、ここはデザイナを使ってみるか、と思ったわけですが。
Xamarin.formsのデザイナは提供されていない？
しかし、こんなページもあるので、ないことはないのでは？？
https://docs.microsoft.com/ja-jp/visualstudio/designers/creating-a-ui-by-using-xaml-designer-in-visual-studio?view=vs-2017
Blendならもしかしたら、と思いさらに頑張って10GB空けてインストールしたが、そもそもXamarinのテンプレートがない。
https://marketplace.visualstudio.com/items?itemName=mohamedalinouira.XamarinFormsTemplates
をインストールしてみるがダメ。
https://developercommunity.visualstudio.com/content/problem/272117/xamarin-designer-not-working.html
を見てアルファ版のフィックスも入れてみたがダメ。
よくよく見てみると、デザイナの説明は、Xamarinの説明ではない！
Windowsユニバーサルとか、デスクトップアプリケーションをxamlで作る場合はデザイナが使えるけど、xamarinのxamlではデザイナは使えないというお話でした。
プレビュー機能は提供されているので、こんな感じになります。
この画面でいうと、左側のxml記述に、一番左のツールボックスからドラッグアンドドロップはできます。
これで頑張るしかないのですね。
なお、Windowsユニバーサルの方で作成したXamlからコピペできるかなと思ったら、色々違うようでそれもできず。
厳しい！</description></item><item><title>とりあえずxamarinチュートリアル中（初心者の超入門編）</title><link>https://jqinglong.github.io/programmers-office/%E3%81%A8%E3%82%8A%E3%81%82%E3%81%88%E3%81%9Axamarin%E3%83%81%E3%83%A5%E3%83%BC%E3%83%88%E3%83%AA%E3%82%A2%E3%83%AB%E4%B8%AD%EF%BC%88%E5%88%9D%E5%BF%83%E8%80%85%E3%81%AE%E8%B6%85%E5%85%A5%E9%96%80/</link><pubDate>Sat, 13 Oct 2018 01:34:58 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%81%A8%E3%82%8A%E3%81%82%E3%81%88%E3%81%9Axamarin%E3%83%81%E3%83%A5%E3%83%BC%E3%83%88%E3%83%AA%E3%82%A2%E3%83%AB%E4%B8%AD%EF%BC%88%E5%88%9D%E5%BF%83%E8%80%85%E3%81%AE%E8%B6%85%E5%85%A5%E9%96%80/</guid><description>Code4Startup
xamarinの選択 Code4StartupはここからSwiftによるモバイルアプリ開発に入ります。
とっかかりの部分の講座を見てみましたが、やはり画面デザインから入りますよね。
さて、Windows上にswift環境は用意したつもりだったのですが、Ubuntu上でSwiftが動くというのは、言語自体が動く、コンパイルが動くというだけの話のようです。
しかし、Swiftを使う目的は基本的にはiOSアプリを作るためであり（勝手な想像）、画面を作れないのであれば10割がた意味がないのではないかと思うのです。
というわけで、改めてiOSアプリをどう作るか考えます。Monacaも経験したので当然それは考えるのですが、やはりまだ馴染めきれない。
今後メジャー化していくと思われるFlutterもまだ早いような気がする。
結局以前考えたxamarinに戻ってしまいました。
やはり、慣れ親しんだ.NET（と言っても私の主戦場はVB.NETであり、C#はほぼ素人ですが、それでも）なら、他よりも生産性も高く進められるのではないかと思うのが大きな理由です。
Visual Studio 2017 さて、そう思った段階でインストールされていたVisual Studioは2015でした。
ただ、xamarinはインストールされていなかったので、入れようとしたら20GBくらい必要と言われます。
きついぜ！と思いつつ、一生懸命不要ファイルの掃除をして、インストールしました。我が家のネットワークは不安定なのか、一晩たっても終わっておらず、その日帰って確認できたという、丸一日作業になってしまいました。
ところが、いざ始めようとしたときに目についたのが、2017ならCommunity版でiOS リモート シミュレーターが使えるようになったという情報。iOSアプリを作りたいがためにこんなに悩んでいるのに、これを使わない手はないでしょう。ということでインストールし直し。
2015を完全に削除するためには、膨大な手間がかかるということで、MS謹製の削除ツールを使用して削除しました。これも、朝起きたら1段階目が終わったような状態で、再度ツールを実行する必要があり、結局丸一日。
インストール自体は順調に終わりましたが、なかなか手ごわいです。
xamarinチュートリアル では、何はともあれチュートリアルということで、
https://docs.microsoft.com/ja-jp/xamarin/xamarin-forms/get-started/hello-xamarin-forms/quickstart?tabs=vswin
から始めてみます。
最初はエミュレータで画面表示するのが目的ということで、ソースはコピペ。
初回起動だけなのか、かなり時間がかかりましたが、Andoroid版画面はプレビューできました。
問題はiOSです。
結論としては、やはりMacOS機＝XCode機が必要ということです。
Xamarin.iOS 開発のために Mac とペアリングする
そうか、ということでちょっとがっかり。
ほぼほぼの開発はWindows機で行って、リリース時の手続き的なところだけMacがあればよいのかと勘違いしていました。
最近はMacを貸し出してくれるところもあるので、最後はそこを利用しようとしていたのですが、ちょっと方針が変わります。
けど、Mac買うならSwiftでいいじゃんとなりますしね・・・
（と言いつつMacBook欲しくなりつつある・・・
買うなら、0.92kgが魅力のこれ）
MacBook (12-inch/1.1GHz Dual Core Intel Core m3/256GB/8GB/802.11ac/USB-C/ローズゴールド) posted with カエレバ アップル 2016-04-20 Amazon 楽天市場 7net とりあえず、xamarin勉強を進めてみます。
  Essential Xamarin　ネイティブからクロスプラットフォームまで モバイル.</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ Stripeの使用</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-stripe%E3%81%AE%E4%BD%BF%E7%94%A8/</link><pubDate>Mon, 08 Oct 2018 02:45:59 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-stripe%E3%81%AE%E4%BD%BF%E7%94%A8/</guid><description>Code4Startup
自作サービスの決済手段として何を使うか、PayPalは開発者にやさしいなと思っていましたが、Stripeも十分良さそうです。
[][1]トップメニューに「開発者」があり、このサービスの向き先が伺える ちなみに、日本のサービスで、申込・審査を行わずに利用できるサービスはあるでしょうか？？
ちょっと違うんだよなーと思ってしまいます。
もちろん、そういうビジネスはそれでありなのですが、違うビジネスが展開されないのはなぜだろう、ということです。
そして、PayPal。
開発者向けサービスも充実しているし、無料でテストサイトでの決済を確認することもできるし、実際に運用する際の手数料も安いとは思いませんが（弱小サイトを前提とする場合）許容できるのではないかと思いますし、非常に使いやすいと思います。
[][2]PayPalも開発者にやさしい ただ、唯一最大の問題が、決済サービスをしようとするためにはpaypalの会員登録が必要ということ。
私のように一度登録してしまっている人としては、そういうものだと分かって使うのでよいのですが、paypalに縁のなかった人がいきなり支払いを行おうとしたらpaypal会員登録から始まってしまうというのは、ちょっとハードル高いのではないかと思われます。
それに対して、Stripe。
普通にクレジットカード情報を送信することにより（実際は端末にStripeのトークンが返されて、これをサービスに送信することで、サービスがそのトークンとサービスのAPIキーを紐づけて）決済されるので、違和感なしで決済完了できるということです。
なお、開発中のアプリでは、ユーザ認識にユーザトークンのやり取りをしているので、トークントークン言われて分からんわ、という感じになりそうですが（実際それを間違えて送信しているというコーディングミスをしたり）、冷静になれば特に問題はありません。
なお、開発者向けドキュメントの中でデモ機能が用意されていて、そこでダミーのカード情報を送信することによりStripeのトークンを取得できる（そして、それを使って開発サービスのテストができる）わけですが、講義の中で紹介されているURLは既に変わってしまっており、stripe docs→Payments→Stripe.js and Elements→Quickstart　（Card Element Quickstart）
https://stripe.com/docs/stripe-js/elements/quickstart
から利用できるようになっています。
これは、別件のWordpressからの決済でも使ってみたいと思います。</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ Chart APIなど</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-chart-api%E3%81%AA%E3%81%A9/</link><pubDate>Sun, 07 Oct 2018 08:25:00 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-chart-api%E3%81%AA%E3%81%A9/</guid><description>Code4Startup
Task14までdone。
途中結構長い時間はまったのが、
Order.objects.filter・・・
とすればよいところを
OrderSerializer(Order.objects.filter・・・
としてしまったために、発生したエラー。
他からのコピペで無意識についてしまったわけですが、これを探りながらの他のバグにも気づいたし、まあよいか。
Task14ではレポート画面と言ことで、グラフを出力するために、
Chart.js
を使います。
これはこれでよいなと思いますが、
Google Charts
もあるからね、とは思ってしまいます。
そして、いよいよTask15でPythonは終了となりますが、一つの山場と考えているStripe連携。
ここまで連休中に終わらわせておいて、Swiftに入りましょう。</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ Postmanのはまりポイント</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-postman%E3%81%AE%E3%81%AF%E3%81%BE%E3%82%8A%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88/</link><pubDate>Mon, 01 Oct 2018 13:04:47 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-postman%E3%81%AE%E3%81%AF%E3%81%BE%E3%82%8A%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88/</guid><description>Code4Startup
Task11で、27分の長丁場のレッスンがあります。
いったん全部見てから、書いてみたのですが、途中ではまりました。
「AccessToken matching query does not exist.」
これは、結構な人がはまっているようなのですが、なかなかまともな回答がついていないように思われます。
正しい回答はこちら。
https://uploads.disquscdn.com/images/bcf707b4c65186dcfcc293547fc57bbae63e2fa0fbddc89aa6b82dbdb7418f69.png
Postmanのパラメータ指定時に、Body→form-dataを指定する必要があります。
そうしないと、request.POST.get(“access_token”)がNoneになってしまうのでした。
改めて、ビデオを見返すと、ちゃんと説明してくれてますなぁ＞＜
そして、同じ質問が、teratailに上がっていたので、初めて回答してみました。
もう少し飛ばしていきたいのですが、必ずどこかではまりますね・・・</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ 久しぶり</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E4%B9%85%E3%81%97%E3%81%B6%E3%82%8A/</link><pubDate>Sat, 29 Sep 2018 13:59:15 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E4%B9%85%E3%81%97%E3%81%B6%E3%82%8A/</guid><description>Code4Startup
色々並行ででやっていると、再開方法を確立しておかないと忘れますね。
source myvirtualenv/foodtasker/bin/activate
cd foodtasker/
python manage.py runserver xxx.xxx.xxx.xxx:8000
これでhttp://xxx.xxx.xxx.xxx:8000/が動くようになる、という感じですね。
ということで、Task10まで終わらせました。
とありあえず、Task15まで一気に進めて、Tsk16からのSwiftによる顧客向けモバイルアプリ作成を早く試してみたい。
 ちなみに、Pythonやってるなら、こちらも面白そうですね。
Pythonで学ぶ『ブロックチェーンプログラミング入門』が良すぎた話
 関連記事 Code4StartUp ～ UberEatsを作ろう ～ Swift環境 Code4StartUp ～ UberEatsを作ろう ～ 淡々とページ追加 https://www.programmers-office.ml/?s=code4</description></item><item><title>Magentoのベースページの仕組み</title><link>https://jqinglong.github.io/programmers-office/magento%E3%81%AE%E3%83%99%E3%83%BC%E3%82%B9%E3%83%9A%E3%83%BC%E3%82%B8%E3%81%AE%E4%BB%95%E7%B5%84%E3%81%BF/</link><pubDate>Fri, 28 Sep 2018 06:31:15 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/magento%E3%81%AE%E3%83%99%E3%83%BC%E3%82%B9%E3%83%9A%E3%83%BC%E3%82%B8%E3%81%AE%E4%BB%95%E7%B5%84%E3%81%BF/</guid><description>自分で作成したウェブサイトにWhat’sNewを出そうと思いましたが、それを調べる過程で、ベースページの仕組みが分かってきたので先にそちらを確認。
1.自分で作成したウェブサイトのホームページをドキュメントルートにする 現在、元々のサンプルデータのウェブサイト　http://example.com/magento/　と　自分で作成したウェブサイトhttp://example.com/aaa/　がある想定で、自分で作成したウェブサイトを　http://example.com/aaa/　ではなく　http://example.com/　にしようという話です。
これは新しいウェブサイトを表示できるようにしたのとやり方は同じで、店舗＞設定＞設定　の画面で、左上の「ストアビュー」を、自分で作成したウェブサイト（ストアビューではなくウェブサイト）に変更し、その状態で、左メニュー「Web」の「ベース URLs」等をhttp://example.com/にします。さらに、サーバにて
cd /opt/bitnami/apache2/htdocs/magento
cp .htaccess ..
cp index.php ..
cd ..
ln -s /opt/bitnami/apache2/htdocs/magento/app/ app
ln -s /opt/bitnami/apache2/htdocs/magento/lib/ lib
ln -s /opt/bitnami/apache2/htdocs/magento/pub/ pub
ln -s /opt/bitnami/apache2/htdocs/magento/var/ var
mv index.html xindex.html
とやって、index.phpをを同じように修正するだけです。サンプルウェブサイトも生きています。
2.店舗ページの作り方 そして、この下に、各店舗のページを作ろうと思います。
すなわち、ドキュメントルートは自分が作成するサービスのトップページにして、その中で複数店舗の商品を使うこととし、各店舗のページも作成する、ということです。
これも、同じようにやろうとしたらうまくいきませんでした。
PARAM_RUN_TYPEの設定値は、ウェブサイトの場合は「website」でしたが、店舗の場合は「store」とのことです。
ところが、その方法で、要するに店舗用ウェブサイトを作るようなイメージですが、元々のサンプルサイトにリダイレクトされてしまいます。
そこで、またSQLを解析しようと思いますが、今回は、昨日教えてもらった技を使います。
bin/magento dev:query-log:enable
これにより、実行ログを出力してくれます。
いちいちmy.cnf編集しなくて良いし、/opt/bitnami/ctlscript.sh restart mysql しなくてよい。
ただ、そのクエリの呼び出し元情報も含めて大量のログになるので、ちょっと醜いのですが、対処としては、
（Magentoインストール先配下の）var/debug/db.log を「SQL: 」でgrepします。
で、見てみたのですが、今回は空振りで、たいしたログは出ていませんでした。
ここで、ちょっと軌道修正。
http://example.com/shop_a
を見ようとしていたのですが、普通にページを作って、それを見ることにします。
そうすると、http://example.com/shop_a/new_page　という形で表示される。</description></item><item><title>Magento ウェブサイトの切り替え</title><link>https://jqinglong.github.io/programmers-office/magento-%E3%82%A6%E3%82%A7%E3%83%96%E3%82%B5%E3%82%A4%E3%83%88%E3%81%AE%E5%88%87%E3%82%8A%E6%9B%BF%E3%81%88/</link><pubDate>Wed, 26 Sep 2018 02:27:56 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/magento-%E3%82%A6%E3%82%A7%E3%83%96%E3%82%B5%E3%82%A4%E3%83%88%E3%81%AE%E5%88%87%E3%82%8A%E6%9B%BF%E3%81%88/</guid><description>今やろうとしているのは、Magentoのサンプルのウェブサイトはアパレル業的なサンプルになっているので、これはこれで置いておいて、別の飲食業的なサイトを作ることです。
Magento ホームページカスタマイズへの道 まず、とっかかりの部分を作りました。 MagentoのSQL解析 商品の登録のされ方を分析し、商品属性、特に在庫状況が重要だと知りました。 続いて、ウェブサイトを分けてみたいと思います。
1.Magentoの商品のカテゴリ分け そもそもなぜ、このタイミングでウェブサイトを分けるかというと、商品登録の正しさが確認できないからです。
サンプルとして登録されているアパレル商品とは別に、ピザを登録し、それをピザ用のページに出したいと思います。が、これがまた難しい。
最初にやったように、ウェブサイト、店舗、ストアビューは作っておきます。
そして、店舗でルートカテゴリを選択するので、ルートカテゴリ（カタログ＞カテゴリ）を作ります。
で、例えば、この店舗用のWhat’sNewを作ります。そして、サンプルのWhat’sNewに表示される商品はどのようなものか見てみると、
SELECT `mg_url_rewrite`.* FROM `mg_url_rewrite` WHERE (`request_path` IN (‘what-is-new.html’, ‘what-is-new.html/’)) AND (`store_id` IN (‘1’))
というようなSQLが実行されていることが分かります。
そして、表示したいページをIN句を変えて見てみると表示されませんので、最後のAND条件を外してみてみると、store_idが1以外で登録されていることが分かります。
では、どのようにstore_idを変えるのだという話になります。
2.Magentoにおける複数店舗（というかウェブサイト）の登録方法 ところが、多くの情報ではウェブサイト、店舗、ストアビューを登録できる、という話で終わってしまって、なかなか複数店舗を実際にどのような設定で表示させるのか、という情報が見つかりません。
と言いつつ、割と初期の段階で、公式情報のドメインを分けるみたいな話は出てくるのですが、いや、そこまでやらなくてよいから引数透とかで分けられるんじゃないの？？みたいなところでもがきます。
例えば「___store」を使うみたいな話です。
しかし、結論でいえば、それは無理で、おそらく簡単なのは、ディレクトリ自体を分ける方法です。
例えば、サンプルのウェブサイトをhttp://example.com/magento/　で作っていたら、http://example.com/aaa/　のようにするということです。
参考はこちらとこちら。
https://docs.nexcess.net/article/how-to-configure-magento-2-storefronts.html https://magento.dekirumonn.com/forums/topic/multi-store-%E3%83%89%E3%83%A1%E3%82%A4%E3%83%B3%E8%A8%AD%E5%AE%9A%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/ apache素人なのでちょっとビビっていたのですが、これについて言えばそんなに難しくはなく、index.phpと.htaccessをコピーして、index.phpを一部書き換えましょう、ということ（書き換えサンプルは実はindex.phpの一番先頭に書いてあります）。
そして、app、lib、pub、varへのシンボリックリンクを、元インストールしたディレクトリの方に張っておきましょう、ということです。
bitnami環境だと、
ln -s /opt/bitnami/apache2/htdocs/xxx/app/ app
ln -s /opt/bitnami/apache2/htdocs/xxx/lib/ lib
ln -s /opt/bitnami/apache2/htdocs/xxx/pub/ pub
ln -s /opt/bitnami/apache2/htdocs/xxx/var/ var</description></item><item><title>MagentoのSQL解析</title><link>https://jqinglong.github.io/programmers-office/magento%E3%81%AEsql%E8%A7%A3%E6%9E%90/</link><pubDate>Sat, 22 Sep 2018 07:30:48 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/magento%E3%81%AEsql%E8%A7%A3%E6%9E%90/</guid><description>自分で作成したページ・ウィジェット・ブロックに思うように商品が表示されない。
ならば、どのようなSQLが流れていて、何が引っかかって表示されないのか調べてみよう、という活動です。
1.環境整備 (1)SSH接続用ターミナルソフト Tera TermでもPuttyでも、お好きなものをどうぞ。
ではあるのですが、AWS内bitnamiで構築した環境のMy SQLに接続する、という観点で。
Puttyでは、Host Nameにユーザ名@xxxを記載しますが、bitnamiで構築した場合は、
ubuntu@xx.us-east-2.compute.amazonaws.com
というようになります。
そして、Connection＞SSH＞Auth　でPrivate keyにppkファイルを登録します。
この接続状態をそのまま保存しておいて、次回からはSaved Sessionから呼び出すだけなので、現在は基本的にはPuttyを使用しています。
Tera Termでは、ホスト欄にxx.us-east-2.compute.amazonaws.comを入力しOK、ユーザ名にubuntu、「RSA/DSA/ECDSA/ED25519鍵を使う」で、ppkファイルではなくpemファイルを指定する、という形になり、ホスト名以外は次回に覚えてくれていないので、ちょっと面倒だなと思っています。ターミナル上での見た目はTeraの方がきれいなので好きなのですが。
(2)WinSCP ファイルのアップ・ダウンロード用にはこちら。
SFTPで、ホスト名はxx.us-east-2.compute.amazonaws.com、ユーザ名はubuntu、設定＞SSH＞認証の秘密鍵にppkファイルを指定します。
これも、保存しておけば、次回以降の接続はリストから選択するだけなので、よいです。
(3)A5 : SQL Mk-2 これが本日のポイント。
https://a5m2.mmatsubara.com/
DB接続ツールは色々ありますけど、個人的にはこれが最強だと思っています。
特に、最強なのがSQL整形機能。今回のように、ログからSQLを取り出して解析しようと思う時に、Ctrl-Q一発でSQLを見やすくしてくれるのは、非常に助かるので、普段の会社の仕事でも使っております。
これの接続は、ちょっとばかり難しいです。トンネリングでの接続になります。
A5 : SQL の接続を作成する際にはMySQL/MariaDBを選択できます。その中の設定で、SSH2トンネルの指定ができます。
「SSH2トンネル」タブのSSH2ホスト名をxx.us-east-2.compute.amazonaws.com、ユーザーIDをubuntuにして、秘密鍵ファイルにpemファイルを指定します。
その上で、「基本」タブのサーバー名にはSSH2サーバーから見たサーバー名を指定するので、初期の状態ならlocalhostを指定します。Magento用に作成したユーザーID、パスワードを指定しますが、
grant select on *.* to home;
が必要だったように思います（記録し忘れている）。
ということで、この3点セットがそろうと、割と自由にDBもいじれるかと思います。
2.MySQLのクエリトレース 普段はSQL Serverが主戦場なので、トレース取得はProfilerを便利に使用させていただいています。
ではMySQLはどうかということで、こちらを参考にさせていただきました。
http://blog.szmake.net/archives/496
my.cnfはどこにあるかというと、これはbitnami特有で、/opt/bitnami/mysql/　にあります。
また、my.confを編集した後、MySQLをリスタートするのですが、これもbitnami特有で
sudo /opt/bitnami/ctlscript.sh restart mysql
となります。
bitnamiでは、/opt/bitnami　配下に色々なものが存在する、ということを認識しておくだけでもいろいろはかどるかと思います。
3.Magentoで実行されるSQL で、トレースを取ってみた結果です。
例えば、
SELECT `mg_store_website`.* FROM `mg_store_website`
↓
website_id code name sort_order default_group_id is_default</description></item><item><title>Magento ホームページカスタマイズへの道</title><link>https://jqinglong.github.io/programmers-office/magento-%E3%83%9B%E3%83%BC%E3%83%A0%E3%83%9A%E3%83%BC%E3%82%B8%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%B8%E3%81%AE%E9%81%93/</link><pubDate>Fri, 21 Sep 2018 15:17:07 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/magento-%E3%83%9B%E3%83%BC%E3%83%A0%E3%83%9A%E3%83%BC%E3%82%B8%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%B8%E3%81%AE%E9%81%93/</guid><description>Magentoのサンプルのホームページはアパレル業的なサンプルになっていますが、これを飲食業的なサンプルにしたいと思っています。しかし、なかなか思うようにいきません・・・
1.やろうとしていること サンプルのトップページにあたる
http://example.com/magento/　（magentoはインストール時に指定）
これが、通常ベースURLになります。そして、ここに表示されているのは、アパレル業的なサンプルデータです。
今後の勉強用にこれはこれで残しておきたいのですが、できれば、アパレルサンプルはベースURLではなく別のURLにして、ベースURLで表示される内容を飲食業向けにしたいと思っています。
ただ、このベースURLで表示される内容のカスタマイズすら、どこから行うか分かりませんので、それは置いておき、まずは、とにかく飲食業向けホームページを作ることを目標とします。
2.ウェブサイト、店舗、ストアビューを作る 最初の基本は、ウェブサイト＞店舗＞ストアビュー　の構成です。
https://docs.magento.com/m2/ce/user_guide/stores/websites-stores-views.html
https://www.programmers-office.ml/magento-open-source-user-guide/getting-started/configuration_configuration-basic/stores_websites-stores-views/
今イメージしているのは、この飲食業向けに、標準のウェブサイトとは別のウェブサイトを作ります。
その下に、店舗を複数作ります。ストアビューは、通常複数言語対応用に使用されるようですので、これは各店舗1ストアビューとします。
https://docs.magento.com/m2/ce/user_guide/configuration/scope.html
https://www.programmers-office.ml/magento-open-source-user-guide/getting-started/configuration_configuration-basic/stores_websites-stores-views/configuration_scope/
3.商品を作る 次に商品を作ろうとしますが、いくつか、前提知識が必要です。
まず、最初に選択する必要がある、属性セットというものがあります。
これを選択することにより、商品として登録する属性の内容が切り替わります。
例えば、服にはサイズという属性があるが、カバンにはサイズという属性はない、というような形です。
そして、サンプルとして登録されている属性セットはアパレル用のものなので、料理用の属性セットを作成します。
例えば、ピザという属性セットを作成します。
しかし、実は、それよりも前に把握しておくべき内容があります。それは、商品には商品タイプというものがある、ということです。
https://docs.magento.com/m2/ce/user_guide/catalog/product-types.html
https://www.programmers-office.ml/magento-open-source-user-guide/catalog/catalog_product-create/catalog_product-types/
例えば、ピザの場合は、一種類のメニューに対して、サイズという考え方があると思います。
そのような複数バリエーションを持つ場合は、Configurable Productを指定して、新規商品の追加を行います。
商品タイプは見えるようになっておらず、そのまま新規商品画面に遷移できるので、最初は分かりませんでした。
4.ページを作る では、いよいよ、コンテンツ＞ページ　から、この飲食業ウェブサイト用のページを作ります。
ページのタイトル等を入力して、デザインを決めて、コンテンツを作成します。
で、ここが今日の本題なのですが、なかなか思うように表示がされないのです。
コンテンツのエディタとしては、ビジュアルに色々できます。
一番基本は、ウィジェットの追加という方式かと思います。
例えば、静的ブロックの挿入ということができ、そこで、サンプルとして用意されているブロックを挿入することは簡単です。
しかし、それではアパレルの商品が表示されてしまうので、ピザを表示させようと思います。
例えば、商品一覧というウィジェットタイプがあるので、それを選び、商品の条件として、属性セットがピザと等しいもの、という指定をします。
しかし、表示されません。
何が悪いのやら、となります。
5.SQL解析を始める ここで、ユーザガイドを丁寧に読み始めるというのが王道かと思い、だからこそユーザガイドの和訳を始めたわけですが、そう簡単に把握はできなそうです。
むしろ、実行されるSQLを解析した方が、原因にたどり着くのは早いのではないかと思い、そちらからのアプローチに切り替えました。
その話は明日に続けたいと思います。
関連記事 Magento(マジェント)始めました</description></item><item><title>Magento(マジェント)始めました</title><link>https://jqinglong.github.io/programmers-office/magento%E3%83%9E%E3%82%B8%E3%82%A7%E3%83%B3%E3%83%88%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F/</link><pubDate>Mon, 17 Sep 2018 12:51:55 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/magento%E3%83%9E%E3%82%B8%E3%82%A7%E3%83%B3%E3%83%88%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F/</guid><description>現在作ろうとしているサービスの基盤として、Magento(マジェント)がよいのでは、と思い、Magento(マジェント)を使い始めました。
いろいろ苦労していますが、やったことを片っ端から忘れてしまうので、ちょっとずつ記録を残していきたいと思います。
1.インストール先、方法について (1)AWS Lightsail 一番小規模の構成だと1か月無料で使用できます。
簡単に起動できるのは感動です。ただ、これだとパワー不足です。サンプルデータを入れようとすると途中で失敗するので、いったんメモリを増やしたりする必要があります。
今改めて試してみたらまた感じ方も違うかもしれませんが、。
(2)AWS Bitnami こちらはEC2のインスタンス作成に、AWS Marketplaceで提供されているBitnamiのAMI（Amazon マシンイメージ）を使用するという方法です。
こちらもサンプルデータを入れようとするとエラーになるのですが、その理由はシステム構成をバージョンアップしなければならないということでしたが、どうやってもPHPを7.1に上げられず、断念しました。BitnamiがMagento2.2環境を提供してくれるようになると、これはかなり有望な選択肢になると思います。
(3)GCP Bitnami では、ということで、いったんAWSではなく、GCPの方に立てようとしてみたのですが、AWS Bitnamiとほぼ同じ結果でした。
Bitnamiのイメージではなく、通常構成でインストールしようともしてみましたが、それも失敗（理由はもう忘れてしまいました）。
(4)AWS クイックスタート もういちど、AWSに戻り、やはり手順書見ながらやらないとね、ということで、こちらを参照。
AWS クラウドでの Magento: クイックスタートリファレンスデプロイ
サンプルデータ付きでインストール完了。
しかし、翌日、請求警告メール。改めて見てみると、これはものすごいリッチな構成で環境ができています。
（転載）
慌てて環境削除しました。
(5)AWS LAMP with PHP 7.1 Certified by Bitnami 最終的に現在使用している環境はこれ。Magento入りのAMIではなく、LAMP環境まで入っているAMIにMagento2.2.5をインストールしました。
こんな素人状態で大丈夫かなと思いつつ、AWSの勉強もしながらMagentoも勉強していきます。
2.現状の問題 問題もいろいろあるのですが、ありすぎて、とりあえず役立ちそうなところから勉強していく感じです。
(1)bin/magento setup:upgrade等をすると500エラーになる この問題のために、当初はサンプルデータを入れられず悩んでいました。
ところが、サンプルデータはインストール後にsetup:upgradeしなくてもちゃんと入っていましたので、それでしばらく動かしていました。
ただ、管理画面を日本語化しようとして、
composer require mageplaza/magento-2-japanese-language-pack:dev-master
php bin/magento setup:static-content:deploy -f ja_JP
php bin/magento cache:flush
とやったら、また500エラーになってしまいました。
そうなった場合、
bin/magento deploy:mode:set developer
とすると一応は動きます。しかしなぁ・・・
(2)Cronを動かせていない もしかしたら、これが(3)の原因だと悲しいのですが、これもなかなか手順が分からず・・・
(3)ホームページのカスタマイズができない サンプルのホームページは一応残しておいて、特定のストアビューのホームページを作って、ウィジェット等を配置したいのですが、うまくいっていません。</description></item><item><title>CORSを乗り越えて</title><link>https://jqinglong.github.io/programmers-office/cors%E3%82%92%E4%B9%97%E3%82%8A%E8%B6%8A%E3%81%88%E3%81%A6/</link><pubDate>Sat, 21 Jul 2018 12:31:40 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/cors%E3%82%92%E4%B9%97%E3%82%8A%E8%B6%8A%E3%81%88%E3%81%A6/</guid><description>さくらレンタルサーバの共有SSL（続き） さくらにテストサイトを立てて、データもコピーします。
あまり作りこんでいない段階でしたら、普通に、DB新規作成→WordPressをインストール→データエクスポート・インポートでやっても大した手間ではありません。
そして、共有SSLの設定は簡単です。
https://help.sakura.ad.jp/hc/ja/articles/206054862&amp;amp;#8211;%E5%85%B1%E6%9C%89SSL-%E8%A8%AD%E5%AE%9A%E6%96%B9%E6%B3%95
これにより、「the content must be served over HTTPS.」のエラーは解消します。
MonacaアプリがさくらサーバからJSON取得する場合のCORS対応 次は、予想通りではありますが、「No ‘Access-Control-Allow-Origin’ header is present on the requested resource.」エラーになります。
※ちなみに、この辺のエラーは、Chromeデベロッパーツール（F12キー）で確認します。
個人的には、これの対応についての情報も分かりにくかったです。
これは、ブラウザ側の制約だ、ということで、それを回避するのは、クライアント側アプリだと考えました。
しかし、config.xmlには既にの記述があるので、これで回避できていないとおかしいのでは、とかなり悩みました。
結論としては、データを提供する側で回避用のヘッダを付けます。自分が提供するデータを勝手に取られるのはまずいが、データ提供側で許可しているならブラウザも安心して取得する、という感じでしょうか。
ですので、サーバアプリ側でヘッダを追加します。
PHP・WordPress記述なので、こんな感じです。（$wpdb-&amp;gt;get_results　が好き）
$rows = $wpdb-&amp;gt;get_results($sql);
if ($rows) {
$json_data = json_encode($rows);
}
header(‘Access-Control-Allow-Origin: *’);
header( ‘Content-Type: application/json; charset=utf-8’ );
echo $json_data;
これにより、CORS制約も回避されました。
Monaca（Vue）でのJSON取得処理 これで、データが取得されましたので、あとは画面で使うように加工します。
ここも、まあまあ苦労しましたが、
var data = [];
・・・
axios.get(‘[https://xxx’)][1]
.then(function (response) {
for(var i = 0; i &amp;lt; response.</description></item><item><title>GCEの開発環境にSSL証明書を入れようと思ったが</title><link>https://jqinglong.github.io/programmers-office/gce%E3%81%AE%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83%E3%81%ABssl%E8%A8%BC%E6%98%8E%E6%9B%B8%E3%82%92%E5%85%A5%E3%82%8C%E3%82%88%E3%81%86%E3%81%A8%E6%80%9D%E3%81%A3%E3%81%9F%E3%81%8C/</link><pubDate>Fri, 13 Jul 2018 23:27:14 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/gce%E3%81%AE%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83%E3%81%ABssl%E8%A8%BC%E6%98%8E%E6%9B%B8%E3%82%92%E5%85%A5%E3%82%8C%E3%82%88%E3%81%86%E3%81%A8%E6%80%9D%E3%81%A3%E3%81%9F%E3%81%8C/</guid><description>＜環境の復習＞
サーバサイドの開発をAWS Cloud9で行います。
なるべく無料範囲で、ということで、EC2を使用せず、GCP上のGCEに接続します。
ですので、サーバ側開発環境はGCEに立っています。
クライアント側開発は、クロスプラットフォーム開発を行うためにMonacaを使用しています。
ですので、開発中は、MonacaからGCEに接続して、JSONを取得しよう、と考えています。
本番環境は、さくらレンタルサーバにサーバアプリを構築し、Monacaでビルドしたモバイルアプリから接続します。
ここまで、GCE上でWordPressを動作させており、Monacaでデザインの概要を作成しました。
次は、MonacaからJSON取得をしようとしています。
Let’s Encrypt さて、MonacaからGCEに接続してJSONを取得しようとしたところ、
The page at ‘https://ide.monaca.mobi/’ was loaded over HTTPS, but requested an insecure XMLHttpRequest endpoint ‘http://xxx/’. This request has been blocked; the content must be served over HTTPS.
というエラーになりました。
これは、ここまでの調査の中で予期されたエラーなので、では、SSL証明書を導入しましょう、ということになります。
こちら
https://nozomi-hiragi.com/gcd_wp_ssl_support/
を参考に、Let’s Encryptを入れようと思いました。
SSL証明書も無料の時代、すごいなと思います。
ところが。やはり、ところが。
ConfigurationError: Requested name xxx.xxx.xxx.xxx is an IP address. The Let’s Encrypt certificate authority will not issue certificates for a bare IP address.</description></item><item><title>Monaca Onsen UI V2 Vueで外部JSON取得</title><link>https://jqinglong.github.io/programmers-office/monaca-onsen-ui-v2-vue%E3%81%A7%E5%A4%96%E9%83%A8json%E5%8F%96%E5%BE%97/</link><pubDate>Thu, 12 Jul 2018 09:11:26 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/monaca-onsen-ui-v2-vue%E3%81%A7%E5%A4%96%E9%83%A8json%E5%8F%96%E5%BE%97/</guid><description>フロント側画面デザイン作成
↓
サーバ側WordPress構築
↓
ということで、再度フロント側に戻り、WordPressのデータを参照します。
いやー、あきらめそうになりましたが、かろうじて持ちこたえました。
$http.getの使用 サンプルを探し始めてすぐに見つかったのが、こちら。
Monaca Onsen UI V2 Vue Navigation 上でサーバサイドから取得したjsonが画面に反映されない
この中で使用されているthis.$http.getを使用したいのですが、そのままこの記述を使わせていただくと、
Cannot read property ‘get’ of undefined
となります。このエラーメッセージも分かりにくいですが、ただ、比較的すぐに、this.$httpが参照できていないということが分かります。
では$httpは何なのかというと、これもvue-resoureぽいな、ということが分かり、Axiosにとって代わられそうだということも分かります。
が、これらをどう参照したらよいのかが分からず、苦労しました。
先に結論を書くと、monacaのターミナルで、npm install axiosを叩きます。
Vue.js 単一ファイルコンポーネント 結論にたどり着くまでに時間がかかった一つの理由が、多くのサンプルが、単一ファイルコンポーネントの構成を前提にしていないことです。
未だに理解しきっていませんが、単一ファイルコンポーネントの場合は、srcの中で.vueファイルに記述をしていき、Monacaの場合は、保存すると、Webpackが動いてwwwにファイルが作成される、ということのようです。
ですから、src側に外部ライブラリをセットしなければいけないのでは、と考え、しかし、Monacaで用意されている「JS/CSS コンポーネントの追加と削除」では反映されているように見えないし、と悩みました。
CDNで参照したらどうだろう、なども試しましたがダメでした。
（逆に、CDNで参照する方法は取れないの？という疑問は残ります・・・）
また、Monacaのターミナル機能は最近の追加機能だと思いますが、それまではどうしていたの？？という疑問も・・・
とりあえずは先に進めるようにはなりましたが、axoss.getでの参照はSSLでの接続が要求されているので、それをどうするか（接続先のWordPressはGCE上に構築しており、無償範囲での利用にトライしているため）、またアプリがMonacaでJSON取得先がGCEの場合に、クロスドメイン制約に引っかかるだろう、など乗り越えるべき壁はまだまだありそうです・・・
浮気 もうダメだと思って、ちょっと浮気も考えました。クロスプラットフォーム開発の基盤として、まずUnity。
ゲーム以外にでも使えるだろうとは思うのですが、はてさて。。。
次に考えたのはXamarin。iOS用のビルドにMac端末が必要とのことで、もうしばらく様子見。
浮気せずにすんだのは、良かったのかな・・・
  速習webpack 速習シリーズ posted with カエレバ 山田祥寛 WINGSプロジェクト 2018-04-27 関連記事 VSUG DAY 2013 Summer とりあえずxamarinチュートリアル中（初心者の超入門編）</description></item><item><title>GCE（Google Compute Engine）上のMariaDBに外部から接続</title><link>https://jqinglong.github.io/programmers-office/gce%EF%BC%88google-compute-engine%EF%BC%89%E4%B8%8A%E3%81%AEmariadb%E3%81%AB%E5%A4%96%E9%83%A8%E3%81%8B%E3%82%89%E6%8E%A5%E7%B6%9A/</link><pubDate>Fri, 06 Jul 2018 09:16:43 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/gce%EF%BC%88google-compute-engine%EF%BC%89%E4%B8%8A%E3%81%AEmariadb%E3%81%AB%E5%A4%96%E9%83%A8%E3%81%8B%E3%82%89%E6%8E%A5%E7%B6%9A/</guid><description>GCPのファイアウォール GCEにインストールしたMariaDBに、その中のWordPressから接続できていますが、ここにプラグイン用のテーブルを追加したり、データをいじったりしたい。
その際に、全てコマンドベースでやるのもつらいし、さらにphpMyAdminをインストールするのもはまりそうな匂いがプンプン。
ということで、ローカルのツールから接続することにします。
まずは、GCPのファイアウォールルール追加です。
場所は、VPCネットワークの中にあります。
設定するのは、上りで、tcp:3306を許可します。
しかし、これだけではつながりません。
リスナー追加 netstat -tlpn
を叩くと、
Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name
tcp 0 0 127.0.0.1:3306 0.0.0.0:* LISTEN –
と表示されます。
これだと、ローカルからしか接続できないわけです。
これを変更するためには、bind-addressの記述をコメントアウトする、という情報が見つかります。
問題は、この記述がどこにあるかです。
結論としては、
/etc/mysql/mariadb.conf.d/50-server.cnf
にありました。
これを修正して、sudo /etc/init.d/mysql restart　すると、
tcp6 0 0 :::3306 :::* LISTEN –
となってくれました。
しかし、実はこれでもつながりませんでした。
select user, host from mysql.user;すると
+—————+———–+
| user | host |
+—————+———–+
| hoge | localhost |
| xxxxxxxxxxxxx | localhost |</description></item><item><title>GCE（Google Compute Engine）へのWordPressインストール（2）</title><link>https://jqinglong.github.io/programmers-office/gce%EF%BC%88google-compute-engine%EF%BC%89%E3%81%B8%E3%81%AEwordpress%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%EF%BC%882%EF%BC%89/</link><pubDate>Tue, 03 Jul 2018 20:50:34 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/gce%EF%BC%88google-compute-engine%EF%BC%89%E3%81%B8%E3%81%AEwordpress%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%EF%BC%882%EF%BC%89/</guid><description>今回でWordPressインストールまでたどり着こう。
参考は、こちら。
https://qiita.com/yuichiyuichi447/items/4bb3b9dbb69ee5a693cf
GCEへのApacheインストール これは
sudo apt install apache2
だけ。
ただ、この時点でちゃんと動作を確認すべき・・・
GCEへのPHP7インストール sudo apt install -y php php-mysql libapache2-mod-php
ここでも、動作確認すべき。
GCEへのWordpressインストール さらに、こちらを参考。
https://qiita.com/seijikohara/items/f34753b2a783e03d7db4
/etc/apache2/apache2.conf
へのWPインストール先追記は、あえて自分のHOME配下に変更。
そして、そのディレクトリを作成しておく。
curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
こちらでは、curlを使用。wgetとはあまり差はないのですかね。趣味の範囲？
wp core download –locale=ja –path=/var/www/html/wordpress –allow-root
を叩くときに、apache2.confで指定したパスに変更。
また、wp-config.phpの修正で、AUTH_KEY等はコピペが必要です。
この際、AWS Cloud9でviに張り付ける場合は、右クリックコピーではダメで、必ずCtrl-C Ctrl-Vです。
また、いつも忘れますが、viで複数行削除は、
削除範囲の開始行で「ms」 削除範囲の終了行で「me」 「:’s,’ed」と入力し、Enter です。
さて、これで動くと思いきや、そうは問屋が卸さないのがいつものこと。
まず、手順を二つ参照したために、そもそもWP用のDBを作る作業が抜けていました。
これは
CREATE DATABASE xxx DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci;
GRANT ALL ON xxx.* TO ‘xxx’@’localhost’;
だけしておけばOK。
しかし、wp option get homeを叩くと</description></item><item><title>GCE（Google Compute Engine）へのWordPressインストール（1）</title><link>https://jqinglong.github.io/programmers-office/gce%EF%BC%88google-compute-engine%EF%BC%89%E3%81%B8%E3%81%AEwordpress%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</link><pubDate>Fri, 29 Jun 2018 09:15:47 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/gce%EF%BC%88google-compute-engine%EF%BC%89%E3%81%B8%E3%81%AEwordpress%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</guid><description>さて、環境を定めたら、WordPressをインストールします。
Cloud Launcherではない GCP・WordPressで検索すると、コンソールのCloud Launcherからインストールする方法が多数ヒットすると思います。
確かに、メニューから選択して簡単にインストールできそうです。
この流れは魅力的。
しかし、これは、WordPress用にインスタンスを立ち上げるサービスになります。
そうすると、結局二つ目のインスタンスになってしまい、Always Freeから外れてしまいます。
今回やりたいのは、既存のGCEインスタンスにWPをインストールするということです。
（完全に言葉が間違っていたので追記）
GCP（Google Cloud Platform）はGoogleのクラウドの状のサービス諸々ですね。
ですから、GCP・WordPressで検索すれば当然GCP上にWordPressのサービスを立ち上げる方法がヒットするでしょう。
GCE（Google Compute Engine）は、GCPのサービスの中の一つで、IaaS環境を提供してくれているというものです。今やろうとしているのは、そのGCE環境の中にWordPressをインストールする、ということなので、GCE・WordPressで検索すべきです。そうすると、もう少し違う情報も出てきます。
GCEへのMySQLインストール さて、WordPressをインストールするとなると、必要なのがMySQLです。
方法としては、外部に接続する方法も「あり」かとは思います。
元々さくらレンタルサーバに環境作ろうとしたくらいですので、さくらのDBに繋ぎに行ってもよいわけです。
しかし、ここは、怖いもの見たさで、GCE内にMySQLもインストールします。
そして、ここでも、GCPコンソールから「SQL」という魅力的なアイコンが見えます。
これをクリックすると、簡単にMySQLがインストールできそうです。
しかし、これも、データベース用のインスタンス立ち上げサービスです。
あくまでも、既存のインスタンス内にインストールしたいので、これは使用しません。
MariaDB そこで、一番参考になりそうなのがこちら。
https://qiita.com/mekabuko/items/d0ef4492f60e40f84f84
そして、MariaDBという名前が気になりつつ、MySQL入っていないかなと思って、mysqlを叩いてみました。
$ mysql
The program ‘mysql’ can be found in the following packages:
mysql-client-core-5.7 mariadb-client-core-10.0
Ask your administrator to install one of them 出た、mariadb。MariaDBって何？
基本情報はググれば分かるとして、最近は利用が伸びていて、PL/SQLに対応し始めた、というのが趣深いですね。
ということで、Mariaをインストールすることにします。
上記では、yumでインストールしていますが、こちらの環境はUbuntuなので、sudo apt-get install mariadb-server。
インストール成功しましたが、こちらと同じ状態になっています。
https://jyn.jp/ubuntu-16-04-mariadb-password-bug/
書いていただいている対応により、接続できるようになりました。
 いったん休憩にします。</description></item><item><title>AWS Cloud9からさくらレンタルサーバはあきらめた</title><link>https://jqinglong.github.io/programmers-office/aws-cloud9%E3%81%8B%E3%82%89%E3%81%95%E3%81%8F%E3%82%89%E3%83%AC%E3%83%B3%E3%82%BF%E3%83%AB%E3%82%B5%E3%83%BC%E3%83%90%E3%81%AF%E3%81%82%E3%81%8D%E3%82%89%E3%82%81%E3%81%9F/</link><pubDate>Thu, 28 Jun 2018 12:49:42 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/aws-cloud9%E3%81%8B%E3%82%89%E3%81%95%E3%81%8F%E3%82%89%E3%83%AC%E3%83%B3%E3%82%BF%E3%83%AB%E3%82%B5%E3%83%BC%E3%83%90%E3%81%AF%E3%81%82%E3%81%8D%E3%82%89%E3%82%81%E3%81%9F/</guid><description>画面デザインはそれっぽくなってきたので、いったんバックエンドに入ろうと思います。
そして、最初の宣言（Monacaでハイブリッドモバイルアプリ開発）通り、AWS Cloud9＋さくらレンタルサーバで作ろうと思いました。
が、結論としては、諦めました。以下、できる方法をお探しの方には、あまりお役に立てません。
さくらレンタルサーバへのSSH公開鍵接続 これに関しては、割と情報はそろっていると思います。肝は、各フォルダへのパーミッション設定のようです。
今回、これに成功したかは不明です。
この画面で「AWS Cloud9 couldn’t connect to SSH server」エラーが出続けました。
このメッセージからはSSHでの接続に失敗しているのではと思い、ずっと調べていました。
こちらの情報は良いと思いました。
https://qiita.com/fukusuke/items/6eb9f8593a296a95798c
しかし、これはさくらレンタルサーバでは、root権限がなく、自分のHOME配下外のファイルの参照も厳しいです。
で、ふと思いました。Cloud9はNode.jsが必須だったと。それが原因でこのメッセージなのではないか。
さくらレンタルサーバへのNode.jsインストールは不可 ということで、Node.jsインストールを試みますが、これまた、いろいろ情報がありつつも、難しいという結果。
gmakeで失敗したのは、
logging.cc:(.text._ZN2v84base13DumpBacktraceEv+0x24): undefined reference to `backtrace’
logging.cc:(.text._ZN2v84base13DumpBacktraceEv+0x31): undefined reference to `backtrace_symbols’
というものですが、最終的には、そもそもインストール禁止だということで納得しました。
そもそも、レンタルサーバは複数のユーザが同じサーバーを共有するのであり、他の利用者に迷惑をかけるような利用は不可です。
正直、レンタルサーバというものを、ちゃんとイメージできていなかったのですが、今回 ls /homeをしてそういうことか、と理解しました。
そうであれば、下記のような禁止事項も納得です。
https://www.sakura.ne.jp/terms.html
・・・daemonとしてサーバーに常駐するプログラムの実行
ということで、さくらへの接続は止めて、今回もGCPで開発環境を構築することにしました。
AWS Cloud9からGCE（Google Compute Engine）への二つ目の接続 さて、すでに開発環境を作ってあるGCP（Google Cloud Platform）のGCE（Google Compute Engine）ですが、せっかくなので、別の環境を作ろうと思いました。
バイブルは、こちら。
https://qiita.com/j-un/items/f5d72d21f67d384d3c84
プロジェクトとして今回用のプロジェクトを作り、インスタンスを作ろうとします。
で、設定を選んでいくと、料金表示がされます。・・・料金。
無料で利用できるということでGCPを選んでいるので、無料の条件を再確認すると、
https://cloud.google.com/free/
1 f1-micro インスタンス（1 か月あたり、米国リージョンのみ）です。
ということで、既存のインスタンスに接続することにします。
初回作成時に失敗したと思いましたが、Cloud9環境を作るディレクトリは指定できます。
前回は自分のHOMEを指定する形になってしまいましたが、今回は、その下にディレクトリを作って、そちらを指定しました。
ということで、ようやく、バックエンド側開発に入ります。</description></item><item><title>MonacaでのOnsen UI V2 Vue Tabbar</title><link>https://jqinglong.github.io/programmers-office/monaca%E3%81%A7%E3%81%AEonsen-ui-v2-vue-tabbar/</link><pubDate>Sun, 24 Jun 2018 06:58:31 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/monaca%E3%81%A7%E3%81%AEonsen-ui-v2-vue-tabbar/</guid><description>まず、Monacaで画面デザインを作っています。
新規プロジェクトでは、「Onsen UI V2 Vue Tabbar」を選択します。
しかし、各種サンプルを見ながらなんとかなるかなと思いいつつ、なかなかしんどいですね。
この構成の場合、何かを調べようと思ったら、Monacaという基盤の話なのか、Onsen UIというデザインフレームワークの話なのか、Vueという画面制御フレームワークの話なのか、を切り分けながらそれぞれのマニュアルなり、情報なりを調べる必要があるわけです。
で、いきなり、はまったのが、画面上部のツールバーに画像を表示したいな、と。
そこで考えるべきは、画像をどこに置くのか、どういうパスを書けば参照してくれるのか、普通にimgタグを使うべきなのか、他に作法があるのか、等ですが、それぞれの守備範囲がいまいち理解できずに、調べようがないなと思うわけです。
結論としては、サンプルとして公開されているポケモンアプリ（https://docs.monaca.io/ja/sampleapp/samples/）で、画像の置き場はsrc/publicか、と理解し、あとはimgタグでやってみて、うまくいっているからよいか、みたいな感じです。
もう一つの例としては、画面を黒系統にしたいなと思い、Onsen UIのテーマローラー（https://onsen.io/theme-roller/）というのでDark themeといのがあるのが分かったのですが、それの適用方法が分からない。見てるとテーマローラーで生成したファイル群をダウンロードして、配置して、という方法が出てきますが、細かくカスタマイズしたいならそうかもしれませんが、単にテーマを適用したいだけなんだよ、ということでもう少し調べると、onsen-css-components.cssをonsen-css-components-dark-theme.cssに書き換えればよい、という情報が見つかります。
これはどこに書いてあるのだ、というところから始まりますが、それは検索して、今回の構成の場合はmain.jsに書いてあることが分かります。cssの読み込みをjsでやる、というところで既に古い頭にはつらいのですが、そういうものです。
ところが、このように書き換えてみても反映されない。むむ、と思い、もう少し調べると、dark-onsen-css-components.cssだよ、という情報が見つかり、これでOK。
しかし、なかなか辿り着かないよ、と思いつつ、やっていくうちに馴染むだろうと思い込んで、先に進みます。
React、Angular、Vue.js、React Nativeを使って学ぶ はじめてのフロントエンド開発 原 一浩,taisa,小松 大輔,永井 孝,池内 孝啓,新井 正貴,橋本 安司,日野 洋一郎 技術評論社 2018-05-09 &amp;lt;div class=&amp;quot;kaerebalink-salesranking&amp;quot; style=&amp;quot;margin-bottom: 5px;&amp;quot;&amp;gt; 売り上げランキング : 8419 &amp;lt;/div&amp;gt; &amp;lt;table style=&amp;quot;border: currentcolor; margin-top: 10px;&amp;quot;&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td style=&amp;quot;border: currentcolor; text-align: left;&amp;quot;&amp;gt; &amp;lt;/td&amp;gt; &amp;lt;td style=&amp;quot;border: currentcolor; padding-left: 10px; font-size: x-small; vertical-align: bottom;&amp;quot;&amp;gt; by &amp;lt;a href=&amp;quot;https://kaereba.</description></item><item><title>Monacaでハイブリッドモバイルアプリ開発</title><link>https://jqinglong.github.io/programmers-office/monaca%E3%81%A7%E3%83%8F%E3%82%A4%E3%83%96%E3%83%AA%E3%83%83%E3%83%89%E3%83%A2%E3%83%90%E3%82%A4%E3%83%AB%E3%82%A2%E3%83%97%E3%83%AA%E9%96%8B%E7%99%BA/</link><pubDate>Sat, 23 Jun 2018 11:21:52 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/monaca%E3%81%A7%E3%83%8F%E3%82%A4%E3%83%96%E3%83%AA%E3%83%83%E3%83%89%E3%83%A2%E3%83%90%E3%82%A4%E3%83%AB%E3%82%A2%E3%83%97%E3%83%AA%E9%96%8B%E7%99%BA/</guid><description>Monaca再開 今回、とあるアプリを作ろうと思い立ち、以前ちょっと遊んでいたMonacaを改めて使ってみたいと思います。
その間色々進歩していると思うので、割と一から勉強の部分も多々ありますが、地道に。
作ろうとしているものの構成は下記の通り。
システム構成 フロントエンド Monaca
Onsen UI V2 Vue Navigation
https://press.monaca.io/atsushi/2533
Vueを使ってみたいと思ってはいたのですが、この記事に後押しされました。
あまり複雑な画面にはならないと思いますが、その分遊べるところは遊ぼうという感じ。
バックエンド WordPress（REST API）
依然作ったWebアプリは、WordPressの豊富なテンプレートを生かしたこ洒落たUIにしたいという目的で、WordPressのプラグインという形でアプリを作りました。
ところが、WordPressプラグインをゴリゴリ書いていると、UI側のメリットよりも、開発フレームワークとして使いやすいと思うようになりました。
その意味で、WordPressを使い、ユーザ管理、コンテンツ管理、データIOを行って、フロントエンドにはREST APIで返す、という方法をとってみたいと思います。
プラグインの作成 – WordPress Codex 日本語版
開発環境 Cloud9＋さくらレンタルサーバ
並行して行っている、Code4Startupの開発環境は、Cloud9＋GCE（Google Compute Engine）ですが、ちょっと環境構築がしんどかった
https://www.programmers-office.ml/2018/05/03/code4startup-%ef%bd%9e-ubereats%e3%82%92%e4%bd%9c%e3%82%8d%e3%81%86-%ef%bd%9e-python-django%e7%92%b0%e5%a2%83/
ので、今回は、せっかく契約していることもあり、さくらレンタルサーバを使いたいと思います。
バックエンドのWordPressもさくらに立てるので、開発ソースと運用環境が両方さくらにあることのメリットが何かあるかも、探ってみたいと思います。
というわけで、今後に乞うご期待！</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ 淡々とページ追加</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E6%B7%A1%E3%80%85%E3%81%A8%E3%83%9A%E3%83%BC%E3%82%B8%E8%BF%BD%E5%8A%A0/</link><pubDate>Sun, 17 Jun 2018 00:01:38 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-%E6%B7%A1%E3%80%85%E3%81%A8%E3%83%9A%E3%83%BC%E3%82%B8%E8%BF%BD%E5%8A%A0/</guid><description>Code4Startup
Task 8、9の辺りは、ひたすらページ作成のコーディングをしていきます。
こういうドリル的なこと：写経も必要。
すんなりいかないところとして、
modelの作成で
restaurant = models.ForeignKey(Restaurant, on_delete=models.CASCADE)
講義の中では、on_deleteは記載していませんが、必要と怒られます。
offsetの書き方は注意
https://www.programmers-office.ml/2018/04/03/code4startup-%ef%bd%9e-landing-page%e3%82%92%e4%bd%9c%e3%82%8d%e3%81%86/
Code4Startup
シェアリング・エコノミー　―Uber、Airbnbが変えた世界 宮崎 康二 日本経済新聞出版社 2015-07-23 売り上げランキング : 88013 by カエレバ</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ Bootstrapの適用</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-bootstrap%E3%81%AE%E9%81%A9%E7%94%A8-2/</link><pubDate>Fri, 15 Jun 2018 23:52:18 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-bootstrap%E3%81%AE%E9%81%A9%E7%94%A8-2/</guid><description>以前もstaticの読み込みがうまくいっていなかったのですが、settings.pyを終始して戻して保存したら、style.cssを読んでくれたようです。まだ、完全に同じ見た目にはなっていませんが。もやもや・・・
Bootstrap4 講義はBootstrap3ベースになっていますが、最新のBootstrap4を使おうとすると、色々調べながら進める必要があります。
まず、jquery等の読み込みですが、講義で参照しているbasic templateは使用できないので、Introductionを見ると、そこにStarter templateがあります。
必要なJS読み込みは
となっています。
さらに、django-bootstrap3をインストールしていますが、ここはpip install django-bootstrap4にします。
シェアリング・エコノミー　―Uber、Airbnbが変えた世界 宮崎 康二 日本経済新聞出版社 2015-07-23 売り上げランキング : 28003 by カエレバ</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ Bootstrapの適用</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-bootstrap%E3%81%AE%E9%81%A9%E7%94%A8/</link><pubDate>Fri, 15 Jun 2018 23:48:08 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-bootstrap%E3%81%AE%E9%81%A9%E7%94%A8/</guid><description>Code4Startup
以前もstaticの読み込みがうまくいっていなかったのですが、settings.pyを終始して戻して保存したら、style.cssを読んでくれたようです。まだ、完全に同じ見た目にはなっていませんが。もやもや・・・
Bootstrap4 講義はBootstrap3ベースになっていますが、最新のBootstrap4を使おうとすると、色々調べながら進める必要があります。
まず、jquery等の読み込みですが、講義で参照しているbasic templateは使用できないので、Introductionを見ると、そこにStarter templateがあります。
必要なJS読み込みは
となっています。
さらに、django-bootstrap3をインストールしていますが、ここはpip install django-bootstrap4にします。
スタイルの読み込みがちゃんとできていないので見た目はもやもやしますが、とりあえず進めます。
Code4Startup
シェアリング・エコノミー　―Uber、Airbnbが変えた世界 宮崎 康二 日本経済新聞出版社 2015-07-23 売り上げランキング : 28003 by カエレバ &amp;nbsp;</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ Facebook認証</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-facebook%E8%AA%8D%E8%A8%BC/</link><pubDate>Sat, 09 Jun 2018 00:26:26 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-facebook%E8%AA%8D%E8%A8%BC/</guid><description>Code4Startup
続いて、oauthによるFacebook認証。
この辺の実践感がこの講座の良いところ。
https://developers.facebook.com/
スタートガイド→Facebook for Developersアカウントを作成するところから始めます。
画面構成は講義ビデオの時からは大分変っているようですが、何とか進められます。
で、django-rest-framework-social-oauth2==1.0.4をインストールすることになっているのですが、
ImportError: No module named ‘social_django’
となります。
↓
https://teratail.com/questions/115059
pip install social-auth-app-django
↓
ImportError: No module named ‘braces’
↓
pip install django-rest-framework-social-oauth2 -U
→django-rest-framework-social-oauth2==1.1.0
↓
OK
という感じで（分かりますか(^_^;;;)）、結局最新バージョンでないとライブラリ間の構成が合わないという話。
requirements.txt　の記述は
django-rest-framework-social-oauth2==1.0.4
のままだけど・・・
でうまくいったかと思いきや、アプリ画面を開くと
You may need to add ‘x.x.x.x’ to ALLOWED_HOSTS. のエラー。
settings.py
のALLOWED_HOSTS に追記すれば確かに起動するようになった。
https://www.deep-blog.jp/engineer/archives/4287
しかし、これまで書いていなかったのになぜ？ちょっと気持ち悪い。
Facebook認証の流れについては、
https://stackoverflow.com/questions/18995448/rails-api-authenticate-users-from-native-mobile-apps-using-username-password-or
と同じ内容の図がもう少しきれいに書かれていて、なるほど、と思いました。
そして、ブラウザ・サーバアプリ・Facebook間でのやり取りは、アプリを作る前に試しましょうということで、POSTMAN。
このJSON大流行のこのタイミングで、このツールをぶつけてくるところがなかなか（たまたま）。
python-social-auth のPipelineの説明は、ビデオ見てると行方不明になりますが、下記になります。
https://github.com/python-social-auth/social-docs/blob/master/docs/pipeline.rst
ちょっと、Facebook認証で情報を取り出せるようになるので、GDPRが気になるところ。
個人で試しているうちは気にしなくても良いかもしれませんが、早急に考えないといけないかと思っています。
Code4Startup
独学プログラマー Python言語の基本から仕事のやり方まで コーリー・アルソフ 日経BP社 2018-02-24 売り上げランキング : 204 by カエレバ</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ heroku環境整備</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-heroku%E7%92%B0%E5%A2%83%E6%95%B4%E5%82%99/</link><pubDate>Fri, 08 Jun 2018 01:47:27 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-heroku%E7%92%B0%E5%A2%83%E6%95%B4%E5%82%99/</guid><description>Code4Startup
さて、herokuが動作するようになると、おもむろにGunicornをインストールします。
Gunicornとは何か http://gunicorn.org/
Gunicorn ‘Green Unicorn’ is a Python WSGI HTTP Server for UNIX.
Python製のWSGI サーバ
WSGI とは何か http://gihyo.jp/dev/feature/01/wsgi/0001
WSGIはJavaにおけるJava Servelet APIと同じように，WebサーバとWebアプリケーション間の汎用的なインターフェースを定義しています。
要するに、Djangoを動作させるための土台、と考えればよいでしょうか。
次にインストールするのが、WhiteNoise
WhiteNoiseとは何か https://pypi.org/project/whitenoise/
http://furodrive.com/2016/01/white_noisedjango/
WhiteNoiseとはWSGIアプリケーションのための静的ファイルを配信するのを簡単にしてくれるライブラリです。
少しの設定をするだけでAmazon S3やNginxに頼ることなく静的ファイルを配信できます。
本番サーバーで画像やcss等を参照できるようにするには色々と手順を踏まないといけなかったのですが、WhiteNoiseを使うとそのような手間が省けて大変便利です。
続いて、dj-database-url
dj-database-urlとは何か https://github.com/kennethreitz/dj-database-url
http://y0m0r.hateblo.jp/entry/20121130/1354290868
dj-database-urlを使うとdb接続文字列を環境変数DATABASE_URLから取得させることができます。
さらにpsycopg2 PythonのPostgreSQL用ドライバ
これで、herokuに乗せるわけですが、色々講義内で想定されているエラー以外に、想定外のエラーが。
could not determine PostgreSQL version from ‘10.4’
諸々のサイトを見るとpsycopg2のバージョンを上げろと。
http://initd.org/psycopg/docs/
こちらで表示されるのが、現時点で2.7.5なのでそうしてみます。
そうすると、こんな感じのエラー
Could not find a version that satisfies the requirement psycopg2==2.7.5 (from -r /tmp/build_f493d80720eb882b01a250f718f3b058/requirements.txt (line 6)) (from versions: 2.0.10, 2.0.11, 2.</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ herokuへの道は続く</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-heroku%E3%81%B8%E3%81%AE%E9%81%93%E3%81%AF%E7%B6%9A%E3%81%8F/</link><pubDate>Wed, 06 Jun 2018 13:57:30 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-heroku%E3%81%B8%E3%81%AE%E9%81%93%E3%81%AF%E7%B6%9A%E3%81%8F/</guid><description>Code4Startup
前回からの続き
インストールされたということで、heroku loginしてみると、
Error: login is not a heroku command.
再インストールしなさいという情報があるので、
curl https://cli-assets.heroku.com/install-ubuntu.sh | sh
しかし、エラー変わらず。
手当たり次第という感じですが、
wget -qO- https://toolbelt.heroku.com/install-ubuntu.sh | sh
変わらない。
https://teratail.com/questions/125977
に従ってみる。
npm uninstall -g heroku
これでもheroku –versionは出てくるが・・・
wget https://cli-assets.heroku.com/heroku-cli/channels/stable/heroku-cli-linux-x64.tar.gz -O heroku.tar.gz
tar -xvzf heroku.tar.gz
mkdir -p /usr/local/lib /usr/local/bin
sudo mv heroku-cli-v6.16.18-62346b1-linux-x64/ /usr/local/lib/heroku
↓実際に作成されたディレクトリ名に変更
sudo mv heroku-cli-v6.99.0-ec9edad-linux-x64/ /usr/local/lib/heroku
sudo ln -s /usr/local/lib/heroku/bin/heroku /usr/local/bin/heroku
失敗
ln: failed to create symbolic link ‘/usr/local/bin/heroku’: File exists
↓
sudo unlink /usr/local/bin/heroku</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ herokuへの道</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-heroku%E3%81%B8%E3%81%AE%E9%81%93/</link><pubDate>Fri, 01 Jun 2018 13:13:48 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-heroku%E3%81%B8%E3%81%AE%E9%81%93/</guid><description>Code4Startup
講義ビデオは突然heroku loginから始まった。
しかし、cloud9ではherokuコマンドは効かない。
よって、インストールから。
http://www.lib-arc.com/entry/2018/04/15/234355
こちらでは、nodeは入っている前提。しかし、少なくとも私の環境には入っていない。
そこから。となると、こちらを参考。
https://qiita.com/beplocks661/items/8d840b6efcdcd14009bf
と思ったらnvm: command not found。
https://qiita.com/seibe/items/36cef7df85fe2cefa3ea
ここから。
sudo apt-get install -y nodejs npm
sudo npm cache clean
sudo npm install n -g
sudo n stable
node -v
v10.2.1
ここからやっとherokuインストール
npm install -g heroku-cli
インストールは始まったけど、エラー
・・・
npm ERR! Please try running this command again as root/Administrator.
・・・
sudo npm install -g heroku-cli
でOK
heroku -v
heroku-cli/7.0.9 linux-x64 node-v10.2.1
という感じでよいのでしょうか。
開発環境構築の基礎を学べます。
ん？cloud9って、こういうものでしたっけ？？
Code4Startup</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ Djangoのデバッグ</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-django%E3%81%AE%E3%83%87%E3%83%90%E3%83%83%E3%82%B0/</link><pubDate>Fri, 01 Jun 2018 07:14:37 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-django%E3%81%AE%E3%83%87%E3%83%90%E3%83%83%E3%82%B0/</guid><description>Code4Startup
前回に続き、Registration機能の実装ですが、どうもデータが登録されません。
では、ということでデバッグ実行をしようと思ったのですが、これがまたうまく動きません。
そもそもサービス起動のために
python manage.py runserver xxx.xxx.xxx.xxx:8000
を叩かなければいけないということですから、普通にRunボタンを使って実行することができないわけです。
では、と思って、New Terminalでコマンド実行用のウインドウを開いて、その中で上記のコマンドを叩こうとしましたが、cdコマンドが効いてくれないようです。
ではでは、
python foodtasker/manage.py runserver xxx.xxx.xxx.xxx:8000
とすると、
Traceback (most recent call last):
File “foodtasker/manage.py”, line 17, in
“Couldn’t import Django. Are you sure it’s installed and “
ImportError: Couldn’t import Django. Are you sure it’s installed and available on your PYTHONPATH environment variable? Did you forget to activate a virtual environment?
となってしまいました。
なお、こちらのサイトでも、2017年12月3日現在、デバッグ実行ができないと判断されているようです。
むう。。。
とりあえずはやむを得ないので、こちらを参考に、コンソールに出力。いつの時代も安定のコンソール出力。
失敗の原因は色々で、objectsとobject（誤）とか、FalseとFALSE（誤）とか。
もう少しエディタの力で何とかならないものか・・・
Code4Startup
ゼロから作るDeep Learning ―Pythonで学ぶディープラーニングの理論と実装 posted with カエレバ 斎藤 康毅 オライリージャパン 2016-09-24 売り上げランキング : 228</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ Registration</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-registration/</link><pubDate>Mon, 28 May 2018 12:49:42 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-registration/</guid><description>Code4Startup
Djangoで持っているUser管理の機構を利用する部分。
それ以外に内容的に特筆すべきところはないですが、いったんエラーを発生させて、コンソールに表示されているエラーを確認して、対処するという流れ。
Cloud9だと、コンソールウインドウを見ながらソースを書いているような画面構成で、ソースを保存した時点でエラーがあればエラーを表示してくれる。
これは非常に便利。
Code4Startup
ゼロから作るDeep Learning ―Pythonで学ぶディープラーニングの理論と実装
posted with カエレバ
斎藤 康毅 オライリージャパン 2016-09-24
売り上げランキング : 231</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ Sign In &amp; Sign Out</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-sign-in-sign-out/</link><pubDate>Sat, 26 May 2018 00:19:17 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-sign-in-sign-out/</guid><description>Code4Startup
画面を横に並べて、動画見ながらコーディング、という形にすればよいのでしょうが、動画を見てから書こうとすると、しばしば間違いが。
ログインページのテンプレートファイルで
{% load staticfiles %}
を忘れずに。忘れるとinvalid block tag ‘static’というエラーが発生。
{% csrf_token %}
というお約束。こういうの見ると萌える。
で、一通り書いてみましたが、
http://（公開アドレス）:8000/restaurant/sign-in/
で何も表示されない。なんだろうと探ります。
あまりコーディング中の自動補完（clodu9のAce Editor）は正しくないのも、うーん（Visual Studioっ子なので）。
django.contrib.auth のauthが表示されなかったり、
auth_views.logoutは表示されるけど、auth_views.loginは表示されなかったり。
かなり手間取りましたが、実際は単なる記述ミス。
タグは自動補完が走り、例えば」を入力すると「」になってしまう罠。 ちなみに、url名は「sign-in」、テンプレート名は「sign_in.html」みたいなのは、一般ルールでしょうか？
これもsign-inと書くべきところをsign_inと書いていたりしました（そういう補完候補が出る、というのもあるし）。
なんとかかんとか、ログイン認証の仕組みができました。先は長いぞ。
Code4Startup
  ゼロから作るDeep Learning ―Pythonで学ぶディープラーニングの理論と実装 posted with カエレバ 斎藤 康毅 オライリージャパン 2016-09-24 売り上げランキング : 231</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ Django環境続き</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-django%E7%92%B0%E5%A2%83%E7%B6%9A%E3%81%8D/</link><pubDate>Fri, 04 May 2018 03:48:48 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-django%E7%92%B0%E5%A2%83%E7%B6%9A%E3%81%8D/</guid><description>Djangoが動作する環境ができたら、アプリを作成していきます。
「python manage.py startapp foodtaskerapp」により
foodtasker
foodtaskerapp
のディレクトリが並ぶ形になります。
ここから、行ったり来たりになりますが、
・まずは、foodtaskerのsettings.pyのINSTALLED_APPSに追加
・次に、foodtaskerappのviews.pyにhomeメソッド追加
・次に、foodtaskerのurls.pyのurlpatternsに追加
・次に、foodtaskerappにtemplateディレクトリを作成し、home.html作成
という形で作成していきます。
講義ビデオではatom＋emmetのスニペットが快適そうに見えますが、まあ、そんなに使うものでもないと思うので、Cloud9のAceエディタの機能で進めます。最低限のスニペットはありますので。
いったん実行すると、「TemplateDoesNotExist」エラーが発生しましたが、単純に、
テンプレートフォルダ名は「template」ではなく「templates」ということでした。失礼。そして、
python manage.py migrate
python manage.py createsuperuser
により、管理画面が表示されます。
bootstrapも組み込んで（Bootstrap 4ではグリフアイコンをサポートしないため、「fonts」フォルダは削除されましたとのことなので、最新版を取得するとここはちょっと違います）、次はTask3です。
ゼロから作るDeep Learning ―Pythonで学ぶディープラーニングの理論と実装 posted with カエレバ 斎藤 康毅 オライリージャパン 2016-09-24 売り上げランキング : 303</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ Python/Django環境</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-python-django%E7%92%B0%E5%A2%83/</link><pubDate>Thu, 03 May 2018 00:31:24 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-python-django%E7%92%B0%E5%A2%83/</guid><description>次は、Webアプリ側の環境で、Djangoです。
もう、これは、最初からCloud9で楽勝でしょう、と思っていたら甘かった・・・
AWS Cloud9とは 　元々Cloud9を使用しており、開発環境をワンクリックで簡単に構築できることが売りだったので、それでよいやと思っていたわけです。
ただ、昨年AWSに統合されたバージョンがリリースされました。最初は旧版とAWS版並列で行くていくのかなと思っていたのですが、どうやら移行を促されるようなので、この機会にAWS版を使用することにしました。
（旧版は新規プロジェクト作成時は、こんな感じでテンプレートを選択できます。ボタンを押すだけで、すぐに開発環境ができあがり、ソースを書き始めることができます。）
　いざ使おうとすると、色々分かってきます。
まず、AWS Cloud9は、IDEとしては無償なのですが、環境とセットにはなっていません。
分かりにくいですが、他のサーバを使用してSSHで接続するか、AWSのEC2に乗せる必要があります。すなわち、環境自体は無償とは限らないということです。
EC2も12か月間は無償利用できるというのがアピールされていますが、1年後にどうするか悩むことになるのであれば、そこには頼りたくないなという気持ちがわきました。
選択肢として、たまたま最近さくらレンタルサーバを契約したので、それでもよいかと思ったのですが、それだと世間の人にとっては無償でもなんでもなくなりますし、そちらは今あまり壊したくないというのもありました。
そこで他の選択肢を探し、見つけたのがGCE（Google Compute Engine）でした。
GCE（Google Compute Engine）を使用する 　GCEは、最初にOSやCPU等を選択して、まっさらのOS環境が提供される、という意味で、レンタルサーバとほぼ同様と考えてよいかと思います。
とはいえ最低限のものは入っていると予想して、設定を開始します。今回必要なのはPython3でDjangoを動かすことです。
ここで頭の中に持っておいた方が良いと思うことは、Cloud9（AWS）側の設定と、GCEの設定がある、ということです。そして、ほとんどの作業はGCE側の設定です。Cloud9の画面を見ていますが、それはGCEに接続して作業しているということです。
　話がいったんAWS Cloud9に戻りますが、新規プロジェクト作成時に、ワンクリックで環境設定してくれる、という機能はなくなってしまいました。繰り返しますが、あくまでもIDEです。ですから、SSHで接続した後は、必要なインストール作業を行う必要があります。IDEの中にターミナル機能が統合されている等は旧版と同じですので、そこで以下の作業を行います。
　まず、Cloud9側でPython3を選択します。けど、これは要はIDEの設定であり、環境の設定ではありません。
では、ということで、ここからCode4StartUpのビデオを見ながら環境を作っていこうと思います。
そしていきなり躓きます。「sudo apt-get install python3-venv」ができません。以下失敗なので、簡単に流しますが、python3.4-venvなら成功しますが、ビデオの後の方で3.5であることを確認されますので、やばい、3.5にあげないと、と思います。Cloud9の画面では「/usr/local/lib/python2.7/dist-packages:/usr/local/lib/python3.4/dist-packages:/usr/local/lib/python3.5/dist-packages」と書いてあるのに何でないのだ？と思っていたましたが、これはあくまでもIDEの設定です。環境は別です。
色々調べて、「sudo python -m pip install –upgrade pip」しようとしますが、ないと言われます。色々あって、3.5ではなく最新の3.6でよいやと思い「sudo add-apt-repository ppa:jonathonf/python-3.6」以下・・・（省略）でインストールします、しかし、「python3.6 –version」では3.6インストールが確認できますが、「python3 –version」ではまだ3.4を参照しています。
そこで、pyenvというものの存在に出会い、「curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash」でインストールしようとしますが、gitが入っていない、とのエラー。なんと！そこからですか！
gitインストールしてから再度pyenvインストールして、それでも「pyenv install –list」で表示されないので「sudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils」して、「pyenv install 3.</description></item><item><title>Code4StartUp ～ UberEatsを作ろう ～ Swift環境</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-swift%E7%92%B0%E5%A2%83/</link><pubDate>Wed, 02 May 2018 02:15:27 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-ubereats%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86-%EF%BD%9E-swift%E7%92%B0%E5%A2%83/</guid><description>Code4Startup
こちらが本題の、UberEatsを作ろう（Create UberEats with Python/Django and Swift 3）。
まずは、環境構築から始まるのですが、Python、Heroku、Atomは使用するしないは良いとして、XcodeはWindows環境だとどうしようもない。
しかし、今の時代、色々な方法はあるようで、Swiftのためだけなら、Xcodeがなくても何とかなるっぽい。
ということで、環境作ってみました。
IBM Swift Sandboxはもう存在しない？ まず、最初に、「IBM Swift Sandbox」というものが気になりましたが、現在はリンク切れです。
ただ、もう少し粘ってみると、IBM Cloud App Service というものに誘導されます。
こちらを登録すると、開発環境も使えるようになるのですが、その言語がSwiftになっています。
（いろいろなタイプが選べますが、一番左上の「プロジェクトの作成」を選ぶとswiftになるのです。）
けど、より簡単なのは、Swift Kituraを選択することのようです。
しかし、いずれにせよ、Swift Sandboxで企図されていたようなものではないようです。その場でソースを書いて実行するのであればよかったのですが、あくまでもローカルでソースを書くのであれば、ちょっと必要性が薄いかなと。
こちらは、いったん中断しておきます。
ローカルにSwift環境を構築 ですので、ローカルに環境を構築することにします。
基本的には、
https://qiita.com/akira_/items/e5550dbb571a20deb3c1
を参考にさせていただきました。
Windows Subsystem for Linux、知りませんでした。
途中再起動等入るのと、これを有効にした後に、Linuxパッケージを導入する、というところに注意です。
Windowsでこんな選択画面を表示する、ということ自体驚きですが、いかがでしょうか。
その後は、インストールされたUbuntuバージョンに合わせて、記述を調整しながら進めれば、環境構築完了し、Hello worldまでは行けました。
なお、元々Git Bashが入っていた環境ですので、バッティング等も気にならないでもないですが、とりあえずどちらも動いています。
（2018年10月）結局MAC購入 Code4StartUp ～ UberEatsを作ろう ～ iMac購入して続行 結局、iOSアプリ作ろうと思ったら買わざるを得ませんでした・・・
 Code4Startup</description></item><item><title>Code4StartUp ～ Landing Pageを作ろう</title><link>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-landing-page%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86/</link><pubDate>Tue, 03 Apr 2018 14:44:56 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/code4startup-%EF%BD%9E-landing-page%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86/</guid><description>ちょっと、Noteを使ってみたりもしており、こちらはご無沙汰になりました。
Noteのような厳しい制約の中で書くのもそれはそれでありだと思うのですが、ちょっと厳しすぎる感もあり。
しかも、有償化はそんな簡単な話ではないなと。
ただ、ちゃんと構造化した文書、というものは意識したいなと思います。
Code4StartUpを始めてみる 　実は結構前に始まっているサービスですが、最近知り、今の私に非常にマッチした学習ができそうということで始めることにしました。
登録は無料なのですが、登録すると、時間限定で、プレミアムプロジェクトであるUBER EATSコースが、499ドルから99ドルになるとの表示。あざとい・・・と思いながらぽちりました。なぜならUBER EATSこそが、今回のきっかけだから。
Landing Page作成プロジェクト 　しかし、最初は無料コースから。
無料コースとはいえ、Bootstrapでランディングページを作って公開するところまでやってみよう、というのはなかなかセンスが良いのではと思います。
そして、色々知らないサービスも勉強させてもらえました。
Start Bootstrap
https://startbootstrap.com/
Bootstrapのデザインテンプレート。
日本人向けだとまたちょっと違うかなという気もしますが、今回は日本人向けではないので、そういう意味でも役に立ちます。
Font Awesome
https://fontawesome.com/
講義ビデオの中では、fontawesome.ioになっている。
そして、envelope-opeのページに記載されているリンクも、講義ビデオだとclass=”fa … だけど、現在のページだとclass”fas …
理由はFont Awesomeが4から5にアップグレードされているためでした。
”fa fa-map-marker fa-stack-1x fa-inverse”でアイコンは変更されます。
Chromeの右クリックInspectは日本語版だと検証（Ctrl+Shift+I）。
講義の中で使われている記述”col-md-offset-3”が反応しない。→offset-md-3が正解。
理由はBootstrapが3から4にアップグレードされているため。
MailChimp
https://mailchimp.com/
メール送信サービス
。昔DM送信で苦労した記憶が18年たっても忘れられない身としては、ありがたや。
Wufoo
https://www.wufoo.com/
フォーム作成サービス。今どきはこんな風に実装するんですね。
githubデスクトップ
なかなかgithubを導入しきれませんが、これはちょっと良いかも？後日導入記を書くことになりそう。
Bluehost
海外有料サーバはあまり調べたことがなかったですが、ここが主力っぽいですね。日本だとさくらの位置づけ。ただ、日本のサービスと違い、1ドメイン取得無料は大きいかも。
一通り見てみました。
後は、公開前のセキュリティチェック等があるとよいのではと思いました。
そして、UBER EATSコースに入っていきたいと思います。</description></item><item><title>データベーススペシャリスト試験</title><link>https://jqinglong.github.io/programmers-office/%E3%83%87%E3%83%BC%E3%82%BF%E3%83%99%E3%83%BC%E3%82%B9%E3%82%B9%E3%83%9A%E3%82%B7%E3%83%A3%E3%83%AA%E3%82%B9%E3%83%88%E8%A9%A6%E9%A8%93/</link><pubDate>Sat, 03 Feb 2018 03:56:42 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%83%87%E3%83%BC%E3%82%BF%E3%83%99%E3%83%BC%E3%82%B9%E3%82%B9%E3%83%9A%E3%82%B7%E3%83%A3%E3%83%AA%E3%82%B9%E3%83%88%E8%A9%A6%E9%A8%93/</guid><description>情報処理技術者試験、平成30年度春期試験は4月15日（日）に実施されます。
今回は、データベーススペシャリスト試験　（DB）を受験しようと思います。
前回PM合格しているので午前免除が使えないかと思ったら有効期間2年ということで、ギリギリアウトでした。
合格したのそんな前だっけ？？という感じですが、2015年でした。
早速本を購入。（どちらかというと期限付きポイントの使い道を考えていたら思いついたという感じ）
下記2冊が売れ筋でしょうか。
平成30年度 データベーススペシャリスト合格教本
posted with カエレバ 金子 則彦 技術評論社 2017-09-14 Amazon 楽天市場 7net 情報処理教科書 データベーススペシャリスト 2018年版
posted with カエレバ 三好 康之 翔泳社 2017-09-12 Amazon 楽天市場 7net 本当は相性もあるので、実物見て決めたいところですが、付録が充実してそうなので合格教本の方にしてみました。KOBOなのでCDはないですけど、ダウンロードとかできるのでしょう。
で、ポチろうと思ったところで、そういえばと、下記を思い出します。
ということで、購入は今晩ですね。</description></item><item><title>ソース管理サービス</title><link>https://jqinglong.github.io/programmers-office/%E3%82%BD%E3%83%BC%E3%82%B9%E7%AE%A1%E7%90%86%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9/</link><pubDate>Tue, 22 Oct 2013 14:13:38 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%82%BD%E3%83%BC%E3%82%B9%E7%AE%A1%E7%90%86%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9/</guid><description>秋の情報処理試験も終わり、そろそろ切羽詰ってきている仕事にどっぷりはまらなければならないのですが、忙しい時ほど色々やりたくなるというのは、何なのでしょうか。
ひとつ考えていることを始めたらまたここに書くと思いますが、さてソース管理どうしよう。
以前使っていた、Origo
https://www.programmers-office.ml/origo/
は静かに眠られたようです。
その頃主流だったCodeReposも同じでしょうか。
このようなサービスだけで食っていこうと思ったら難しいでしょうね。竿竹屋くらいのノリじゃないと。
現代だと、Githubが圧倒的主流でしょうか。これはしばらくいけそうな気がしますね。しかし、CodeReposも圧倒的だったような気はしますが・・・
対抗馬は、だいぶメジャー度が低いように思いますが、Bitbucketがいいかもと思っています。
こちらは基本Mercurialのようですが、Gitも大丈夫の模様。
運営会社Atlassianは知りませんでしたが、JIRAの開発元だそう。さらにCloverとか懐かしい名前も見える。
懐かしいという感覚はちょっと寂しいですけど・・・
ということでおそらくBitbucket使って何かすると思います。</description></item><item><title>プログラミング教育</title><link>https://jqinglong.github.io/programmers-office/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E6%95%99%E8%82%B2/</link><pubDate>Sun, 14 Jul 2013 15:18:31 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E6%95%99%E8%82%B2/</guid><description>本日はこのようなイベントに参加。
http://catechkids-kickoff.peatix.com/
休日にいそいそとイベントに出かけるのも久しぶりかな？？
サーバーエージェントのグループ会社が子供向けの教育事業を行うにあたってのイベント。
登壇者はなかなか豪華？
お一人目はScratchの本を出したりしている阿部さん。
Scratchとは何かは、こちら参照。
http://etoys.jp/scratch/scratch.html
実は行くまで知りませんでしたが、パンフレットを見てSqueakかな？と思えた自分にほっとしました。
最近出た2.0ではWebアプリになったそうです。開発環境がWebアプリ。すごい世界だ。
Raspberry Piも下記を知っていたので、ギリセーフ。
http://itpro.nikkeibp.co.jp/linux/raspi/
キーワードは、「ほかの人が喜んでくれるからやる」「パクリではなく、オリジナルをリスペクト」。
お二人目は、小飼弾さん。
天才とは自分で決めることではない。だから、誰に会いに行くかが大切。
教えてくれる人ではなくて、自分を天才だとして扱ってくれる人。
これは確かに同感のところがあって、勉強は自分でするものであって、教えてもらえることというのはごく限られている。
そう言う意味では、天才を教育しようとしている事業のイベントでこのような話が出る逆説的な面白さがありますね。
三人目はドリコム内藤さん。
大人的には、一番面白い。
FREEMIUMの世界を教育事業にまで持ってきた。そしてそれを、協力と競走で煽る。
結局ゲームですよね。大の大人がいつまでゲームをやり続けるんだろうという気はしてしまう。
学習ソフトって、まだまだ発展の余地ありですね。
その後、子供たちが登場し、いろいろインタビュー。
インタビュアーの灘高生はなかなかの強者ですね。私が学生時代にやった一番無謀なバイトは灘中生の家庭教師でしたが、本当にあそこの生徒はむちゃくちゃですね（良い意味で）。
中学生くんも負けてません。以前出たイベントの感想を聞かれて「自分も緊張するんだなと思いました」。
お兄さんは、いくつになっても、人前で話すのは緊張しますよ・・・
イベント後は、今回このイベントを紹介してくださったKさん、Hさんと昼飲み。のつもりが、夜まで。
この年になっても将来を考えられない自分に、本日も反省しきり・・・
最後に、iPhoneアプリを作りたいHさんに、とっておきのアイデアを。
上記の学習ソフトの中で、語学学習、特にリスニング・発音学習ツールです。
以前こちらで紹介した、ABリピートツール。
https://www.programmers-office.ml/ab%e3%83%aa%e3%83%94%e3%83%bc%e3%83%88%e3%83%84%e3%83%bc%e3%83%ab%e3%80%80speater/
これは本当に素晴らしいのですが、あったら嬉しいのが、同時録音機能。
このツールでは、音声の切れ目を自動で判断して、かつ、その切れ目に空き時間を設定することができます。
例えば、1秒の切れ目を検出したら、そこで3秒待つようにすることができる。
なので、その3秒で自分で発音してみることができる。
これをまるごと録音できたら、お手本と自分の発音を比較できて良いと思うのです。
現状そのようなツールはないので、私の場合、このツールで覚えたあとに、カラオケツールで
お手本に自分の声をかぶせて録音したりしていますが、かぶせてしまうとやはり両方を
比較して聞くということが難しいのですよね。
というわけでよろしくお願いしますm(_ _)m</description></item><item><title>JSTQB無事合格</title><link>https://jqinglong.github.io/programmers-office/jstqb%E7%84%A1%E4%BA%8B%E5%90%88%E6%A0%BC/</link><pubDate>Fri, 09 Oct 2009 14:33:05 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/jstqb%E7%84%A1%E4%BA%8B%E5%90%88%E6%A0%BC/</guid><description>とりあえず、ほっ
演習で学ぶ ソフトウェアテスト特訓150問 JSTQBテスト技術者認定Foundation対応
正木 威寛
おすすめ度:4.5
レビュー件数:3
Amazonで購入
楽天ブックスで購入[楽天スーパーポイント発生]
ビーケーワン（ｂｋ１）で購入[コンビニ後払いあり]
セブンアンドワイで購入[セブン-イレブン受取りなら送料０円]boopleで購入[100円で1ポイント] &amp;lt;tr&amp;gt; &amp;lt;td colspan=&amp;quot;2&amp;quot;&amp;gt; &amp;lt;div style=&amp;quot;float: right; &amp;quot;&amp;gt; &amp;lt;a href=&amp;quot;http://affibook.appspot.com/&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;AffiBook!!&amp;lt;/a&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt; &amp;lt;div class=&amp;quot;zemanta-pixie&amp;quot;&amp;gt; &amp;lt;img class=&amp;quot;zemanta-pixie-img&amp;quot; alt=&amp;quot;&amp;quot; src=&amp;quot;https://i1.wp.com/img.zemanta.com/pixy.gif&amp;quot; data-recalc-dims=&amp;quot;1&amp;quot; /&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;p class=&amp;quot;scribefire-powered&amp;quot;&amp;gt; Powered by &amp;lt;a href=&amp;quot;http://www.scribefire.com/&amp;quot;&amp;gt;ScribeFire&amp;lt;/a&amp;gt;. &amp;lt;/p&amp;gt;</description></item><item><title>試験たいさ君</title><link>https://jqinglong.github.io/programmers-office/%E8%A9%A6%E9%A8%93%E3%81%9F%E3%81%84%E3%81%95%E5%90%9B/</link><pubDate>Sat, 03 Oct 2009 06:29:24 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E8%A9%A6%E9%A8%93%E3%81%9F%E3%81%84%E3%81%95%E5%90%9B/</guid><description>明日は、ロジスティクス管理3級の試験です。
ただ勉強するのも面白みに欠ける、ということでこんなものを作ってみました。
試験たいさ君
こちらでは過去問題のPDFも置いてあるのですが、PDFで文字コピーのパスワードがかかっているな、と思ったら転載禁止とのこと。
せこいな。
ということで、問題も適当に自分でアレンジしながらの登録なので、一向に問題数は増えませんが、直前の知識確認を携帯でできるというのはまあまあ良いのではないでしょうか？
みんなが本を読んでいる横で「俺は余裕だぜ」的な顔をして携帯を見てる、という使い方もOKです。
対応試験も、中国語検定や、環境カオリスタ検定（笑）など、今後続々と増えて行く予定です（本当か？）。
試験対策に、「試験たいさ君」、是非！
※こんなアナウンスを会社でもしようと思ったのですが、納期に間に合わず・・・orz
まじめな話、テキストはおすすめですよ。こっちよりも、オペレーションがさらにおすすめだとは思いますが。
ロジスティクス管理（3級）
ビジネス・キャリア検定試験標準テキスト
楽天ブックスで購入[楽天スーパーポイント発生] ビーケーワン（ｂｋ１）で購入[コンビニ後払いあり] セブンアンドワイで購入[セブン-イレブン受取りなら送料０円]boopleで購入[100円で1ポイント] AffiBook!! Powered by ScribeFire.</description></item><item><title>ハッカーと画家</title><link>https://jqinglong.github.io/programmers-office/%E3%83%8F%E3%83%83%E3%82%AB%E3%83%BC%E3%81%A8%E7%94%BB%E5%AE%B6/</link><pubDate>Sat, 28 Oct 2006 04:58:18 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E3%83%8F%E3%83%83%E3%82%AB%E3%83%BC%E3%81%A8%E7%94%BB%E5%AE%B6/</guid><description>これは、ある意味、「達人ハッカー」ですね。
一つ一つ面白いですが、一点取り上げたいと思います。
 「もうひとつの未来への道」で書かれているのは
メインフレームの時代、アプリケーションは全てサーバベースだった。なぜ、デスクトップコンピュータがメインフレームに勝ったのか、それは安かったために、多数の小さい会社・ハッカーが良いソフトを書くことが出来たから。 現在は、デスクトップコンピュータをサーバとして使用できるので価格の問題は無い。 ところが、デスクトップソフトウェアは色々なOSのために書かなければならないということが制約になる。それに対して、サーバアプリであれば、開発者は好きなプラットフォーム・言語を選択できる。
その結果、多くの会社・ハッカーは、サーバアプリケーションでよいソフトを沢山書くことが出来る。
・・・という内容です。
では、今後どうなるか。
私が思うに、現在自分で商売を始めようと思うときに（アイデアはある前提）おそらくネックになると思うのはサーバマシン構成です。うまくいきそうになったら何百台並べる・・・なんて無理、と思ってしまいます。
とすると、いかにクライアントの資源を活用しながら、かつクライアント環境に依存しないアプリを作るか、という一見矛盾するようなところが戦場になるのかなと言う気がします。
でも、JAVAにしろ、.NETにしろ、本当はそこを狙ってきたはずですから、そんなに遠い話ではないですよね。Ajaxの動きを萌芽として、これからはそんな感じになるのでしょう。さあ、何を始めよう・・・。
ハッカーと画家 コンピュータ時代の創造者たち ポール グレアム Paul Graham 川合 史朗 オーム社 2005-01 売り上げランキング : 26839 おすすめ平均 エンジニアを組織、管理している立場の人間にぜひ読んでもらいたい。 共感！！ 開発疲れしたあなたに ハッカーの川合さんが翻訳したハッカーについての本 単純に読むべし by G-Tools , 2006/10/28</description></item><item><title>次は　達人プログラマー</title><link>https://jqinglong.github.io/programmers-office/%E6%AC%A1%E3%81%AF%E3%80%80%E9%81%94%E4%BA%BA%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9E%E3%83%BC/</link><pubDate>Sat, 25 Jun 2005 15:15:17 +0000</pubDate><guid>https://jqinglong.github.io/programmers-office/%E6%AC%A1%E3%81%AF%E3%80%80%E9%81%94%E4%BA%BA%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9E%E3%83%BC/</guid><description>というわけで次は、課題図書（笑）、「達人プログラマー―ソフトウェア開発に不可欠な基礎知識 」を読み始めています。
これまでVSSオンリーでCVSは使ったことがなかったので、微妙な言葉使いの違いとか、理解しておきたいと思います。
達人プログラマー―ソフトウェア開発に不可欠な基礎知識 デビッド・トーマス アンドリュー・ハント マイク・クラーク 長瀬 嘉秀
アスキー 2005-03
売り上げランキング : 3,995 Amazonで詳しく見るby G-Tools &amp;lt;p&amp;gt; &amp;lt;a href=&amp;quot;http://www.amazon.co.jp/exec/obidos/ASIN/4891004568/konnokiyotaka-22/ref=nosim/&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;&amp;lt;img src=&amp;quot;https://i0.wp.com/images.amazon.com/images/P/4891004568.09._SCTHUMBZZZ_.jpg&amp;quot; border=&amp;quot;0&amp;quot; alt=&amp;quot;コードコンプリート―完全なプログラミングを目指して (下)&amp;quot; data-recalc-dims=&amp;quot;1&amp;quot; /&amp;gt;&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;quot;http://www.amazon.co.jp/exec/obidos/ASIN/489100455X/konnokiyotaka-22/ref=nosim/&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;&amp;lt;img src=&amp;quot;https://i0.wp.com/images.amazon.com/images/P/489100455X.09._SCTHUMBZZZ_.jpg&amp;quot; border=&amp;quot;0&amp;quot; alt=&amp;quot;コードコンプリート―完全なプログラミングを目指して (上)&amp;quot; data-recalc-dims=&amp;quot;1&amp;quot; /&amp;gt;&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;quot;http://www.amazon.co.jp/exec/obidos/ASIN/4798105538/konnokiyotaka-22/ref=nosim/&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;&amp;lt;img src=&amp;quot;https://i1.wp.com/images.amazon.com/images/P/4798105538.09._SCTHUMBZZZ_.jpg&amp;quot; border=&amp;quot;0&amp;quot; alt=&amp;quot;エンタープライズ アプリケーションアーキテクチャパターン&amp;quot; data-recalc-dims=&amp;quot;1&amp;quot; /&amp;gt;&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;quot;http://www.amazon.co.jp/exec/obidos/ASIN/4798108715/konnokiyotaka-22/ref=nosim/&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;&amp;lt;img src=&amp;quot;https://i2.wp.com/images.amazon.com/images/P/4798108715.09._SCTHUMBZZZ_.jpg&amp;quot; border=&amp;quot;0&amp;quot; alt=&amp;quot;ソフトウェア開発の持つべき文化&amp;quot; data-recalc-dims=&amp;quot;1&amp;quot; /&amp;gt;&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;quot;http://www.amazon.co.jp/exec/obidos/ASIN/4798106631/konnokiyotaka-22/ref=nosim/&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;&amp;lt;img src=&amp;quot;https://i1.wp.com/images.amazon.com/images/P/4798106631.09._SCTHUMBZZZ_.jpg&amp;quot; border=&amp;quot;0&amp;quot; alt=&amp;quot;Eclipseモデリングフレームワーク&amp;quot; data-recalc-dims=&amp;quot;1&amp;quot; /&amp;gt;&amp;lt;/a&amp;gt; &amp;lt;/p&amp;gt;</description></item></channel></rss>